C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBFS_HID
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USBFS_hid.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBFS_hid.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBU
                    -G) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/USBFS_hid.lst) CD OT(5,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\USBFS_hid.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBFS_hid.c
   3          * Version 2.80
   4          *
   5          * Description:
   6          *  USB HID Class request handler.
   7          *
   8          * Related Document:
   9          *  Device Class Definition for Human Interface Devices (HID) Version 1.11
  10          *
  11          * Note:
  12          *
  13          ********************************************************************************
  14          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  15          * You may use this file only in accordance with the license, terms, conditions,
  16          * disclaimers, and limitations in the end user license agreement accompanying
  17          * the software package with which this file was provided.
  18          *******************************************************************************/
  19          
  20          #include "USBFS.h"
  21          
  22          #if defined(USBFS_ENABLE_HID_CLASS)
  23          
  24          #include "USBFS_pvt.h"
  25          #include "USBFS_hid.h"
  26          
  27          
  28          
  29          /***************************************
  30          *    HID Variables
  31          ***************************************/
  32          
  33          volatile uint8 USBFS_hidProtocol[USBFS_MAX_INTERFACES_NUMBER];  /* HID device protocol status */
  34          volatile uint8 USBFS_hidIdleRate[USBFS_MAX_INTERFACES_NUMBER];  /* HID device idle reload value */
  35          volatile uint8 USBFS_hidIdleTimer[USBFS_MAX_INTERFACES_NUMBER]; /* HID device idle rate value */
  36          
  37          
  38          /***************************************
  39          * Custom Declarations
  40          ***************************************/
  41          
  42          /* `#START HID_CUSTOM_DECLARATIONS` Place your declaration here */
  43          
  44          /* `#END` */
  45          
  46          
  47          /*******************************************************************************
  48          * Function Name: USBFS_UpdateHIDTimer
  49          ********************************************************************************
  50          *
  51          * Summary:
  52          *  Updates the HID report timer and reloads it if expired
  53          *
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 2   

  54          * Parameters:
  55          *  interface:  Interface Number.
  56          *
  57          * Return:
  58          *  status.
  59          *
  60          * Reentrant:
  61          *  No.
  62          *
  63          *******************************************************************************/
  64          uint8 USBFS_UpdateHIDTimer(uint8 interface) 
  65          {
  66   1          uint8 stat = USBFS_IDLE_TIMER_INDEFINITE;
  67   1      
  68   1          if(USBFS_hidIdleRate[interface] != 0u)
  69   1          {
  70   2              if(USBFS_hidIdleTimer[interface] > 0u)
  71   2              {
  72   3                  USBFS_hidIdleTimer[interface]--;
  73   3                  stat = USBFS_IDLE_TIMER_RUNNING;
  74   3              }
  75   2              else
  76   2              {
  77   3                  USBFS_hidIdleTimer[interface] = USBFS_hidIdleRate[interface];
  78   3                  stat = USBFS_IDLE_TIMER_EXPIRED;
  79   3              }
  80   2          }
  81   1      
  82   1          return(stat);
  83   1      }
  84          
  85          
  86          /*******************************************************************************
  87          * Function Name: USBFS_GetProtocol
  88          ********************************************************************************
  89          *
  90          * Summary:
  91          *  Returns the selected protocol value to the application
  92          *
  93          * Parameters:
  94          *  interface:  Interface Number.
  95          *
  96          * Return:
  97          *  Interface protocol.
  98          *
  99          *******************************************************************************/
 100          uint8 USBFS_GetProtocol(uint8 interface) 
 101          {
 102   1          return(USBFS_hidProtocol[interface]);
 103   1      }
 104          
 105          
 106          /*******************************************************************************
 107          * Function Name: USBFS_DispatchHIDClassRqst
 108          ********************************************************************************
 109          *
 110          * Summary:
 111          *  This routine dispatches class requests
 112          *
 113          * Parameters:
 114          *  None.
 115          *
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 3   

 116          * Return:
 117          *  requestHandled
 118          *
 119          * Reentrant:
 120          *  No.
 121          *
 122          *******************************************************************************/
 123          uint8 USBFS_DispatchHIDClassRqst(void) 
 124          {
 125   1          uint8 requestHandled = USBFS_FALSE;
 126   1          uint8 interfaceNumber;
 127   1      
 128   1          interfaceNumber = CY_GET_REG8(USBFS_wIndexLo);
 129   1          if ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_DIR_MASK) == USBFS_RQST_DIR_D2H)
 130   1          {   /* Control Read */
 131   2              switch (CY_GET_REG8(USBFS_bRequest))
 132   2              {
 133   3                  case USBFS_GET_DESCRIPTOR:
 134   3                      if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_HID_CLASS)
 135   3                      {
 136   4                          USBFS_FindHidClassDecriptor();
 137   4                          if (USBFS_currentTD.count != 0u)
 138   4                          {
 139   5                              requestHandled = USBFS_InitControlRead();
 140   5                          }
 141   4                      }
 142   3                      else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_HID_REPORT)
 143   3                      {
 144   4                          USBFS_FindReportDescriptor();
 145   4                          if (USBFS_currentTD.count != 0u)
 146   4                          {
 147   5                              requestHandled = USBFS_InitControlRead();
 148   5                          }
 149   4                      }
 150   3                      else
 151   3                      {   /* requestHandled is initialezed as FALSE by default */
 152   4                      }
 153   3                      break;
 154   3                  case USBFS_HID_GET_REPORT:
 155   3                      USBFS_FindReport();
 156   3                      if (USBFS_currentTD.count != 0u)
 157   3                      {
 158   4                          requestHandled = USBFS_InitControlRead();
 159   4                      }
 160   3                      break;
 161   3      
 162   3                  case USBFS_HID_GET_IDLE:
 163   3                      /* This function does not support multiple reports per interface*/
 164   3                      /* Validate interfaceNumber and Report ID (should be 0) */
 165   3                      if( (interfaceNumber < USBFS_MAX_INTERFACES_NUMBER) &&
 166   3                          (CY_GET_REG8(USBFS_wValueLo) == 0u ) ) /* Do not support Idle per Report ID */
 167   3                      {
 168   4                          USBFS_currentTD.count = 1u;
 169   4                          USBFS_currentTD.pData = &USBFS_hidIdleRate[interfaceNumber];
 170   4                          requestHandled  = USBFS_InitControlRead();
 171   4                      }
 172   3                      break;
 173   3                  case USBFS_HID_GET_PROTOCOL:
 174   3                      /* Validate interfaceNumber */
 175   3                      if( interfaceNumber < USBFS_MAX_INTERFACES_NUMBER)
 176   3                      {
 177   4                          USBFS_currentTD.count = 1u;
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 4   

 178   4                          USBFS_currentTD.pData = &USBFS_hidProtocol[interfaceNumber];
 179   4                          requestHandled  = USBFS_InitControlRead();
 180   4                      }
 181   3                      break;
 182   3                  default:    /* requestHandled is initialized as FALSE by default */
 183   3                      break;
 184   3              }
 185   2          }
 186   1          else if ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_DIR_MASK) ==
 187   1                                                                                  USBFS_RQST_DIR_H2D)
 188   1          {   /* Control Write */
 189   2              switch (CY_GET_REG8(USBFS_bRequest))
 190   2              {
 191   3                  case USBFS_HID_SET_REPORT:
 192   3                      USBFS_FindReport();
 193   3                      if (USBFS_currentTD.count != 0u)
 194   3                      {
 195   4                          requestHandled = USBFS_InitControlWrite();
 196   4                      }
 197   3                      break;
 198   3                  case USBFS_HID_SET_IDLE:
 199   3                      /* This function does not support multiple reports per interface */
 200   3                      /* Validate interfaceNumber and Report ID (should be 0) */
 201   3                      if( (interfaceNumber < USBFS_MAX_INTERFACES_NUMBER) &&
 202   3                          (CY_GET_REG8(USBFS_wValueLo) == 0u ) ) /* Do not support Idle per Report ID */
 203   3                      {
 204   4                          USBFS_hidIdleRate[interfaceNumber] = CY_GET_REG8(USBFS_wValueHi);
 205   4                          /* With regards to HID spec: "7.2.4 Set_Idle Request"
 206   4                          *  Latency. If the current period has gone past the
 207   4                          *  newly proscribed time duration, then a report
 208   4                          *  will be generated immediately.
 209   4                          */
 210   4                          if(USBFS_hidIdleRate[interfaceNumber] <
 211   4                             USBFS_hidIdleTimer[interfaceNumber])
 212   4                          {
 213   5                              /* Set the timer to zero and let the UpdateHIDTimer() API return IDLE_TIMER_EXPIRE
             -D status*/
 214   5                              USBFS_hidIdleTimer[interfaceNumber] = 0u;
 215   5                          }
 216   4                          /* If the new request is received within 4 milliseconds
 217   4                          *  (1 count) of the end of the current period, then the
 218   4                          *  new request will have no effect until after the report.
 219   4                          */
 220   4                          else if(USBFS_hidIdleTimer[interfaceNumber] <= 1u)
 221   4                          {
 222   5                              /* Do nothing.
 223   5                              *  Let the UpdateHIDTimer() API continue to work and
 224   5                              *  return IDLE_TIMER_EXPIRED status
 225   5                              */
 226   5                          }
 227   4                          else
 228   4                          {   /* Reload the timer*/
 229   5                              USBFS_hidIdleTimer[interfaceNumber] =
 230   5                              USBFS_hidIdleRate[interfaceNumber];
 231   5                          }
 232   4                          requestHandled = USBFS_InitNoDataControlTransfer();
 233   4                      }
 234   3                      break;
 235   3      
 236   3                  case USBFS_HID_SET_PROTOCOL:
 237   3                      /* Validate interfaceNumber and protocol (must be 0 or 1) */
 238   3                      if( (interfaceNumber < USBFS_MAX_INTERFACES_NUMBER) &&
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 5   

 239   3                          (CY_GET_REG8(USBFS_wValueLo) <= 1u) )
 240   3                      {
 241   4                          USBFS_hidProtocol[interfaceNumber] = CY_GET_REG8(USBFS_wValueLo);
 242   4                          requestHandled = USBFS_InitNoDataControlTransfer();
 243   4                      }
 244   3                      break;
 245   3                  default:    /* requestHandled is initialized as FALSE by default */
 246   3                      break;
 247   3              }
 248   2          }
 249   1          else
 250   1          {   /* requestHandled is initialized as FALSE by default */
 251   2          }
 252   1      
 253   1          return(requestHandled);
 254   1      }
 255          
 256          
 257          /*******************************************************************************
 258          * Function Name: USB_FindHidClassDescriptor
 259          ********************************************************************************
 260          *
 261          * Summary:
 262          *  This routine find Hid Class Descriptor pointer based on the Interface number
 263          *  and Alternate setting then loads the currentTD structure with the address of
 264          *  the buffer and the size.
 265          *  The HID Class Descriptor resides inside the config descriptor.
 266          *
 267          * Parameters:
 268          *  None.
 269          *
 270          * Return:
 271          *  currentTD
 272          *
 273          * Reentrant:
 274          *  No.
 275          *
 276          *******************************************************************************/
 277          void USBFS_FindHidClassDecriptor(void) 
 278          {
 279   1          const T_USBFS_LUT CYCODE *pTmp;
 280   1          volatile uint8 *pDescr;
 281   1          uint8 interfaceN;
 282   1      
 283   1          pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 284   1          interfaceN = CY_GET_REG8(USBFS_wIndexLo);
 285   1          /* Third entry in the LUT starts the Interface Table pointers */
 286   1          /* Now use the request interface number*/
 287   1          pTmp = &pTmp[interfaceN + 2u];
 288   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_TABLE */
 289   1          pTmp = (const T_USBFS_LUT CYCODE *) pTmp->p_list;
 290   1          /* Now use Alternate setting number */
 291   1          pTmp = &pTmp[USBFS_interfaceSetting[interfaceN]];
 292   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_ALTERNATEi_HID_TABLE */
 293   1          pTmp = (const T_USBFS_LUT CYCODE *) pTmp->p_list;
 294   1          /* Fifth entry in the LUT points to Hid Class Descriptor in Configuration Descriptor */
 295   1          pTmp = &pTmp[4u];
 296   1          pDescr = (volatile uint8 *)pTmp->p_list;
 297   1          /* The first byte contains the descriptor length */
 298   1          USBFS_currentTD.count = *pDescr;
 299   1          USBFS_currentTD.pData = pDescr;
 300   1      }
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 6   

 301          
 302          
 303          /*******************************************************************************
 304          * Function Name: USB_FindReportDescriptor
 305          ********************************************************************************
 306          *
 307          * Summary:
 308          *  This routine find Hid Report Descriptor pointer based on the Interface
 309          *  number, then loads the currentTD structure with the address of the buffer
 310          *  and the size.
 311          *  Hid Report Descriptor is located after IN/OUT/FEATURE reports.
 312          *
 313          * Parameters:
 314          *   void
 315          *
 316          * Return:
 317          *  currentTD
 318          *
 319          * Reentrant:
 320          *  No.
 321          *
 322          *******************************************************************************/
 323          void USBFS_FindReportDescriptor(void) 
 324          {
 325   1          const T_USBFS_LUT CYCODE *pTmp;
 326   1          volatile uint8 *pDescr;
 327   1          uint8 interfaceN;
 328   1      
 329   1          pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 330   1          interfaceN = CY_GET_REG8(USBFS_wIndexLo);
 331   1          /* Third entry in the LUT starts the Interface Table pointers */
 332   1          /* Now use the request interface number */
 333   1          pTmp = &pTmp[interfaceN + 2u];
 334   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_TABLE */
 335   1          pTmp = (const T_USBFS_LUT CYCODE *) pTmp->p_list;
 336   1          /* Now use Alternate setting number */
 337   1          pTmp = &pTmp[USBFS_interfaceSetting[interfaceN]];
 338   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_ALTERNATEi_HID_TABLE */
 339   1          pTmp = (const T_USBFS_LUT CYCODE *) pTmp->p_list;
 340   1          /* Fourth entry in the LUT starts the Hid Report Descriptor */
 341   1          pTmp = &pTmp[3u];
 342   1          pDescr = (volatile uint8 *)pTmp->p_list;
 343   1          /* The 1st and 2nd bytes of descriptor contain its length. LSB is 1st. */
 344   1          USBFS_currentTD.count =  (((uint16)pDescr[1u] << 8u) | pDescr[0u]);
 345   1          USBFS_currentTD.pData = &pDescr[2u];
 346   1      }
 347          
 348          
 349          /*******************************************************************************
 350          * Function Name: USBFS_FindReport
 351          ********************************************************************************
 352          *
 353          * Summary:
 354          *  This routine sets up a transfer based on the Interface number, Report Type
 355          *  and Report ID, then loads the currentTD structure with the address of the
 356          *  buffer and the size.  The caller has to decide if it is a control read or
 357          *  control write.
 358          *
 359          * Parameters:
 360          *  None.
 361          *
 362          * Return:
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 7   

 363          *  currentTD
 364          *
 365          * Reentrant:
 366          *  No.
 367          *
 368          *******************************************************************************/
 369          void USBFS_FindReport(void) 
 370          {
 371   1          const T_USBFS_LUT CYCODE *pTmp;
 372   1          T_USBFS_TD *pTD;
 373   1          uint8 interfaceN;
 374   1          uint8 reportType;
 375   1      
 376   1          /* `#START HID_FINDREPORT` Place custom handling here */
 377   1      
 378   1          /* `#END` */
 379   1          
 380   1          #ifdef USBFS_FIND_REPORT_CALLBACK
                      USBFS_FindReport_Callback();
                  #endif /* USBFS_FIND_REPORT_CALLBACK */
 383   1          
 384   1          USBFS_currentTD.count = 0u;   /* Init not supported condition */
 385   1          pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 386   1          reportType = CY_GET_REG8(USBFS_wValueHi);
 387   1          interfaceN = CY_GET_REG8(USBFS_wIndexLo);
 388   1          /* Third entry in the LUT COnfiguration Table starts the Interface Table pointers */
 389   1          /* Now use the request interface number */
 390   1          pTmp = &pTmp[interfaceN + 2u];
 391   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_TABLE*/
 392   1          pTmp = (const T_USBFS_LUT CYCODE *) pTmp->p_list;
 393   1          if(interfaceN < USBFS_MAX_INTERFACES_NUMBER)
 394   1          {
 395   2              /* Now use Alternate setting number */
 396   2              pTmp = &pTmp[USBFS_interfaceSetting[interfaceN]];
 397   2              /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_ALTERNATEi_HID_TABLE */
 398   2              pTmp = (const T_USBFS_LUT CYCODE *) pTmp->p_list;
 399   2              /* Validate reportType to comply with "7.2.1 Get_Report Request" */
 400   2              if((reportType >= USBFS_HID_GET_REPORT_INPUT) &&
 401   2                 (reportType <= USBFS_HID_GET_REPORT_FEATURE))
 402   2              {
 403   3                  /* Get the entry proper TD (IN, OUT or Feature Report Table)*/
 404   3                  pTmp = &pTmp[reportType - 1u];
 405   3                  reportType = CY_GET_REG8(USBFS_wValueLo);    /* Get reportID */
 406   3                  /* Validate table support by the HID descriptor, compare table count with reportID */
 407   3                  if(pTmp->c >= reportType)
 408   3                  {
 409   4                      pTD = (T_USBFS_TD *) pTmp->p_list;
 410   4                      pTD = &pTD[reportType];                          /* select entry depend on report ID*/
 411   4                      USBFS_currentTD.pData = pTD->pData;   /* Buffer pointer */
 412   4                      USBFS_currentTD.count = pTD->count;   /* Buffer Size */
 413   4                      USBFS_currentTD.pStatusBlock = pTD->pStatusBlock;
 414   4                  }
 415   3              }
 416   2          }
 417   1      }
 418          
 419          
 420          /*******************************************************************************
 421          * Additional user functions supporting HID Requests
 422          ********************************************************************************/
 423          
 424          /* `#START HID_FUNCTIONS` Place any additional functions here */
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 8   

 425          
 426          /* `#END` */
 427          
 428          #endif  /*  USBFS_ENABLE_HID_CLASS */
 429          
 430          
 431          /* [] END OF FILE */
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _USBFS_UpdateHIDTimer (BEGIN)
                                           ; SOURCE LINE # 64
;---- Variable 'interface' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
;---- Variable 'stat' assigned to Register 'R6' ----
0000 E4                CLR     A
0001 FE                MOV     R6,A
                                           ; SOURCE LINE # 68
0002 7400        R     MOV     A,#LOW USBFS_hidIdleRate
0004 2F                ADD     A,R7
0005 F582              MOV     DPL,A
0007 E4                CLR     A
0008 3400        R     ADDC    A,#HIGH USBFS_hidIdleRate
000A F583              MOV     DPH,A
000C E0                MOVX    A,@DPTR
000D 603B              JZ      ?C0001
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
000F 7400        R     MOV     A,#LOW USBFS_hidIdleTimer
0011 2F                ADD     A,R7
0012 F582              MOV     DPL,A
0014 E4                CLR     A
0015 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
0017 F583              MOV     DPH,A
0019 E0                MOVX    A,@DPTR
001A D3                SETB    C
001B 9400              SUBB    A,#00H
001D 4011              JC      ?C0002
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
001F 7400        R     MOV     A,#LOW USBFS_hidIdleTimer
0021 2F                ADD     A,R7
0022 F582              MOV     DPL,A
0024 E4                CLR     A
0025 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
0027 F583              MOV     DPH,A
0029 E0                MOVX    A,@DPTR
002A 14                DEC     A
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
002C 7E02              MOV     R6,#02H
                                           ; SOURCE LINE # 74
002E 801A              SJMP    ?C0001
0030         ?C0002:
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
0030 7400        R     MOV     A,#LOW USBFS_hidIdleRate
0032 2F                ADD     A,R7
0033 F582              MOV     DPL,A
0035 E4                CLR     A
0036 3400        R     ADDC    A,#HIGH USBFS_hidIdleRate
0038 F583              MOV     DPH,A
003A E0                MOVX    A,@DPTR
003B FD                MOV     R5,A
003C 7400        R     MOV     A,#LOW USBFS_hidIdleTimer
003E 2F                ADD     A,R7
003F F582              MOV     DPL,A
0041 E4                CLR     A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 10  

0042 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
0044 F583              MOV     DPH,A
0046 ED                MOV     A,R5
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
0048 7E01              MOV     R6,#01H
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
004A         ?C0001:
                                           ; SOURCE LINE # 82
004A AF06              MOV     R7,AR6
                                           ; SOURCE LINE # 83
004C         ?C0004:
004C 22                RET     
             ; FUNCTION _USBFS_UpdateHIDTimer (END)

             ; FUNCTION _USBFS_GetProtocol (BEGIN)
                                           ; SOURCE LINE # 100
;---- Variable 'interface' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0000 7400        R     MOV     A,#LOW USBFS_hidProtocol
0002 2F                ADD     A,R7
0003 F582              MOV     DPL,A
0005 E4                CLR     A
0006 3400        R     ADDC    A,#HIGH USBFS_hidProtocol
0008 F583              MOV     DPH,A
000A E0                MOVX    A,@DPTR
000B FF                MOV     R7,A
                                           ; SOURCE LINE # 103
000C         ?C0005:
000C 22                RET     
             ; FUNCTION _USBFS_GetProtocol (END)

             ; FUNCTION USBFS_DispatchHIDClassRqst (BEGIN)
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#requestHandled
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
0005 906004            MOV     DPTR,#06004H
0008 E0                MOVX    A,@DPTR
0009 900000      R     MOV     DPTR,#interfaceNumber
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
000D 906000            MOV     DPTR,#06000H
0010 E0                MOVX    A,@DPTR
0011 5480              ANL     A,#080H
0013 6480              XRL     A,#080H
0015 6003              JZ      $ + 5H
0017 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C 14                DEC     A
001D 6058              JZ      ?C0015
001F 14                DEC     A
0020 6070              JZ      ?C0017
0022 14                DEC     A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 11  

0023 7003              JNZ     $ + 5H
0025 020000      R     LJMP    ?C0019
0028 24FD              ADD     A,#0FDH
002A 6003              JZ      $ + 5H
002C 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
002F         ?C0008:
                                           ; SOURCE LINE # 134
002F 906003            MOV     DPTR,#06003H
0032 E0                MOVX    A,@DPTR
0033 B4211B            CJNE    A,#021H,?C0009
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0036 120000      R     LCALL   USBFS_FindHidClassDecriptor
                                           ; SOURCE LINE # 137
0039 900000      E     MOV     DPTR,#USBFS_currentTD
003C E0                MOVX    A,@DPTR
003D 7002              JNZ     ?C0044
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041         ?C0044:
0041 7003              JNZ     $ + 5H
0043 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 139
0046 120000      E     LCALL   USBFS_InitControlRead
0049 900000      R     MOV     DPTR,#requestHandled
004C EF                MOV     A,R7
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
004E 020000      R     LJMP    ?C0022
0051         ?C0009:
                                           ; SOURCE LINE # 142
0051 906003            MOV     DPTR,#06003H
0054 E0                MOVX    A,@DPTR
0055 6422              XRL     A,#022H
0057 6003              JZ      $ + 5H
0059 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
005C 120000      R     LCALL   USBFS_FindReportDescriptor
                                           ; SOURCE LINE # 145
005F 900000      E     MOV     DPTR,#USBFS_currentTD
0062 E0                MOVX    A,@DPTR
0063 7002              JNZ     ?C0045
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067         ?C0045:
0067 7003              JNZ     $ + 5H
0069 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
006C 120000      E     LCALL   USBFS_InitControlRead
006F 900000      R     MOV     DPTR,#requestHandled
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
0074 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 151
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 12  

                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
0077         ?C0015:
                                           ; SOURCE LINE # 155
0077 120000      R     LCALL   USBFS_FindReport
                                           ; SOURCE LINE # 156
007A 900000      E     MOV     DPTR,#USBFS_currentTD
007D E0                MOVX    A,@DPTR
007E 7002              JNZ     ?C0046
0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082         ?C0046:
0082 7003              JNZ     $ + 5H
0084 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0087 120000      E     LCALL   USBFS_InitControlRead
008A 900000      R     MOV     DPTR,#requestHandled
008D EF                MOV     A,R7
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
008F 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 162
0092         ?C0017:
                                           ; SOURCE LINE # 166
0092 900000      R     MOV     DPTR,#interfaceNumber
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 C3                CLR     C
0098 9401              SUBB    A,#01H
009A 4003              JC      $ + 5H
009C 020000      R     LJMP    ?C0022
009F 906002            MOV     DPTR,#06002H
00A2 E0                MOVX    A,@DPTR
00A3 6003              JZ      $ + 5H
00A5 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
00A8 900000      E     MOV     DPTR,#USBFS_currentTD
00AB F0                MOVX    @DPTR,A
00AC A3                INC     DPTR
00AD 04                INC     A
00AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
00AF 7400        R     MOV     A,#LOW USBFS_hidIdleRate
00B1 2F                ADD     A,R7
00B2 F9                MOV     R1,A
00B3 E4                CLR     A
00B4 3400        R     ADDC    A,#HIGH USBFS_hidIdleRate
00B6 FA                MOV     R2,A
00B7 7B01              MOV     R3,#01H
00B9 900000      E     MOV     DPTR,#USBFS_currentTD+02H
00BC 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 170
00BF 120000      E     LCALL   USBFS_InitControlRead
00C2 900000      R     MOV     DPTR,#requestHandled
00C5 EF                MOV     A,R7
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 13  

00C7 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 173
00CA         ?C0019:
                                           ; SOURCE LINE # 175
00CA 900000      R     MOV     DPTR,#interfaceNumber
00CD E0                MOVX    A,@DPTR
00CE FF                MOV     R7,A
00CF C3                CLR     C
00D0 9401              SUBB    A,#01H
00D2 4003              JC      $ + 5H
00D4 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
00D7 900000      E     MOV     DPTR,#USBFS_currentTD
00DA E4                CLR     A
00DB F0                MOVX    @DPTR,A
00DC A3                INC     DPTR
00DD 04                INC     A
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
00DF 7400        R     MOV     A,#LOW USBFS_hidProtocol
00E1 2F                ADD     A,R7
00E2 F9                MOV     R1,A
00E3 E4                CLR     A
00E4 3400        R     ADDC    A,#HIGH USBFS_hidProtocol
00E6 FA                MOV     R2,A
00E7 7B01              MOV     R3,#01H
00E9 900000      E     MOV     DPTR,#USBFS_currentTD+02H
00EC 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 179
00EF 120000      E     LCALL   USBFS_InitControlRead
00F2 900000      R     MOV     DPTR,#requestHandled
00F5 EF                MOV     A,R7
00F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
00F7 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
00FA 020000      R     LJMP    ?C0022
00FD         ?C0006:
                                           ; SOURCE LINE # 186
00FD 906000            MOV     DPTR,#06000H
0100 E0                MOVX    A,@DPTR
0101 5480              ANL     A,#080H
0103 6003              JZ      $ + 5H
0105 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0108 A3                INC     DPTR
0109 E0                MOVX    A,@DPTR
010A 24F6              ADD     A,#0F6H
010C 6028              JZ      ?C0027
010E 14                DEC     A
010F 7003              JNZ     $ + 5H
0111 020000      R     LJMP    ?C0033
0114 2402              ADD     A,#02H
0116 6003              JZ      $ + 5H
0118 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 190
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 14  

                                           ; SOURCE LINE # 191
011B         ?C0025:
                                           ; SOURCE LINE # 192
011B 120000      R     LCALL   USBFS_FindReport
                                           ; SOURCE LINE # 193
011E 900000      E     MOV     DPTR,#USBFS_currentTD
0121 E0                MOVX    A,@DPTR
0122 7002              JNZ     ?C0047
0124 A3                INC     DPTR
0125 E0                MOVX    A,@DPTR
0126         ?C0047:
0126 7003              JNZ     $ + 5H
0128 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
012B 120000      E     LCALL   USBFS_InitControlWrite
012E 900000      R     MOV     DPTR,#requestHandled
0131 EF                MOV     A,R7
0132 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
0133 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 198
0136         ?C0027:
                                           ; SOURCE LINE # 202
0136 900000      R     MOV     DPTR,#interfaceNumber
0139 E0                MOVX    A,@DPTR
013A FF                MOV     R7,A
013B C3                CLR     C
013C 9401              SUBB    A,#01H
013E 4003              JC      $ + 5H
0140 020000      R     LJMP    ?C0022
0143 906002            MOV     DPTR,#06002H
0146 E0                MOVX    A,@DPTR
0147 6003              JZ      $ + 5H
0149 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
014C A3                INC     DPTR
014D E0                MOVX    A,@DPTR
014E FE                MOV     R6,A
014F 7400        R     MOV     A,#LOW USBFS_hidIdleRate
0151 2F                ADD     A,R7
0152 F582              MOV     DPL,A
0154 E4                CLR     A
0155 3400        R     ADDC    A,#HIGH USBFS_hidIdleRate
0157 F583              MOV     DPH,A
0159 EE                MOV     A,R6
015A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 210
015B 7400        R     MOV     A,#LOW USBFS_hidIdleTimer
015D 2F                ADD     A,R7
015E F582              MOV     DPL,A
0160 E4                CLR     A
0161 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
0163 F583              MOV     DPH,A
0165 E0                MOVX    A,@DPTR
0166 FE                MOV     R6,A
0167 7400        R     MOV     A,#LOW USBFS_hidIdleRate
0169 2F                ADD     A,R7
016A F582              MOV     DPL,A
016C E4                CLR     A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 15  

016D 3400        R     ADDC    A,#HIGH USBFS_hidIdleRate
016F F583              MOV     DPH,A
0171 E0                MOVX    A,@DPTR
0172 C3                CLR     C
0173 9E                SUBB    A,R6
0174 5011              JNC     ?C0029
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 214
0176 900000      R     MOV     DPTR,#interfaceNumber
0179 E0                MOVX    A,@DPTR
017A 2400        R     ADD     A,#LOW USBFS_hidIdleTimer
017C F582              MOV     DPL,A
017E E4                CLR     A
017F 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
0181 F583              MOV     DPH,A
0183 E4                CLR     A
0184 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
0185 802C              SJMP    ?C0030
0187         ?C0029:
                                           ; SOURCE LINE # 220
0187 900000      R     MOV     DPTR,#interfaceNumber
018A E0                MOVX    A,@DPTR
018B FF                MOV     R7,A
018C 2400        R     ADD     A,#LOW USBFS_hidIdleTimer
018E F582              MOV     DPL,A
0190 E4                CLR     A
0191 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
0193 F583              MOV     DPH,A
0195 E0                MOVX    A,@DPTR
0196 D3                SETB    C
0197 9401              SUBB    A,#01H
0199 4018              JC      ?C0030
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 226
019B         ?C0031:
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
019B 7400        R     MOV     A,#LOW USBFS_hidIdleRate
019D 2F                ADD     A,R7
019E F582              MOV     DPL,A
01A0 E4                CLR     A
01A1 3400        R     ADDC    A,#HIGH USBFS_hidIdleRate
01A3 F583              MOV     DPH,A
01A5 E0                MOVX    A,@DPTR
01A6 FE                MOV     R6,A
01A7 7400        R     MOV     A,#LOW USBFS_hidIdleTimer
01A9 2F                ADD     A,R7
01AA F582              MOV     DPL,A
01AC E4                CLR     A
01AD 3400        R     ADDC    A,#HIGH USBFS_hidIdleTimer
01AF F583              MOV     DPH,A
01B1 EE                MOV     A,R6
01B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 231
01B3         ?C0030:
                                           ; SOURCE LINE # 232
01B3 120000      E     LCALL   USBFS_InitNoDataControlTransfer
01B6 900000      R     MOV     DPTR,#requestHandled
01B9 EF                MOV     A,R7
01BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 16  

                                           ; SOURCE LINE # 234
01BB 8028              SJMP    ?C0022
                                           ; SOURCE LINE # 236
01BD         ?C0033:
                                           ; SOURCE LINE # 239
01BD 900000      R     MOV     DPTR,#interfaceNumber
01C0 E0                MOVX    A,@DPTR
01C1 FF                MOV     R7,A
01C2 C3                CLR     C
01C3 9401              SUBB    A,#01H
01C5 501E              JNC     ?C0022
01C7 906002            MOV     DPTR,#06002H
01CA E0                MOVX    A,@DPTR
01CB 9401              SUBB    A,#01H
01CD 5016              JNC     ?C0022
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
01CF E0                MOVX    A,@DPTR
01D0 FE                MOV     R6,A
01D1 7400        R     MOV     A,#LOW USBFS_hidProtocol
01D3 2F                ADD     A,R7
01D4 F582              MOV     DPL,A
01D6 E4                CLR     A
01D7 3400        R     ADDC    A,#HIGH USBFS_hidProtocol
01D9 F583              MOV     DPH,A
01DB EE                MOV     A,R6
01DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 242
01DD 120000      E     LCALL   USBFS_InitNoDataControlTransfer
01E0 900000      R     MOV     DPTR,#requestHandled
01E3 EF                MOV     A,R7
01E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
01E5         ?C0022:
                                           ; SOURCE LINE # 253
01E5 900000      R     MOV     DPTR,#requestHandled
01E8 E0                MOVX    A,@DPTR
01E9 FF                MOV     R7,A
                                           ; SOURCE LINE # 254
01EA         ?C0037:
01EA 22                RET     
             ; FUNCTION USBFS_DispatchHIDClassRqst (END)

             ; FUNCTION USBFS_FindHidClassDecriptor (BEGIN)
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 283
0000 900000      E     MOV     DPTR,#USBFS_configuration
0003 E0                MOVX    A,@DPTR
0004 14                DEC     A
0005 FF                MOV     R7,A
0006 120000      E     LCALL   _USBFS_GetConfigTablePtr
0009 900000      R     MOV     DPTR,#pTmp
000C EE                MOV     A,R6
000D F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 17  

000E A3                INC     DPTR
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 284
0011 906004            MOV     DPTR,#06004H
0014 E0                MOVX    A,@DPTR
0015 900000      R     MOV     DPTR,#interfaceN
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
0019 E0                MOVX    A,@DPTR
001A 2402              ADD     A,#02H
001C FF                MOV     R7,A
001D E4                CLR     A
001E 33                RLC     A
001F FE                MOV     R6,A
0020 EF                MOV     A,R7
0021 7802              MOV     R0,#02H
0023         ?C0048:
0023 C3                CLR     C
0024 33                RLC     A
0025 CE                XCH     A,R6
0026 33                RLC     A
0027 CE                XCH     A,R6
0028 D8F9              DJNZ    R0,?C0048
002A FF                MOV     R7,A
002B 900000      R     MOV     DPTR,#pTmp+01H
002E E0                MOVX    A,@DPTR
002F 2F                ADD     A,R7
0030 FF                MOV     R7,A
0031 900000      R     MOV     DPTR,#pTmp
0034 E0                MOVX    A,@DPTR
0035 3E                ADDC    A,R6
0036 FE                MOV     R6,A
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 289
003B F582              MOV     DPL,A
003D 8E83              MOV     DPH,R6
003F A3                INC     DPTR
0040 120000      E     LCALL   ?C?PLDCODE
0043 AF01              MOV     R7,AR1
0045 900000      R     MOV     DPTR,#pTmp
0048 EA                MOV     A,R2
0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 291
004D A3                INC     DPTR
004E E0                MOVX    A,@DPTR
004F 2400        E     ADD     A,#LOW USBFS_interfaceSetting
0051 F582              MOV     DPL,A
0053 E4                CLR     A
0054 3400        E     ADDC    A,#HIGH USBFS_interfaceSetting
0056 F583              MOV     DPH,A
0058 E0                MOVX    A,@DPTR
0059 75F004            MOV     B,#04H
005C A4                MUL     AB
005D FF                MOV     R7,A
005E AEF0              MOV     R6,B
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 18  

0060 900000      R     MOV     DPTR,#pTmp+01H
0063 E0                MOVX    A,@DPTR
0064 2F                ADD     A,R7
0065 F0                MOVX    @DPTR,A
0066 900000      R     MOV     DPTR,#pTmp
0069 E0                MOVX    A,@DPTR
006A 3E                ADDC    A,R6
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
006C E0                MOVX    A,@DPTR
006D FE                MOV     R6,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 F582              MOV     DPL,A
0072 8E83              MOV     DPH,R6
0074 A3                INC     DPTR
0075 120000      E     LCALL   ?C?PLDCODE
0078 AE02              MOV     R6,AR2
007A AF01              MOV     R7,AR1
007C 900000      R     MOV     DPTR,#pTmp
007F EE                MOV     A,R6
0080 F0                MOVX    @DPTR,A
0081 A3                INC     DPTR
0082 EF                MOV     A,R7
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
0084 2410              ADD     A,#010H
0086 FF                MOV     R7,A
0087 E4                CLR     A
0088 3E                ADDC    A,R6
0089 FE                MOV     R6,A
008A 900000      R     MOV     DPTR,#pTmp
008D F0                MOVX    @DPTR,A
008E A3                INC     DPTR
008F EF                MOV     A,R7
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
0091 F582              MOV     DPL,A
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 120000      E     LCALL   ?C?PLDCODE
;---- Variable 'pDescr' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 298
0099 120000      E     LCALL   ?C?CLDPTR
009C FF                MOV     R7,A
009D 900000      E     MOV     DPTR,#USBFS_currentTD
00A0 E4                CLR     A
00A1 F0                MOVX    @DPTR,A
00A2 A3                INC     DPTR
00A3 EF                MOV     A,R7
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
00A5 900000      E     MOV     DPTR,#USBFS_currentTD+02H
00A8 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 300
00AB 22                RET     
             ; FUNCTION USBFS_FindHidClassDecriptor (END)

             ; FUNCTION USBFS_FindReportDescriptor (BEGIN)
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 329
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 19  

0000 900000      E     MOV     DPTR,#USBFS_configuration
0003 E0                MOVX    A,@DPTR
0004 14                DEC     A
0005 FF                MOV     R7,A
0006 120000      E     LCALL   _USBFS_GetConfigTablePtr
0009 900000      R     MOV     DPTR,#pTmp
000C EE                MOV     A,R6
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 330
0011 906004            MOV     DPTR,#06004H
0014 E0                MOVX    A,@DPTR
0015 900000      R     MOV     DPTR,#interfaceN
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 333
0019 E0                MOVX    A,@DPTR
001A 2402              ADD     A,#02H
001C FF                MOV     R7,A
001D E4                CLR     A
001E 33                RLC     A
001F FE                MOV     R6,A
0020 EF                MOV     A,R7
0021 7802              MOV     R0,#02H
0023         ?C0049:
0023 C3                CLR     C
0024 33                RLC     A
0025 CE                XCH     A,R6
0026 33                RLC     A
0027 CE                XCH     A,R6
0028 D8F9              DJNZ    R0,?C0049
002A FF                MOV     R7,A
002B 900000      R     MOV     DPTR,#pTmp+01H
002E E0                MOVX    A,@DPTR
002F 2F                ADD     A,R7
0030 FF                MOV     R7,A
0031 900000      R     MOV     DPTR,#pTmp
0034 E0                MOVX    A,@DPTR
0035 3E                ADDC    A,R6
0036 FE                MOV     R6,A
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
003B F582              MOV     DPL,A
003D 8E83              MOV     DPH,R6
003F A3                INC     DPTR
0040 120000      E     LCALL   ?C?PLDCODE
0043 AF01              MOV     R7,AR1
0045 900000      R     MOV     DPTR,#pTmp
0048 EA                MOV     A,R2
0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 337
004D 900000      R     MOV     DPTR,#interfaceN
0050 E0                MOVX    A,@DPTR
0051 2400        E     ADD     A,#LOW USBFS_interfaceSetting
0053 F582              MOV     DPL,A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 20  

0055 E4                CLR     A
0056 3400        E     ADDC    A,#HIGH USBFS_interfaceSetting
0058 F583              MOV     DPH,A
005A E0                MOVX    A,@DPTR
005B 75F004            MOV     B,#04H
005E A4                MUL     AB
005F FF                MOV     R7,A
0060 AEF0              MOV     R6,B
0062 900000      R     MOV     DPTR,#pTmp+01H
0065 E0                MOVX    A,@DPTR
0066 2F                ADD     A,R7
0067 F0                MOVX    @DPTR,A
0068 900000      R     MOV     DPTR,#pTmp
006B E0                MOVX    A,@DPTR
006C 3E                ADDC    A,R6
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 339
006E E0                MOVX    A,@DPTR
006F FE                MOV     R6,A
0070 A3                INC     DPTR
0071 E0                MOVX    A,@DPTR
0072 F582              MOV     DPL,A
0074 8E83              MOV     DPH,R6
0076 A3                INC     DPTR
0077 120000      E     LCALL   ?C?PLDCODE
007A AE02              MOV     R6,AR2
007C AF01              MOV     R7,AR1
007E 900000      R     MOV     DPTR,#pTmp
0081 EE                MOV     A,R6
0082 F0                MOVX    @DPTR,A
0083 A3                INC     DPTR
0084 EF                MOV     A,R7
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 341
0086 240C              ADD     A,#0CH
0088 FF                MOV     R7,A
0089 E4                CLR     A
008A 3E                ADDC    A,R6
008B FE                MOV     R6,A
008C 900000      R     MOV     DPTR,#pTmp
008F F0                MOVX    @DPTR,A
0090 A3                INC     DPTR
0091 EF                MOV     A,R7
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
0093 F582              MOV     DPL,A
0095 8E83              MOV     DPH,R6
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 900000      R     MOV     DPTR,#pDescr
009E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 344
00A1 900000      R     MOV     DPTR,#pDescr
00A4 120000      E     LCALL   ?C?PLDXDATA
00A7 E9                MOV     A,R1
00A8 2401              ADD     A,#01H
00AA F9                MOV     R1,A
00AB E4                CLR     A
00AC 3A                ADDC    A,R2
00AD FA                MOV     R2,A
00AE 120000      E     LCALL   ?C?CLDPTR
00B1 FE                MOV     R6,A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 21  

00B2 900000      R     MOV     DPTR,#pDescr
00B5 120000      E     LCALL   ?C?PLDXDATA
00B8 120000      E     LCALL   ?C?CLDPTR
00BB FD                MOV     R5,A
00BC EE                MOV     A,R6
00BD ED                MOV     A,R5
00BE FF                MOV     R7,A
00BF 900000      E     MOV     DPTR,#USBFS_currentTD
00C2 EE                MOV     A,R6
00C3 F0                MOVX    @DPTR,A
00C4 A3                INC     DPTR
00C5 EF                MOV     A,R7
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 345
00C7 E9                MOV     A,R1
00C8 2402              ADD     A,#02H
00CA F9                MOV     R1,A
00CB E4                CLR     A
00CC 3A                ADDC    A,R2
00CD FA                MOV     R2,A
00CE 900000      E     MOV     DPTR,#USBFS_currentTD+02H
00D1 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 346
00D4 22                RET     
             ; FUNCTION USBFS_FindReportDescriptor (END)

             ; FUNCTION USBFS_FindReport (BEGIN)
                                           ; SOURCE LINE # 369
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 384
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#USBFS_currentTD
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 385
0007 900000      E     MOV     DPTR,#USBFS_configuration
000A E0                MOVX    A,@DPTR
000B 14                DEC     A
000C FF                MOV     R7,A
000D 120000      E     LCALL   _USBFS_GetConfigTablePtr
0010 900000      R     MOV     DPTR,#pTmp
0013 EE                MOV     A,R6
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 386
0018 906003            MOV     DPTR,#06003H
001B E0                MOVX    A,@DPTR
001C 900000      R     MOV     DPTR,#reportType
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
0020 906004            MOV     DPTR,#06004H
0023 E0                MOVX    A,@DPTR
0024 900000      R     MOV     DPTR,#interfaceN
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 390
0028 E0                MOVX    A,@DPTR
0029 2402              ADD     A,#02H
002B FF                MOV     R7,A
002C E4                CLR     A
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 22  

002D 33                RLC     A
002E FE                MOV     R6,A
002F EF                MOV     A,R7
0030 7802              MOV     R0,#02H
0032         ?C0050:
0032 C3                CLR     C
0033 33                RLC     A
0034 CE                XCH     A,R6
0035 33                RLC     A
0036 CE                XCH     A,R6
0037 D8F9              DJNZ    R0,?C0050
0039 FF                MOV     R7,A
003A 900000      R     MOV     DPTR,#pTmp+01H
003D E0                MOVX    A,@DPTR
003E 2F                ADD     A,R7
003F FF                MOV     R7,A
0040 900000      R     MOV     DPTR,#pTmp
0043 E0                MOVX    A,@DPTR
0044 3E                ADDC    A,R6
0045 FE                MOV     R6,A
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
0048 EF                MOV     A,R7
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
004A F582              MOV     DPL,A
004C 8E83              MOV     DPH,R6
004E A3                INC     DPTR
004F 120000      E     LCALL   ?C?PLDCODE
0052 AF01              MOV     R7,AR1
0054 900000      R     MOV     DPTR,#pTmp
0057 EA                MOV     A,R2
0058 F0                MOVX    @DPTR,A
0059 A3                INC     DPTR
005A EF                MOV     A,R7
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 393
005C 900000      R     MOV     DPTR,#interfaceN
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 C3                CLR     C
0062 9401              SUBB    A,#01H
0064 4003              JC      $ + 5H
0066 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 396
0069 7400        E     MOV     A,#LOW USBFS_interfaceSetting
006B 2F                ADD     A,R7
006C F582              MOV     DPL,A
006E E4                CLR     A
006F 3400        E     ADDC    A,#HIGH USBFS_interfaceSetting
0071 F583              MOV     DPH,A
0073 E0                MOVX    A,@DPTR
0074 75F004            MOV     B,#04H
0077 A4                MUL     AB
0078 FF                MOV     R7,A
0079 AEF0              MOV     R6,B
007B 900000      R     MOV     DPTR,#pTmp+01H
007E E0                MOVX    A,@DPTR
007F 2F                ADD     A,R7
0080 F0                MOVX    @DPTR,A
0081 900000      R     MOV     DPTR,#pTmp
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 23  

0084 E0                MOVX    A,@DPTR
0085 3E                ADDC    A,R6
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 398
0087 E0                MOVX    A,@DPTR
0088 FE                MOV     R6,A
0089 A3                INC     DPTR
008A E0                MOVX    A,@DPTR
008B F582              MOV     DPL,A
008D 8E83              MOV     DPH,R6
008F A3                INC     DPTR
0090 120000      E     LCALL   ?C?PLDCODE
0093 AF01              MOV     R7,AR1
0095 900000      R     MOV     DPTR,#pTmp
0098 EA                MOV     A,R2
0099 F0                MOVX    @DPTR,A
009A A3                INC     DPTR
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 400
009D 900000      R     MOV     DPTR,#reportType
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 C3                CLR     C
00A3 9401              SUBB    A,#01H
00A5 5003              JNC     $ + 5H
00A7 020000      R     LJMP    ?C0043
00AA EF                MOV     A,R7
00AB D3                SETB    C
00AC 9403              SUBB    A,#03H
00AE 4003              JC      $ + 5H
00B0 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 404
00B3 EF                MOV     A,R7
00B4 24FF              ADD     A,#0FFH
00B6 FF                MOV     R7,A
00B7 E4                CLR     A
00B8 34FF              ADDC    A,#0FFH
00BA FE                MOV     R6,A
00BB EF                MOV     A,R7
00BC 7802              MOV     R0,#02H
00BE         ?C0051:
00BE C3                CLR     C
00BF 33                RLC     A
00C0 CE                XCH     A,R6
00C1 33                RLC     A
00C2 CE                XCH     A,R6
00C3 D8F9              DJNZ    R0,?C0051
00C5 FF                MOV     R7,A
00C6 900000      R     MOV     DPTR,#pTmp+01H
00C9 E0                MOVX    A,@DPTR
00CA 2F                ADD     A,R7
00CB F0                MOVX    @DPTR,A
00CC 900000      R     MOV     DPTR,#pTmp
00CF E0                MOVX    A,@DPTR
00D0 3E                ADDC    A,R6
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 405
00D2 906002            MOV     DPTR,#06002H
00D5 E0                MOVX    A,@DPTR
00D6 900000      R     MOV     DPTR,#reportType
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 24  

00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
00DA 900000      R     MOV     DPTR,#pTmp
00DD E0                MOVX    A,@DPTR
00DE FE                MOV     R6,A
00DF A3                INC     DPTR
00E0 E0                MOVX    A,@DPTR
00E1 F582              MOV     DPL,A
00E3 8E83              MOV     DPH,R6
00E5 E4                CLR     A
00E6 93                MOVC    A,@A+DPTR
00E7 FF                MOV     R7,A
00E8 900000      R     MOV     DPTR,#reportType
00EB E0                MOVX    A,@DPTR
00EC FE                MOV     R6,A
00ED EF                MOV     A,R7
00EE C3                CLR     C
00EF 9E                SUBB    A,R6
00F0 4067              JC      ?C0043
                                           ; SOURCE LINE # 408
                                           ; SOURCE LINE # 409
00F2 900000      R     MOV     DPTR,#pTmp
00F5 E0                MOVX    A,@DPTR
00F6 FC                MOV     R4,A
00F7 A3                INC     DPTR
00F8 E0                MOVX    A,@DPTR
00F9 F582              MOV     DPL,A
00FB 8C83              MOV     DPH,R4
00FD A3                INC     DPTR
00FE 120000      E     LCALL   ?C?PLDCODE
0101 900000      R     MOV     DPTR,#pTD
0104 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 410
0107 EE                MOV     A,R6
0108 75F008            MOV     B,#08H
010B A4                MUL     AB
010C FF                MOV     R7,A
010D 900000      R     MOV     DPTR,#pTD
0110 120000      E     LCALL   ?C?PLDXDATA
0113 E9                MOV     A,R1
0114 2F                ADD     A,R7
0115 F9                MOV     R1,A
0116 EA                MOV     A,R2
0117 35F0              ADDC    A,B
0119 FA                MOV     R2,A
011A 900000      R     MOV     DPTR,#pTD
011D 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 411
0120 900000      R     MOV     DPTR,#pTD
0123 120000      E     LCALL   ?C?PLDXDATA
0126 E9                MOV     A,R1
0127 2402              ADD     A,#02H
0129 F9                MOV     R1,A
012A E4                CLR     A
012B 3A                ADDC    A,R2
012C FA                MOV     R2,A
012D 120000      E     LCALL   ?C?PLDPTR
0130 900000      E     MOV     DPTR,#USBFS_currentTD+02H
0133 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 412
0136 900000      R     MOV     DPTR,#pTD
0139 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USBFS_HID                                                             04/01/2016 11:42:16 PAGE 25  

013C 120000      E     LCALL   ?C?ILDPTR
013F FF                MOV     R7,A
0140 900000      E     MOV     DPTR,#USBFS_currentTD
0143 E5F0              MOV     A,B
0145 F0                MOVX    @DPTR,A
0146 A3                INC     DPTR
0147 EF                MOV     A,R7
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 413
0149 E9                MOV     A,R1
014A 2405              ADD     A,#05H
014C F9                MOV     R1,A
014D E4                CLR     A
014E 3A                ADDC    A,R2
014F FA                MOV     R2,A
0150 120000      E     LCALL   ?C?PLDPTR
0153 900000      E     MOV     DPTR,#USBFS_currentTD+05H
0156 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 415
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
0159         ?C0043:
0159 22                RET     
             ; FUNCTION USBFS_FindReport (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1312    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
