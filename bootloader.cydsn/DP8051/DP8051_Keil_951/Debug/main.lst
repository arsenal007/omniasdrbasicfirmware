C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_
                    -Keil_951\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          // Copyright 2013 David Turnbull AE9RB
   2          //
   3          // Licensed under the Apache License, Version 2.0 (the "License");
   4          // you may not use this file except in compliance with the License.
   5          // You may obtain a copy of the License at
   6          //
   7          //     http://www.apache.org/licenses/LICENSE-2.0
   8          //
   9          // Unless required by applicable law or agreed to in writing, software
  10          // distributed under the License is distributed on an "AS IS" BASIS,
  11          // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12          // See the License for the specific language governing permissions and
  13          // limitations under the License.
  14          
  15          #include <device.h>
  16          
  17          #define CONTROL_LED   0x01
  18          #define STATUS_BOOT   0x01
  19          
  20          #define MORSE_DOT  1
  21          #define MORSE_DASH 3
  22          #define MORSE_CHAR 3
  23          #define MORSE_WORD 7
  24          
  25          #define MCODE_L(x) (((x&0x0000000FLU)?1:0)\
  26          +((x&0x000000F0LU)?1:0)\
  27          +((x&0x00000F00LU)?1:0)\
  28          +((x&0x0000F000LU)?1:0)\
  29          +((x&0x000F0000LU)?1:0)\
  30          +((x&0x00F00000LU)?1:0))
  31          #define MCODE_C(x) (((x&0x00000002LU)?1:0)\
  32          +((x&0x00000020LU)?2:0)\
  33          +((x&0x00000200LU)?4:0)\
  34          +((x&0x00002000LU)?8:0)\
  35          +((x&0x00020000LU)?16:0)\
  36          +((x&0x00200000LU)?32:0))
  37          #define MCODE_6(x) (((x&0x00F00000LU)?4:0)\
  38          + ((((x&0x00F00000LU)?1:0) & ((x&0x00000002LU)?0:1))?2:0))
  39          #define MCODE(d)((uint8) (d==0)?7:MCODE_L(0x##d##LU)\
  40          + (MCODE_C(0x##d##LU) << 8 - MCODE_L(0x##d##LU))\
  41          - MCODE_6(0x##d##LU))
  42          
  43          const uint8 code MORSE_BOOT[] = {
  44              /* 0x42 B */ MCODE(3111),
  45              /* 0x4F O */ MCODE(333),
  46              /* 0x4F O */ MCODE(333),
  47              /* 0x54 T */ MCODE(3),
  48              0
  49          };
  50          
  51          const uint8 code MORSE_XTAL[] = {
  52              /* 0x58 X */ MCODE(3113),
  53              /* 0x54 T */ MCODE(3),
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 2   

  54              /* 0x41 A */ MCODE(13),
  55              /* 0x4C L */ MCODE(1311),
  56              0
  57          };
  58          
  59          uint8 *message;
  60          
  61          CY_ISR(morse_interrupt)
  62          {
  63   1          static uint8 pos = 0, state = 0, codes, len, timer;
  64   1      
  65   1          switch (state) {
  66   2          case 0:
  67   2              codes = message[pos++];
  68   2              len = codes & 0x07;
  69   2              if (!codes) {
  70   3                  pos = 0;
  71   3                  timer = MORSE_WORD - MORSE_CHAR - 2;
  72   3                  len = 0;
  73   3                  state = 3;
  74   3                  break;
  75   3              }
  76   2          case 1:
  77   2              if (codes & 0x80) timer = MORSE_DASH;
  78   2              else timer = MORSE_DOT;
  79   2              codes <<= 1;
  80   2              len--;
  81   2              Control_Write(Control_Read() & ~CONTROL_LED);
  82   2              state = 2;
  83   2          case 2:
  84   2              if (!timer) {
  85   3                  state = 3;
  86   3                  if (!len) timer = MORSE_CHAR - 1;
  87   3                  else timer = MORSE_DOT - 1;
  88   3                  Control_Write(Control_Read() | CONTROL_LED);
  89   3              }
  90   2              else {
  91   3                  timer--;
  92   3                  break;
  93   3              }
  94   2          case 3:
  95   2              if (!timer) {
  96   3                  if (!len) state = 0;
  97   3                  else state = 1;
  98   3              }
  99   2              else timer--;
 100   2          }
 101   1      }
 102              
 103          void main()
 104          {
 105   1          message = MORSE_BOOT;
 106   1          if (Status_Read() & STATUS_BOOT) {
 107   2              if (CyXTAL_ReadStatus()) message = MORSE_XTAL;
 108   2              else {
 109   3                  if (CYRET_SUCCESS == Bootloader_ValidateBootloadable(0)) {
 110   4                      Bootloader_Exit(Bootloader_EXIT_TO_BTLDB);
 111   4                  }
 112   3              }
 113   2          }
 114   1          morse_isr_StartEx(&morse_interrupt);
 115   1          Morse_Counter_Start();
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 3   

 116   1          CyGlobalIntEnable;
 117   1          Bootloader_Start();
 118   1          for(;;) {}
 119   1      }
 120          
 121          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION morse_interrupt (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 65
002B 900000      R     MOV     DPTR,#state
002E E0                MOVX    A,@DPTR
002F FF                MOV     R7,A
0030 EF                MOV     A,R7
0031 120000      E     LCALL   ?C?CCASE
0034 0000        R     DW      ?C0002
0036 00                DB      00H
0037 0000        R     DW      ?C0004
0039 01                DB      01H
003A 0000        R     DW      ?C0007
003C 02                DB      02H
003D 0000        R     DW      ?C0012
003F 03                DB      03H
0040 0000              DW      00H
0042 0000        R     DW      ?C0017
                                           ; SOURCE LINE # 66
0044         ?C0002:
                                           ; SOURCE LINE # 67
0044 900000      R     MOV     DPTR,#message
0047 120000      E     LCALL   ?C?PLDXDATA
004A 900000      R     MOV     DPTR,#pos
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F 04                INC     A
0050 F0                MOVX    @DPTR,A
0051 E9                MOV     A,R1
0052 2F                ADD     A,R7
0053 F9                MOV     R1,A
0054 E4                CLR     A
0055 3A                ADDC    A,R2
0056 FA                MOV     R2,A
0057 120000      E     LCALL   ?C?CLDPTR
005A FF                MOV     R7,A
005B 900000      R     MOV     DPTR,#codes
005E EF                MOV     A,R7
005F F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 5   

                                           ; SOURCE LINE # 68
0060 900000      R     MOV     DPTR,#codes
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 EF                MOV     A,R7
0066 5407              ANL     A,#07H
0068 FF                MOV     R7,A
0069 900000      R     MOV     DPTR,#len
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
006E 900000      R     MOV     DPTR,#codes
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 7019              JNZ     ?C0004
                                           ; SOURCE LINE # 70
0076 900000      R     MOV     DPTR,#pos
0079 E4                CLR     A
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
007B 900000      R     MOV     DPTR,#timer
007E 7402              MOV     A,#02H
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
0081 900000      R     MOV     DPTR,#len
0084 E4                CLR     A
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
0086 900000      R     MOV     DPTR,#state
0089 7403              MOV     A,#03H
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
008C 020000      R     LJMP    ?C0017
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
008F         ?C0004:
                                           ; SOURCE LINE # 77
008F 900000      R     MOV     DPTR,#codes
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 30E708            JNB     ACC.7,?C0005
0098 900000      R     MOV     DPTR,#timer
009B 7403              MOV     A,#03H
009D F0                MOVX    @DPTR,A
009E 8006              SJMP    ?C0006
00A0         ?C0005:
                                           ; SOURCE LINE # 78
00A0 900000      R     MOV     DPTR,#timer
00A3 7401              MOV     A,#01H
00A5 F0                MOVX    @DPTR,A
00A6         ?C0006:
                                           ; SOURCE LINE # 79
00A6 900000      R     MOV     DPTR,#codes
00A9 E0                MOVX    A,@DPTR
00AA FF                MOV     R7,A
00AB EF                MOV     A,R7
00AC 25E0              ADD     A,ACC
00AE FF                MOV     R7,A
00AF 900000      R     MOV     DPTR,#codes
00B2 EF                MOV     A,R7
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 6   

00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
00B4 900000      R     MOV     DPTR,#len
00B7 E0                MOVX    A,@DPTR
00B8 14                DEC     A
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
00BA 120000      E     LCALL   Control_Read
00BD EF                MOV     A,R7
00BE 54FE              ANL     A,#0FEH
00C0 FF                MOV     R7,A
00C1 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 82
00C4 900000      R     MOV     DPTR,#state
00C7 7402              MOV     A,#02H
00C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
00CA         ?C0007:
                                           ; SOURCE LINE # 84
00CA 900000      R     MOV     DPTR,#timer
00CD E0                MOVX    A,@DPTR
00CE FF                MOV     R7,A
00CF EF                MOV     A,R7
00D0 7027              JNZ     ?C0008
                                           ; SOURCE LINE # 85
00D2 900000      R     MOV     DPTR,#state
00D5 7403              MOV     A,#03H
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
00D8 900000      R     MOV     DPTR,#len
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD EF                MOV     A,R7
00DE 7008              JNZ     ?C0009
00E0 900000      R     MOV     DPTR,#timer
00E3 7402              MOV     A,#02H
00E5 F0                MOVX    @DPTR,A
00E6 8005              SJMP    ?C0010
00E8         ?C0009:
                                           ; SOURCE LINE # 87
00E8 900000      R     MOV     DPTR,#timer
00EB E4                CLR     A
00EC F0                MOVX    @DPTR,A
00ED         ?C0010:
                                           ; SOURCE LINE # 88
00ED 120000      E     LCALL   Control_Read
00F0 EF                MOV     A,R7
00F1 4401              ORL     A,#01H
00F3 FF                MOV     R7,A
00F4 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 89
00F7 8008              SJMP    ?C0012
00F9         ?C0008:
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
00F9 900000      R     MOV     DPTR,#timer
00FC E0                MOVX    A,@DPTR
00FD 14                DEC     A
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
00FF 8025              SJMP    ?C0017
                                           ; SOURCE LINE # 93
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 7   

                                           ; SOURCE LINE # 94
0101         ?C0012:
                                           ; SOURCE LINE # 95
0101 900000      R     MOV     DPTR,#timer
0104 E0                MOVX    A,@DPTR
0105 FF                MOV     R7,A
0106 EF                MOV     A,R7
0107 7017              JNZ     ?C0013
                                           ; SOURCE LINE # 96
0109 900000      R     MOV     DPTR,#len
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E EF                MOV     A,R7
010F 7007              JNZ     ?C0014
0111 900000      R     MOV     DPTR,#state
0114 E4                CLR     A
0115 F0                MOVX    @DPTR,A
0116 800E              SJMP    ?C0017
0118         ?C0014:
                                           ; SOURCE LINE # 97
0118 900000      R     MOV     DPTR,#state
011B 7401              MOV     A,#01H
011D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 98
011E 8006              SJMP    ?C0017
0120         ?C0013:
                                           ; SOURCE LINE # 99
0120 900000      R     MOV     DPTR,#timer
0123 E0                MOVX    A,@DPTR
0124 14                DEC     A
0125 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0126         ?C0017:
0126 D007              POP     AR7
0128 D006              POP     AR6
012A D005              POP     AR5
012C D004              POP     AR4
012E D003              POP     AR3
0130 D002              POP     AR2
0132 D001              POP     AR1
0134 D000              POP     AR0
0136 D0D0              POP     PSW
0138 D000        E     POP     ?C?XPAGE1SFR
013A D086              POP     DPS
013C D084              POP     DPL1
013E D085              POP     DPH1
0140 D082              POP     DPL
0142 D083              POP     DPH
0144 D0F0              POP     B
0146 D0E0              POP     ACC
0148 32                RETI    
             ; FUNCTION morse_interrupt (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH MORSE_BOOT
0004 7900        R     MOV     R1,#LOW MORSE_BOOT
0006 900000      R     MOV     DPTR,#message
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 8   

0009 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 106
000C 120000      E     LCALL   Status_Read
000F EF                MOV     A,R7
0010 30E021            JNB     ACC.0,?C0018
                                           ; SOURCE LINE # 107
0013 120000      E     LCALL   CyXTAL_ReadStatus
0016 EF                MOV     A,R7
0017 600E              JZ      ?C0019
0019 7BFF              MOV     R3,#0FFH
001B 7A00        R     MOV     R2,#HIGH MORSE_XTAL
001D 7900        R     MOV     R1,#LOW MORSE_XTAL
001F 900000      R     MOV     DPTR,#message
0022 120000      E     LCALL   ?C?PSTXDATA
0025 800D              SJMP    ?C0018
0027         ?C0019:
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0027 7F00              MOV     R7,#00H
0029 120000      E     LCALL   _Bootloader_ValidateBootloadable
002C EF                MOV     A,R7
002D 7005              JNZ     ?C0018
                                           ; SOURCE LINE # 110
002F 7F00              MOV     R7,#00H
0031 120000      E     LCALL   _Bootloader_Exit
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
0034         ?C0018:
                                           ; SOURCE LINE # 114
0034 7E00        R     MOV     R6,#HIGH morse_interrupt
0036 7F00        R     MOV     R7,#LOW morse_interrupt
0038 120000      E     LCALL   _morse_isr_StartEx
                                           ; SOURCE LINE # 115
003B 120000      E     LCALL   Morse_Counter_Start
                                           ; SOURCE LINE # 116
003E D2AF              SETB    EA
0040 9044F4            MOV     DPTR,#044F4H
0043 74FD              MOV     A,#0FDH
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
0046 120000      E     LCALL   Bootloader_Start
                                           ; SOURCE LINE # 118
0049         ?C0022:
0049 80FE              SJMP    ?C0022
004B 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    405    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.51   MAIN                                                                  10/03/2016 19:53:25 PAGE 9   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
