C51 COMPILER V9.51   I2S_PM                                                                10/22/2015 22:07:41 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE I2S_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\I2S_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\I2S_PM.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.
                    -\DP8051\DP8051_Keil_951\Debug/I2S_PM.lst) CD OT(5,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\I2S_PM.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: I2S_PM.c
   3          * Version 2.60
   4          *
   5          * Description:
   6          *  This file contains the setup, control and status commands to support
   7          *  component operations in low power mode.
   8          *
   9          * Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions,
  14          * disclaimers, and limitations in the end user license agreement accompanying
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "I2S.h"
  19          
  20          static I2S_BACKUP_STRUCT  I2S_backup = {0u};
  21          
  22          
  23          /*******************************************************************************
  24          * Function Name: I2S_SaveConfig
  25          ********************************************************************************
  26          *
  27          * Summary:
  28          *  Empty function. Left to preserve backward compatibility.
  29          *
  30          * Parameters:
  31          *  None.
  32          *
  33          * Return:
  34          *  None.
  35          *
  36          *******************************************************************************/
  37          void I2S_SaveConfig(void) 
  38          {
  39   1          /* Nothing to save. All registers are retention. */
  40   1      }
  41          
  42          
  43          /*******************************************************************************
  44          * Function Name: I2S_RestoreConfig
  45          ********************************************************************************
  46          *
  47          * Summary:
  48          *  Empty function. Left to preserve backward compatibility.
  49          *
  50          * Parameters:
  51          *  None.
  52          *
  53          * Return:
C51 COMPILER V9.51   I2S_PM                                                                10/22/2015 22:07:41 PAGE 2   

  54          *  None.
  55          *
  56          *******************************************************************************/
  57          void I2S_RestoreConfig(void) 
  58          {
  59   1          /* Nothing to restore. All registers are retention. */
  60   1      }
  61          
  62          
  63          /*******************************************************************************
  64          * Function Name: I2S_Sleep
  65          ********************************************************************************
  66          *
  67          * Summary:
  68          *  Prepares I2S for entering sleep mode.
  69          *
  70          * Parameters:
  71          *  None.
  72          *
  73          * Return:
  74          *  None.
  75          *
  76          * Global Variables:
  77          *  I2S_backup - used to store component state prior entering 
  78          *    sleep mode.
  79          *
  80          * Reentrant:
  81          *  No.
  82          *
  83          *******************************************************************************/
  84          void I2S_Sleep(void) 
  85          {
  86   1          /* Get component state */
  87   1          I2S_backup.enableState = I2S_CONTROL_REG;
  88   1      
  89   1          /* Stop component */
  90   1          I2S_Stop();
  91   1      }
  92          
  93          
  94          /*******************************************************************************
  95          * Function Name: I2S_Wakeup
  96          ********************************************************************************
  97          *
  98          * Summary:
  99          *  Prepares I2S for exit from sleep mode.
 100          *
 101          * Parameters:
 102          *  None.
 103          *
 104          * Return:
 105          *  None.
 106          *
 107          * Global Variables:
 108          *  I2S_backup - used to restore component state after exit from
 109          *    sleep mode.
 110          *
 111          *******************************************************************************/
 112          void I2S_Wakeup(void) 
 113          {
 114   1          #if (I2S_DYNAMIC_BIT_RESOLUTION)
                      I2S_CONTROL_REG = I2S_backup.enableState & I2S_BIT_RESOLUTION_MODE_MASK;
C51 COMPILER V9.51   I2S_PM                                                                10/22/2015 22:07:41 PAGE 3   

                  #endif /* I2S_DYNAMIC_BIT_RESOLUTION */
 117   1      
 118   1          if(0u != (I2S_backup.enableState & I2S_EN))
 119   1          {
 120   2              /* Enable component's operation */
 121   2              I2S_Enable();
 122   2      
 123   2              /* Enable Tx/Rx direction if they were enabled before sleep */
 124   2              #if(I2S_TX_DIRECTION_ENABLE)
 125   2                  if(0u != (I2S_backup.enableState & I2S_TX_EN))
 126   2                  {
 127   3                      I2S_EnableTx();
 128   3                  }
 129   2              #endif /* (I2S_TX_DIRECTION_ENABLE) */
 130   2              
 131   2              #if(I2S_RX_DIRECTION_ENABLE)
 132   2                  if(0u != (I2S_backup.enableState & I2S_RX_EN))
 133   2                  {
 134   3                      I2S_EnableRx();
 135   3                  }
 136   2              #endif /* (I2S_RX_DIRECTION_ENABLE) */
 137   2          }
 138   1      }
 139          
 140          
 141          /* [] END OF FILE */
C51 COMPILER V9.51   I2S_PM                                                                10/22/2015 22:07:41 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION I2S_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 40
0000 22                RET     
             ; FUNCTION I2S_SaveConfig (END)

             ; FUNCTION I2S_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 60
0000 22                RET     
             ; FUNCTION I2S_RestoreConfig (END)

             ; FUNCTION I2S_Sleep (BEGIN)
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
0000 906471            MOV     DPTR,#06471H
0003 E0                MOVX    A,@DPTR
0004 900000      R     MOV     DPTR,#I2S_backup
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
0008 120000      E     LCALL   I2S_Stop
                                           ; SOURCE LINE # 91
000B 22                RET     
             ; FUNCTION I2S_Sleep (END)

             ; FUNCTION I2S_Wakeup (BEGIN)
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 118
0000 900000      R     MOV     DPTR,#I2S_backup
0003 E0                MOVX    A,@DPTR
0004 5404              ANL     A,#04H
0006 6019              JZ      ?C0007
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 121
0008 120000      E     LCALL   I2S_Enable
                                           ; SOURCE LINE # 125
000B 900000      R     MOV     DPTR,#I2S_backup
000E E0                MOVX    A,@DPTR
000F 5401              ANL     A,#01H
0011 6003              JZ      ?C0005
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
0013 120000      E     LCALL   I2S_EnableTx
                                           ; SOURCE LINE # 128
0016         ?C0005:
                                           ; SOURCE LINE # 132
0016 900000      R     MOV     DPTR,#I2S_backup
0019 E0                MOVX    A,@DPTR
001A 5402              ANL     A,#02H
001C 6003              JZ      ?C0007
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
001E 120000      E     LCALL   I2S_EnableRx
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 137
C51 COMPILER V9.51   I2S_PM                                                                10/22/2015 22:07:41 PAGE 5   

                                           ; SOURCE LINE # 138
0021         ?C0007:
0021 22                RET     
             ; FUNCTION I2S_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     48    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
