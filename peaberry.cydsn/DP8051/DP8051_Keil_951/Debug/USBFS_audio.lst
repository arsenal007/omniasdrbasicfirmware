C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBFS_AUDIO
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USBFS_audio.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBFS_audio.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2)
                    - PR(.\DP8051\DP8051_Keil_951\Debug/USBFS_audio.lst) CD OT(5,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\USBFS_audio.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBFS_audio.c
   3          * Version 2.80
   4          *
   5          * Description:
   6          *  USB AUDIO Class request handler.
   7          *
   8          * Related Document:
   9          *  Universal Serial Bus Device Class Definition for Audio Devices Release 1.0
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions,
  14          * disclaimers, and limitations in the end user license agreement accompanying
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "USBFS.h"
  19          
  20          
  21          #if defined(USBFS_ENABLE_AUDIO_CLASS)
  22          
  23          #include "USBFS_audio.h"
  24          #include "USBFS_pvt.h"
  25          #if defined(USBFS_ENABLE_MIDI_STREAMING)
                  #include "USBFS_midi.h"
              #endif /*  USBFS_ENABLE_MIDI_STREAMING*/
  28          
  29          
  30          /***************************************
  31          * Custom Declarations
  32          ***************************************/
  33          
  34          /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  35          
  36          /* `#END` */
  37          
  38          
  39          #if !defined(USER_SUPPLIED_AUDIO_HANDLER)
  40          
  41          
  42          /***************************************
  43          *    AUDIO Variables
  44          ***************************************/
  45          
  46          #if defined(USBFS_ENABLE_AUDIO_STREAMING)
  47              volatile uint8 USBFS_currentSampleFrequency[USBFS_MAX_EP][USBFS_SAMPLE_FREQ_LEN];
  48              volatile uint8 USBFS_frequencyChanged;
  49              volatile uint8 USBFS_currentMute;
  50              volatile uint8 USBFS_currentVolume[USBFS_VOLUME_LEN];
  51              volatile uint8 USBFS_minimumVolume[USBFS_VOLUME_LEN] = {USBFS_VOL_MIN_LSB,
  52                                                                                            USBFS_VOL_MIN_MSB};
  53              volatile uint8 USBFS_maximumVolume[USBFS_VOLUME_LEN] = {USBFS_VOL_MAX_LSB,
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 2   

  54                                                                                            USBFS_VOL_MAX_MSB};
  55              volatile uint8 USBFS_resolutionVolume[USBFS_VOLUME_LEN] = {USBFS_VOL_RES_LSB,
  56                                                                                               USBFS_VOL_RES_MSB};
  57          #endif /*  USBFS_ENABLE_AUDIO_STREAMING */
  58          
  59          
  60          /*******************************************************************************
  61          * Function Name: USBFS_DispatchAUDIOClassRqst
  62          ********************************************************************************
  63          *
  64          * Summary:
  65          *  This routine dispatches class requests
  66          *
  67          * Parameters:
  68          *  None.
  69          *
  70          * Return:
  71          *  requestHandled
  72          *
  73          * Global variables:
  74          *   USBFS_currentSampleFrequency: Contains the current audio Sample
  75          *       Frequency. It is set by the Host using SET_CUR request to the endpoint.
  76          *   USBFS_frequencyChanged: This variable is used as a flag for the
  77          *       user code, to be aware that Host has been sent request for changing
  78          *       Sample Frequency. Sample frequency will be sent on the next OUT
  79          *       transaction. It is contains endpoint address when set. The following
  80          *       code is recommended for detecting new Sample Frequency in main code:
  81          *       if((USBFS_frequencyChanged != 0) &&
  82          *       (USBFS_transferState == USBFS_TRANS_STATE_IDLE))
  83          *       {
  84          *          USBFS_frequencyChanged = 0;
  85          *       }
  86          *       USBFS_transferState variable is checked to be sure that
  87          *             transfer completes.
  88          *   USBFS_currentMute: Contains mute configuration set by Host.
  89          *   USBFS_currentVolume: Contains volume level set by Host.
  90          *
  91          * Reentrant:
  92          *  No.
  93          *
  94          *******************************************************************************/
  95          uint8 USBFS_DispatchAUDIOClassRqst(void) 
  96          {
  97   1          uint8 requestHandled = USBFS_FALSE;
  98   1          uint8 bmRequestType  = CY_GET_REG8(USBFS_bmRequestType);
  99   1      
 100   1          #if defined(USBFS_ENABLE_AUDIO_STREAMING)
 101   1              uint8 epNumber;
 102   1              epNumber = CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED;
 103   1          #endif /*  USBFS_ENABLE_AUDIO_STREAMING */
 104   1      
 105   1      
 106   1          if ((bmRequestType & USBFS_RQST_DIR_MASK) == USBFS_RQST_DIR_D2H)
 107   1          {
 108   2              /* Control Read */
 109   2              if((bmRequestType & USBFS_RQST_RCPT_MASK) == USBFS_RQST_RCPT_EP)
 110   2              {
 111   3                  /* Endpoint */
 112   3                  switch (CY_GET_REG8(USBFS_bRequest))
 113   3                  {
 114   4                      case USBFS_GET_CUR:
 115   4                      #if defined(USBFS_ENABLE_AUDIO_STREAMING)
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 3   

 116   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_SAMPLING_FREQ_CONTROL)
 117   4                          {
 118   5                               /* point Control Selector is Sampling Frequency */
 119   5                              USBFS_currentTD.wCount = USBFS_SAMPLE_FREQ_LEN;
 120   5                              USBFS_currentTD.pData  = USBFS_currentSampleFrequency[epNumber];
 121   5                              requestHandled   = USBFS_InitControlRead();
 122   5                          }
 123   4                      #endif /*  USBFS_ENABLE_AUDIO_STREAMING */
 124   4      
 125   4                      /* `#START AUDIO_READ_REQUESTS` Place other request handler here */
 126   4      
 127   4                      /* `#END` */
 128   4                      
 129   4                      #ifdef USBFS_DISPATCH_AUDIO_CLASS_AUDIO_READ_REQUESTS_CALLBACK
                                  USBFS_DispatchAUDIOClass_AUDIO_READ_REQUESTS_Callback();
                              #endif /* USBFS_DISPATCH_AUDIO_CLASS_AUDIO_READ_REQUESTS_CALLBACK */
 132   4      
 133   4                          break;
 134   4                      default:
 135   4                          break;
 136   4                  }
 137   3              }
 138   2              else if((bmRequestType & USBFS_RQST_RCPT_MASK) == USBFS_RQST_RCPT_IFC)
 139   2              {
 140   3                  /* Interface or Entity ID */
 141   3                  switch (CY_GET_REG8(USBFS_bRequest))
 142   3                  {
 143   4                      case USBFS_GET_CUR:
 144   4                      #if defined(USBFS_ENABLE_AUDIO_STREAMING)
 145   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_MUTE_CONTROL)
 146   4                          {
 147   5                              /* `#START MUTE_CONTROL_GET_REQUEST` Place multi-channel handler here */
 148   5      
 149   5                              /* `#END` */
 150   5      
 151   5                              #ifdef USBFS_DISPATCH_AUDIO_CLASS_MUTE_CONTROL_GET_REQUEST_CALLBACK
                                          USBFS_DispatchAUDIOClass_MUTE_CONTROL_GET_REQUEST_Callback();
                                      #endif /* USBFS_DISPATCH_AUDIO_CLASS_MUTE_CONTROL_GET_REQUEST_CALLBACK */
 154   5      
 155   5                              /* Entity ID Control Selector is MUTE */
 156   5                              USBFS_currentTD.wCount = 1u;
 157   5                              USBFS_currentTD.pData  = &USBFS_currentMute;
 158   5                              requestHandled   = USBFS_InitControlRead();
 159   5                          }
 160   4                          else if(CY_GET_REG8(USBFS_wValueHi) == USBFS_VOLUME_CONTROL)
 161   4                          {
 162   5                              /* `#START VOLUME_CONTROL_GET_REQUEST` Place multi-channel handler here */
 163   5      
 164   5                              /* `#END` */
 165   5      
 166   5                              #ifdef USBFS_DISPATCH_AUDIO_CLASS_VOLUME_CONTROL_GET_REQUEST_CALLBACK
                                          USBFS_DispatchAUDIOClass_VOLUME_CONTROL_GET_REQUEST_Callback();
                                      #endif /* USBFS_DISPATCH_AUDIO_CLASS_VOLUME_CONTROL_GET_REQUEST_CALLBACK */
 169   5      
 170   5                              /* Entity ID Control Selector is VOLUME, */
 171   5                              USBFS_currentTD.wCount = USBFS_VOLUME_LEN;
 172   5                              USBFS_currentTD.pData  = USBFS_currentVolume;
 173   5                              requestHandled   = USBFS_InitControlRead();
 174   5                          }
 175   4                          else
 176   4                          {
 177   5                              /* `#START OTHER_GET_CUR_REQUESTS` Place other request handler here */
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 4   

 178   5      
 179   5                              /* `#END` */
 180   5      
 181   5                              #ifdef USBFS_DISPATCH_AUDIO_CLASS_OTHER_GET_CUR_REQUESTS_CALLBACK
                                          USBFS_DispatchAUDIOClass_OTHER_GET_CUR_REQUESTS_Callback();
                                      #endif /* USBFS_DISPATCH_AUDIO_CLASS_OTHER_GET_CUR_REQUESTS_CALLBACK */
 184   5                          }
 185   4                          break;
 186   4                      case USBFS_GET_MIN:    /* GET_MIN */
 187   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_VOLUME_CONTROL)
 188   4                          {
 189   5                              /* Entity ID Control Selector is VOLUME, */
 190   5                              USBFS_currentTD.wCount = USBFS_VOLUME_LEN;
 191   5                              USBFS_currentTD.pData  = &USBFS_minimumVolume[0];
 192   5                              requestHandled   = USBFS_InitControlRead();
 193   5                          }
 194   4                          break;
 195   4                      case USBFS_GET_MAX:    /* GET_MAX */
 196   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_VOLUME_CONTROL)
 197   4                          {
 198   5                              /* Entity ID Control Selector is VOLUME, */
 199   5                              USBFS_currentTD.wCount = USBFS_VOLUME_LEN;
 200   5                              USBFS_currentTD.pData  = &USBFS_maximumVolume[0];
 201   5                              requestHandled   = USBFS_InitControlRead();
 202   5                          }
 203   4                          break;
 204   4                      case USBFS_GET_RES:    /* GET_RES */
 205   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_VOLUME_CONTROL)
 206   4                          {
 207   5                               /* Entity ID Control Selector is VOLUME, */
 208   5                              USBFS_currentTD.wCount = USBFS_VOLUME_LEN;
 209   5                              USBFS_currentTD.pData  = &USBFS_resolutionVolume[0];
 210   5                              requestHandled   = USBFS_InitControlRead();
 211   5                          }
 212   4                          break;
 213   4                      /* The contents of the status message is reserved for future use.
 214   4                      *  For the time being, a null packet should be returned in the data stage of the
 215   4                      *  control transfer, and the received null packet should be ACKed.
 216   4                      */
 217   4                      case USBFS_GET_STAT:
 218   4                              USBFS_currentTD.wCount = 0u;
 219   4                              requestHandled   = USBFS_InitControlWrite();
 220   4      
 221   4                      #endif /*  USBFS_ENABLE_AUDIO_STREAMING */
 222   4      
 223   4                      /* `#START AUDIO_WRITE_REQUESTS` Place other request handler here */
 224   4      
 225   4                      /* `#END` */
 226   4      
 227   4                      #ifdef USBFS_DISPATCH_AUDIO_CLASS_AUDIO_WRITE_REQUESTS_CALLBACK
                                  USBFS_DispatchAUDIOClass_AUDIO_WRITE_REQUESTS_Callback();
                              #endif /* USBFS_DISPATCH_AUDIO_CLASS_AUDIO_WRITE_REQUESTS_CALLBACK */
 230   4      
 231   4                          break;
 232   4                      default:
 233   4                          break;
 234   4                  }
 235   3              }
 236   2              else
 237   2              {   /* USBFS_RQST_RCPT_OTHER */
 238   3              }
 239   2          }
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 5   

 240   1          else
 241   1          {
 242   2              /* Control Write */
 243   2              if((bmRequestType & USBFS_RQST_RCPT_MASK) == USBFS_RQST_RCPT_EP)
 244   2              {
 245   3                  /* point */
 246   3                  switch (CY_GET_REG8(USBFS_bRequest))
 247   3                  {
 248   4                      case USBFS_SET_CUR:
 249   4                      #if defined(USBFS_ENABLE_AUDIO_STREAMING)
 250   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_SAMPLING_FREQ_CONTROL)
 251   4                          {
 252   5                               /* point Control Selector is Sampling Frequency */
 253   5                              USBFS_currentTD.wCount = USBFS_SAMPLE_FREQ_LEN;
 254   5                              USBFS_currentTD.pData  = USBFS_currentSampleFrequency[epNumber];
 255   5                              requestHandled   = USBFS_InitControlWrite();
 256   5                              USBFS_frequencyChanged = epNumber;
 257   5                          }
 258   4                      #endif /*  USBFS_ENABLE_AUDIO_STREAMING */
 259   4      
 260   4                      /* `#START AUDIO_SAMPLING_FREQ_REQUESTS` Place other request handler here */
 261   4      
 262   4                      /* `#END` */
 263   4      
 264   4                      #ifdef USBFS_DISPATCH_AUDIO_CLASS_AUDIO_SAMPLING_FREQ_REQUESTS_CALLBACK
                                  USBFS_DispatchAUDIOClass_AUDIO_SAMPLING_FREQ_REQUESTS_Callback();
                              #endif /* USBFS_DISPATCH_AUDIO_CLASS_AUDIO_SAMPLING_FREQ_REQUESTS_CALLBACK */
 267   4      
 268   4                          break;
 269   4                      default:
 270   4                          break;
 271   4                  }
 272   3              }
 273   2              else if((bmRequestType & USBFS_RQST_RCPT_MASK) == USBFS_RQST_RCPT_IFC)
 274   2              {
 275   3                  /* Interface or Entity ID */
 276   3                  switch (CY_GET_REG8(USBFS_bRequest))
 277   3                  {
 278   4                      case USBFS_SET_CUR:
 279   4                      #if defined(USBFS_ENABLE_AUDIO_STREAMING)
 280   4                          if(CY_GET_REG8(USBFS_wValueHi) == USBFS_MUTE_CONTROL)
 281   4                          {
 282   5                              /* `#START MUTE_SET_REQUEST` Place multi-channel handler here */
 283   5      
 284   5                              /* `#END` */
 285   5      
 286   5                              #ifdef USBFS_DISPATCH_AUDIO_CLASS_MUTE_SET_REQUEST_CALLBACK
                                          USBFS_DispatchAUDIOClass_MUTE_SET_REQUEST_Callback();
                                      #endif /* USBFS_DISPATCH_AUDIO_CLASS_MUTE_SET_REQUEST_CALLBACK */
 289   5      
 290   5                              /* Entity ID Control Selector is MUTE */
 291   5                              USBFS_currentTD.wCount = 1u;
 292   5                              USBFS_currentTD.pData  = &USBFS_currentMute;
 293   5                              requestHandled   = USBFS_InitControlWrite();
 294   5                          }
 295   4                          else if(CY_GET_REG8(USBFS_wValueHi) == USBFS_VOLUME_CONTROL)
 296   4                          {
 297   5                              /* `#START VOLUME_CONTROL_SET_REQUEST` Place multi-channel handler here */
 298   5      
 299   5                              /* `#END` */
 300   5      
 301   5                              #ifdef USBFS_DISPATCH_AUDIO_CLASS_VOLUME_CONTROL_SET_REQUEST_CALLBACK
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 6   

                                          USBFS_DispatchAUDIOClass_VOLUME_CONTROL_SET_REQUEST_Callback();
                                      #endif /* USBFS_DISPATCH_AUDIO_CLASS_VOLUME_CONTROL_SET_REQUEST_CALLBACK */
 304   5      
 305   5                              /* Entity ID Control Selector is VOLUME */
 306   5                              USBFS_currentTD.wCount = USBFS_VOLUME_LEN;
 307   5                              USBFS_currentTD.pData  = USBFS_currentVolume;
 308   5                              requestHandled   = USBFS_InitControlWrite();
 309   5                          }
 310   4                          else
 311   4                          {
 312   5                              /* `#START OTHER_SET_CUR_REQUESTS` Place other request handler here */
 313   5      
 314   5                              /* `#END` */
 315   5      
 316   5                              #ifdef USBFS_DISPATCH_AUDIO_CLASS_OTHER_SET_CUR_REQUESTS_CALLBACK
                                          USBFS_DispatchAUDIOClass_OTHER_SET_CUR_REQUESTS_Callback();
                                      #endif /* USBFS_DISPATCH_AUDIO_CLASS_OTHER_SET_CUR_REQUESTS_CALLBACK */
 319   5                          }
 320   4                      #endif /*  USBFS_ENABLE_AUDIO_STREAMING */
 321   4      
 322   4                      /* `#START AUDIO_CONTROL_SEL_REQUESTS` Place other request handler here */
 323   4      
 324   4                      /* `#END` */
 325   4      
 326   4                      #ifdef USBFS_DISPATCH_AUDIO_CLASS_AUDIO_CONTROL_SEL_REQUESTS_CALLBACK
                                  USBFS_DispatchAUDIOClass_AUDIO_CONTROL_SEL_REQUESTS_Callback();
                              #endif /* USBFS_DISPATCH_AUDIO_CLASS_AUDIO_CONTROL_SEL_REQUESTS_CALLBACK */
 329   4      
 330   4                          break;
 331   4                      default:
 332   4                          break;
 333   4                  }
 334   3              }
 335   2              else
 336   2              {
 337   3                  /* USBFS_RQST_RCPT_OTHER */
 338   3              }
 339   2          }
 340   1      
 341   1          return(requestHandled);
 342   1      }
 343          
 344          #endif /* USER_SUPPLIED_AUDIO_HANDLER */
 345          
 346          
 347          /*******************************************************************************
 348          * Additional user functions supporting AUDIO Requests
 349          ********************************************************************************/
 350          
 351          /* `#START AUDIO_FUNCTIONS` Place any additional functions here */
 352          
 353          /* `#END` */
 354          
 355          #endif  /*  USBFS_ENABLE_AUDIO_CLASS */
 356          
 357          
 358          /* [] END OF FILE */
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBFS_DispatchAUDIOClassRqst (BEGIN)
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#requestHandled
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 98
0005 906000            MOV     DPTR,#06000H
0008 E0                MOVX    A,@DPTR
0009 900000      R     MOV     DPTR,#bmRequestType
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
000D 906004            MOV     DPTR,#06004H
0010 E0                MOVX    A,@DPTR
0011 547F              ANL     A,#07FH
0013 900000      R     MOV     DPTR,#epNumber
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0017 900000      R     MOV     DPTR,#bmRequestType
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C 5480              ANL     A,#080H
001E 6480              XRL     A,#080H
0020 6003              JZ      $ + 5H
0022 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 109
0025 EF                MOV     A,R7
0026 5403              ANL     A,#03H
0028 6402              XRL     A,#02H
002A 7044              JNZ     ?C0002
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 112
002C 906001            MOV     DPTR,#06001H
002F E0                MOVX    A,@DPTR
0030 247F              ADD     A,#07FH
0032 6003              JZ      $ + 5H
0034 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
0037         ?C0004:
                                           ; SOURCE LINE # 116
0037 906003            MOV     DPTR,#06003H
003A E0                MOVX    A,@DPTR
003B 6401              XRL     A,#01H
003D 6003              JZ      $ + 5H
003F 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 119
0042 900000      E     MOV     DPTR,#USBFS_currentTD
0045 F0                MOVX    @DPTR,A
0046 A3                INC     DPTR
0047 7403              MOV     A,#03H
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
004A 900000      R     MOV     DPTR,#epNumber
004D E0                MOVX    A,@DPTR
004E 75F003            MOV     B,#03H
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 8   

0051 A4                MUL     AB
0052 2400        R     ADD     A,#LOW USBFS_currentSampleFrequency
0054 F9                MOV     R1,A
0055 7400        R     MOV     A,#HIGH USBFS_currentSampleFrequency
0057 35F0              ADDC    A,B
0059 FA                MOV     R2,A
005A 7B01              MOV     R3,#01H
005C 900000      E     MOV     DPTR,#USBFS_currentTD+02H
005F 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 121
0062 120000      E     LCALL   USBFS_InitControlRead
0065 900000      R     MOV     DPTR,#requestHandled
0068 EF                MOV     A,R7
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 133
006A 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
006D 020000      R     LJMP    ?C0024
0070         ?C0002:
                                           ; SOURCE LINE # 138
0070 900000      R     MOV     DPTR,#bmRequestType
0073 E0                MOVX    A,@DPTR
0074 5403              ANL     A,#03H
0076 6401              XRL     A,#01H
0078 6003              JZ      $ + 5H
007A 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 141
007D 906001            MOV     DPTR,#06001H
0080 E0                MOVX    A,@DPTR
0081 247E              ADD     A,#07EH
0083 6069              JZ      ?C0015
0085 14                DEC     A
0086 7003              JNZ     $ + 5H
0088 020000      R     LJMP    ?C0017
008B 14                DEC     A
008C 7003              JNZ     $ + 5H
008E 020000      R     LJMP    ?C0019
0091 2485              ADD     A,#085H
0093 7003              JNZ     $ + 5H
0095 020000      R     LJMP    ?C0021
0098 247E              ADD     A,#07EH
009A 6003              JZ      $ + 5H
009C 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
009F         ?C0010:
                                           ; SOURCE LINE # 145
009F 906003            MOV     DPTR,#06003H
00A2 E0                MOVX    A,@DPTR
00A3 B4011E            CJNE    A,#01H,?C0011
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 156
00A6 900000      E     MOV     DPTR,#USBFS_currentTD
00A9 E4                CLR     A
00AA F0                MOVX    @DPTR,A
00AB A3                INC     DPTR
00AC 04                INC     A
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 9   

00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
00AE FB                MOV     R3,A
00AF 7A00        R     MOV     R2,#HIGH USBFS_currentMute
00B1 7900        R     MOV     R1,#LOW USBFS_currentMute
00B3 900000      E     MOV     DPTR,#USBFS_currentTD+02H
00B6 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 158
00B9 120000      E     LCALL   USBFS_InitControlRead
00BC 900000      R     MOV     DPTR,#requestHandled
00BF EF                MOV     A,R7
00C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
00C1 020000      R     LJMP    ?C0024
00C4         ?C0011:
                                           ; SOURCE LINE # 160
00C4 906003            MOV     DPTR,#06003H
00C7 E0                MOVX    A,@DPTR
00C8 6402              XRL     A,#02H
00CA 6003              JZ      $ + 5H
00CC 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 171
00CF 900000      E     MOV     DPTR,#USBFS_currentTD
00D2 F0                MOVX    @DPTR,A
00D3 A3                INC     DPTR
00D4 7402              MOV     A,#02H
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
00D7 7B01              MOV     R3,#01H
00D9 7A00        R     MOV     R2,#HIGH USBFS_currentVolume
00DB 7900        R     MOV     R1,#LOW USBFS_currentVolume
00DD 900000      E     MOV     DPTR,#USBFS_currentTD+02H
00E0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 173
00E3 120000      E     LCALL   USBFS_InitControlRead
00E6 900000      R     MOV     DPTR,#requestHandled
00E9 EF                MOV     A,R7
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
00EB 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
00EE         ?C0015:
                                           ; SOURCE LINE # 187
00EE 906003            MOV     DPTR,#06003H
00F1 E0                MOVX    A,@DPTR
00F2 6402              XRL     A,#02H
00F4 6003              JZ      $ + 5H
00F6 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 190
00F9 900000      E     MOV     DPTR,#USBFS_currentTD
00FC F0                MOVX    @DPTR,A
00FD A3                INC     DPTR
00FE 7402              MOV     A,#02H
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
0101 7B01              MOV     R3,#01H
0103 7A00        R     MOV     R2,#HIGH USBFS_minimumVolume
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 10  

0105 7900        R     MOV     R1,#LOW USBFS_minimumVolume
0107 900000      E     MOV     DPTR,#USBFS_currentTD+02H
010A 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 192
010D 120000      E     LCALL   USBFS_InitControlRead
0110 900000      R     MOV     DPTR,#requestHandled
0113 EF                MOV     A,R7
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0115 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 195
0118         ?C0017:
                                           ; SOURCE LINE # 196
0118 906003            MOV     DPTR,#06003H
011B E0                MOVX    A,@DPTR
011C 6402              XRL     A,#02H
011E 6003              JZ      $ + 5H
0120 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 199
0123 900000      E     MOV     DPTR,#USBFS_currentTD
0126 F0                MOVX    @DPTR,A
0127 A3                INC     DPTR
0128 7402              MOV     A,#02H
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
012B 7B01              MOV     R3,#01H
012D 7A00        R     MOV     R2,#HIGH USBFS_maximumVolume
012F 7900        R     MOV     R1,#LOW USBFS_maximumVolume
0131 900000      E     MOV     DPTR,#USBFS_currentTD+02H
0134 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 201
0137 120000      E     LCALL   USBFS_InitControlRead
013A 900000      R     MOV     DPTR,#requestHandled
013D EF                MOV     A,R7
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
013F 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 204
0142         ?C0019:
                                           ; SOURCE LINE # 205
0142 906003            MOV     DPTR,#06003H
0145 E0                MOVX    A,@DPTR
0146 6402              XRL     A,#02H
0148 6003              JZ      $ + 5H
014A 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 208
014D 900000      E     MOV     DPTR,#USBFS_currentTD
0150 F0                MOVX    @DPTR,A
0151 A3                INC     DPTR
0152 7402              MOV     A,#02H
0154 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
0155 7B01              MOV     R3,#01H
0157 7A00        R     MOV     R2,#HIGH USBFS_resolutionVolume
0159 7900        R     MOV     R1,#LOW USBFS_resolutionVolume
015B 900000      E     MOV     DPTR,#USBFS_currentTD+02H
015E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 210
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 11  

0161 120000      E     LCALL   USBFS_InitControlRead
0164 900000      R     MOV     DPTR,#requestHandled
0167 EF                MOV     A,R7
0168 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 212
0169 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 217
016C         ?C0021:
                                           ; SOURCE LINE # 218
016C E4                CLR     A
016D 900000      E     MOV     DPTR,#USBFS_currentTD
0170 F0                MOVX    @DPTR,A
0171 A3                INC     DPTR
0172 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0173 120000      E     LCALL   USBFS_InitControlWrite
0176 900000      R     MOV     DPTR,#requestHandled
0179 EF                MOV     A,R7
017A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 231
017B 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
017E 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0181         ?C0001:
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 243
0181 900000      R     MOV     DPTR,#bmRequestType
0184 E0                MOVX    A,@DPTR
0185 5403              ANL     A,#03H
0187 6402              XRL     A,#02H
0189 7049              JNZ     ?C0025
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 246
018B 906001            MOV     DPTR,#06001H
018E E0                MOVX    A,@DPTR
018F 14                DEC     A
0190 6003              JZ      $ + 5H
0192 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0195         ?C0027:
                                           ; SOURCE LINE # 250
0195 906003            MOV     DPTR,#06003H
0198 E0                MOVX    A,@DPTR
0199 6401              XRL     A,#01H
019B 6003              JZ      $ + 5H
019D 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 253
01A0 900000      E     MOV     DPTR,#USBFS_currentTD
01A3 F0                MOVX    @DPTR,A
01A4 A3                INC     DPTR
01A5 7403              MOV     A,#03H
01A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 254
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 12  

01A8 900000      R     MOV     DPTR,#epNumber
01AB E0                MOVX    A,@DPTR
01AC 75F003            MOV     B,#03H
01AF A4                MUL     AB
01B0 2400        R     ADD     A,#LOW USBFS_currentSampleFrequency
01B2 F9                MOV     R1,A
01B3 7400        R     MOV     A,#HIGH USBFS_currentSampleFrequency
01B5 35F0              ADDC    A,B
01B7 FA                MOV     R2,A
01B8 7B01              MOV     R3,#01H
01BA 900000      E     MOV     DPTR,#USBFS_currentTD+02H
01BD 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 255
01C0 120000      E     LCALL   USBFS_InitControlWrite
01C3 900000      R     MOV     DPTR,#requestHandled
01C6 EF                MOV     A,R7
01C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 256
01C8 900000      R     MOV     DPTR,#epNumber
01CB E0                MOVX    A,@DPTR
01CC 900000      R     MOV     DPTR,#USBFS_frequencyChanged
01CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 268
01D0 805B              SJMP    ?C0024
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
01D2 8059              SJMP    ?C0024
01D4         ?C0025:
                                           ; SOURCE LINE # 273
01D4 900000      R     MOV     DPTR,#bmRequestType
01D7 E0                MOVX    A,@DPTR
01D8 5403              ANL     A,#03H
01DA 6401              XRL     A,#01H
01DC 704F              JNZ     ?C0024
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 276
01DE 906001            MOV     DPTR,#06001H
01E1 E0                MOVX    A,@DPTR
01E2 14                DEC     A
01E3 7048              JNZ     ?C0024
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
01E5         ?C0033:
                                           ; SOURCE LINE # 280
01E5 906003            MOV     DPTR,#06003H
01E8 E0                MOVX    A,@DPTR
01E9 B4011D            CJNE    A,#01H,?C0034
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 291
01EC 900000      E     MOV     DPTR,#USBFS_currentTD
01EF E4                CLR     A
01F0 F0                MOVX    @DPTR,A
01F1 A3                INC     DPTR
01F2 04                INC     A
01F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
01F4 FB                MOV     R3,A
01F5 7A00        R     MOV     R2,#HIGH USBFS_currentMute
01F7 7900        R     MOV     R1,#LOW USBFS_currentMute
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 13  

01F9 900000      E     MOV     DPTR,#USBFS_currentTD+02H
01FC 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 293
01FF 120000      E     LCALL   USBFS_InitControlWrite
0202 900000      R     MOV     DPTR,#requestHandled
0205 EF                MOV     A,R7
0206 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
0207 8024              SJMP    ?C0024
0209         ?C0034:
                                           ; SOURCE LINE # 295
0209 906003            MOV     DPTR,#06003H
020C E0                MOVX    A,@DPTR
020D B4021D            CJNE    A,#02H,?C0024
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 306
0210 900000      E     MOV     DPTR,#USBFS_currentTD
0213 E4                CLR     A
0214 F0                MOVX    @DPTR,A
0215 A3                INC     DPTR
0216 7402              MOV     A,#02H
0218 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 307
0219 7B01              MOV     R3,#01H
021B 7A00        R     MOV     R2,#HIGH USBFS_currentVolume
021D 7900        R     MOV     R1,#LOW USBFS_currentVolume
021F 900000      E     MOV     DPTR,#USBFS_currentTD+02H
0222 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 308
0225 120000      E     LCALL   USBFS_InitControlWrite
0228 900000      R     MOV     DPTR,#requestHandled
022B EF                MOV     A,R7
022C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 339
022D         ?C0024:
                                           ; SOURCE LINE # 341
022D 900000      R     MOV     DPTR,#requestHandled
0230 E0                MOVX    A,@DPTR
0231 FF                MOV     R7,A
                                           ; SOURCE LINE # 342
0232         ?C0040:
0232 22                RET     
             ; FUNCTION USBFS_DispatchAUDIOClassRqst (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    563    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     37       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.51   USBFS_AUDIO                                                           10/22/2015 22:07:37 PAGE 14  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
