C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE IAMBIC
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\iambic.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\iambic.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051\DP8051_Keil_951
                    -\Debug/iambic.lst) CD OT(5,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\iambic.obj)

line level    source

   1          // Copyright 2013 David Turnbull AE9RB
   2          //
   3          // Licensed under the Apache License, Version 2.0 (the "License");
   4          // you may not use this file except in compliance with the License.
   5          // You may obtain a copy of the License at
   6          //
   7          //     http://www.apache.org/licenses/LICENSE-2.0
   8          //
   9          // Unless required by applicable law or agreed to in writing, software
  10          // distributed under the License is distributed on an "AS IS" BASIS,
  11          // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12          // See the License for the specific language governing permissions and
  13          // limitations under the License.
  14          
  15              // Iambino - Iambic Keyer for Arduino
  16          // Copyright (C) 2013 David Turnbull AE9RB
  17          // 
  18          // This program is free software: you can redistribute it and/or modify
  19          // it under the terms of the GNU General Public License as published by
  20          // the Free Software Foundation, either version 3 of the License, or
  21          // (at your option) any later version.
  22          // 
  23          // This program is distributed in the hope that it will be useful,
  24          // but WITHOUT ANY WARRANTY; without even the implied warranty of
  25          // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  26          // GNU General Public License for more details.
  27          // 
  28          // You should have received a copy of the GNU General Public License
  29          // along with this program.  If not, see <http://www.gnu.org/licenses/>.
  30          // 09/30/2014 Additions to support low latency CW and Iambic funtionality  Ron Patton / W4MMP
  31          // 01/01/2015 Added Semi Break-in Support Ron Patton / W4MMP
  32          
  33          
  34          #include <peaberry.h>
  35          #include <iambino.h>
  36          
  37          uint8 ee_firmware_version,ee_mode,ee_memory,ee_spacing,ee_paddle,ee_lag,ee_semi_breakin,ee_tx_hold,ee_weig
             -ht,ee_wpm,
  38                                                                          ee_iambic_tuning,ee_semi_control;
  39          
  40          struct cfg {
  41            int8_t  mode;
  42            int8_t  memory;
  43            int8_t  spacing;
  44            float   weight;
  45            uint8_t paddle;
  46            uint8_t lag;
  47          } cfg;
  48          
  49          static uint8 pa_on = FALSE;  //Flag to indicate the state of the Power Amplifier Finals - On or Off
  50          static long cfg_speed_micros;
  51          static long tx_timer;
  52          static uint32 tx_hold;
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 2   

  53          
  54          void get_cw_params(void){
  55   1          reg8 *RegPointer;
  56   1          double l_cw_delay_period;
  57   1                  
  58   1          //Get the address of the Second EEPROM row
  59   1          RegPointer = (reg8 *) (CYDEV_EE_BASE + CYDEV_EEPROM_ROW_SIZE);
  60   1              
  61   1          ee_firmware_version = RegPointer[EE_FIRMWARE_VERSION];
  62   1          if(ee_firmware_version != FIRMWARE_VERSION_MINOR){
  63   2              set_params(18.0,CFG_PADDLE_NORMAL,CFG_MODE_IAMBIC,CFG_SPACING_EL,CFG_WEIGHT_DIST,/*lag*/0,CFG_MEMO
             -RY_TYPE_B,
  64   2                                                                                          FALSE,FALSE,FALSE,FALS
             -E,FALSE,TX_HOLD_DEFAULT,SEMI_USE_ATU); 
  65   2          }
  66   1              
  67   1          ee_paddle = RegPointer[EE_PADDLE_REGISTER];
  68   1          ee_mode = RegPointer[EE_MODE_REGISTER];
  69   1          ee_spacing = RegPointer[EE_SPACING_REGISTER];
  70   1          ee_lag= RegPointer[EE_LAG_REGISTER];
  71   1          ee_memory = RegPointer[EE_MEMORY_REGISTER];
  72   1          ee_external_sound = RegPointer[EE_EXTERNAL_SOUND_REGISTER];
  73   1          ee_cw_mode = RegPointer[EE_CW_MODE_REGISTER];
  74   1          ee_iambic_mode = RegPointer[EE_IAMBIC_MODE_REGISTER];
  75   1          ee_semi_breakin = RegPointer[EE_SEMI_BREAKIN];
  76   1          ee_tx_hold = RegPointer[EE_TX_HOLD];
  77   1          ee_wpm = RegPointer[EE_WPM];
  78   1          ee_weight = RegPointer[EE_WEIGHT];
  79   1          ee_iambic_tuning = RegPointer[EE_IAMBIC_TUNING];
  80   1          ee_semi_control = RegPointer[EE_SEMI_CONTROL];
  81   1          
  82   1        
  83   1          l_cw_delay_period = (1969 *  (double)ee_tx_hold / (double)ee_wpm);
  84   1          CW_Hold_Timer_WritePeriod((uint16)l_cw_delay_period);
  85   1        
  86   1          cfg_set_speed((float)ee_wpm);
  87   1          cfg.paddle = ee_paddle;
  88   1          cfg.mode = ee_mode;
  89   1          cfg.spacing = ee_spacing;
  90   1          cfg.weight = (float)((float)ee_weight / 100);
  91   1          cfg.lag = ee_lag;
  92   1          cfg.memory = ee_memory;
  93   1      }
  94          
  95          void set_params(float wpm,uint8 paddle,uint8 mode,uint8 spacing,float weight, uint8 lag,uint8 memory,
  96                           uint8 l_sound,uint8 l_cw_mode,uint8 l_iambic_mode,float l_iambic_tuning,uint8 l_semi_brea
             -kin,uint8 l_tx_hold,uint8 l_semi_control)
  97          {
  98   1          uint8 error;
  99   1          uint8 is_written = 1;
 100   1          uint8 iambic_section;
 101   1         
 102   1          CySetTemp();
 103   1          iambic_section = CyEnterCriticalSection();  
 104   1               
 105   1          // This writes variable data to EEPROM
 106   1          error = EEPROM_ByteWrite(FIRMWARE_VERSION_MINOR,1u,EE_FIRMWARE_VERSION);
 107   1          error = EEPROM_ByteWrite(paddle,1u,EE_PADDLE_REGISTER);
 108   1          error = EEPROM_ByteWrite(mode,1u,EE_MODE_REGISTER);
 109   1          error = EEPROM_ByteWrite(spacing,1u,EE_SPACING_REGISTER);
 110   1          error = EEPROM_ByteWrite(lag,1u,EE_LAG_REGISTER);
 111   1          error = EEPROM_ByteWrite(memory,1u,EE_MEMORY_REGISTER);
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 3   

 112   1          error = EEPROM_ByteWrite(l_sound,1u,EE_EXTERNAL_SOUND_REGISTER);
 113   1          error = EEPROM_ByteWrite(l_cw_mode,1u,EE_CW_MODE_REGISTER);
 114   1          error = EEPROM_ByteWrite(l_iambic_mode,1u,EE_IAMBIC_MODE_REGISTER);
 115   1          error = EEPROM_ByteWrite(l_semi_breakin,1u,EE_SEMI_BREAKIN);
 116   1          error = EEPROM_ByteWrite(l_semi_control,1u,EE_SEMI_CONTROL);
 117   1          error = EEPROM_ByteWrite(l_tx_hold,1u,EE_TX_HOLD);
 118   1          error = EEPROM_ByteWrite(((uint8) (weight * 100)),1u,EE_WEIGHT);
 119   1          error = EEPROM_ByteWrite(((uint8)(wpm)),1u,EE_WPM);
 120   1          error = EEPROM_ByteWrite(((uint8) (l_iambic_tuning / RATIO_FACTOR)),1u,EE_IAMBIC_TUNING);
 121   1             
 122   1          CyExitCriticalSection(iambic_section);
 123   1      }
 124          
 125          void cfg_set_speed(float wpm) {
 126   1           cfg_speed_micros = ((long)((long)ee_iambic_tuning * RATIO_FACTOR) / (long)wpm);
 127   1      }
 128          
 129          void tx_send(long mark) {
 130   1          uint8 cw_timer_status;
 131   1             
 132   1          if(ee_semi_breakin){
 133   2              switch(ee_semi_control){//Signal host application to turn on TX Mode via comm port
 134   3                  case SEMI_USE_ATU:
 135   3                      Control_Write((Control_Read()) | (CONTROL_ATU_0_OE | CONTROL_ATU_0)); 
 136   3                      break;
 137   3                  case SEMI_USE_AMP:
 138   3                      Control_Write((Control_Read()) | CONTROL_AMP);
 139   3                      break;
 140   3              }
 141   2              cw_timer_status = cw_timer(TRUE);
 142   2          }
 143   1          if (ee_cw_mode && TX_Request){
 144   2              if(!pa_on){
 145   3                  Control_Write(Control_Read() | CONTROL_TX);
 146   3                  pa_on = TRUE;
 147   3                  if(ee_external_sound) Control_Write(Control_Read() | CONTROL_ATU_1);
 148   3              }
 149   2          }
 150   1        tx_timer = mark;
 151   1      }
 152          
 153          uint8 tx_loop(long mark) {
 154   1          static uint8 status = FALSE;
 155   1          
 156   1          if (ee_cw_mode && TX_Request){
 157   2              if(pa_on){
 158   3                  if(tx_timer - mark < 0){
 159   4                      Control_Write(Control_Read() & ~CONTROL_TX);
 160   4                      pa_on = FALSE;
 161   4                      if(ee_external_sound)Control_Write(Control_Read() & ~CONTROL_ATU_1);
 162   4                  }
 163   3              }
 164   2              if((pa_on == FALSE) && TX_Request){
 165   3                  status = TRUE;
 166   3              }else{
 167   3                  status = FALSE;
 168   3              }
 169   2          }
 170   1          return status;
 171   1      }
 172          
 173          uint8_t key_read() {
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 4   

 174   1          uint8_t k0,k1;
 175   1          
 176   1          k0 = E_key_0 ^ 1;
 177   1          k1 = E_key_1 ^ 1;
 178   1        
 179   1          if (cfg.mode == CFG_MODE_STRAIGHT) {
 180   2              k0 <<= 1;
 181   2              k1 = 0;
 182   2          } else if (cfg.paddle == CFG_PADDLE_NORMAL) {
 183   2              k1 <<= 1;
 184   2          } else {
 185   2              k0 <<= 1;
 186   2          }
 187   1          return (k0|k1);
 188   1      }
 189          
 190          uint8_t key_loop(long mark) {
 191   1        static uint8_t last, spacing=2, ultimatic, state=3, staged=0, mcode=0x80;
 192   1        static long read_after, start_after;
 193   1        uint8 k0,k1,ret = 0;
 194   1        long i;
 195   1        
 196   1        k0 = key_read();
 197   1        k1 = k0 & 2;
 198   1        k0 = k0 & 1;
 199   1        
 200   1        switch(state) {
 201   2        case 1: // waiting until ready for read
 202   2          if (cfg.spacing == CFG_SPACING_NONE)
 203   2            if ((k0 && last == DIT) || (k1 && last == DAH))
 204   2              read_after = mark /*+ KEY_DEBOUNCE_IAMBIC*/;
 205   2          if (read_after - mark < 0) state = 2;
 206   2          break;
 207   2        case 2: // waiting and reading
 208   2          if (start_after - mark < 0) state = 3;
 209   2          if (spacing < 4) break;
 210   2          //nobreak;
 211   2        case 3: // idle, spacing
 212   2          if (start_after - mark < 0) {
 213   3            switch (spacing) {
 214   4            case 0:
 215   4            case 2:
 216   4            case 3:
 217   4              break;
 218   4            case 1:
 219   4              ret = mcode;
 220   4              mcode=0x80;
 221   4              if (cfg.spacing >= CFG_SPACING_CHAR) state = 2;
 222   4              break;
 223   4            case 4:
 224   4              ret = mcode;
 225   4              //nobreak
 226   4            case 5:
 227   4            case 6:
 228   4              if (cfg.spacing >= CFG_SPACING_WORD) state = 2;
 229   4              break;
 230   4            }
 231   3            if (spacing < 7) spacing += 1;
 232   3            if (cfg.mode == CFG_MODE_BUG) state = 3;
 233   3            start_after += DIT * cfg_speed_micros;
 234   3          }
 235   2          break;
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 5   

 236   2        case 4: // debouncing straight/bug down
 237   2          if (start_after - mark < 0) state = 5;
 238   2          break;
 239   2        case 5: // holding straight/bug
 240   2          break;
 241   2        case 6: // debouncing straight/bug up
 242   2          if (read_after - mark < 0) {
 243   3            state = 3;
 244   3            staged = 0;
 245   3            start_after = mark + DIT * cfg_speed_micros;
 246   3            spacing = 0;
 247   3            if (mcode & 0x01) {
 248   4              mcode = 0xFF;
 249   4            } else {
 250   4              mcode >>= 1;
 251   4              mcode |= 0x80;
 252   4            }
 253   3          }
 254   2          break;
 255   2        }
 256   1      
 257   1        if (cfg.mode == CFG_MODE_STRAIGHT || cfg.mode == CFG_MODE_BUG) {
 258   2          if (k1) {
 259   3            i = mark /*+ KEY_DEBOUNCE_SRAIGHT*/;
 260   3            if (state < 4) {
 261   4              state = 4;
 262   4              start_after = i;
 263   4            }
 264   3            if (state < 6) {
 265   4              read_after = i;
 266   4              tx_send(i);
 267   4              ret = TRUE;
 268   4            }
 269   3            last = DAH;
 270   3            staged = 0;
 271   3          } 
 272   2          else if (state == 5) {
 273   3            if (staged == DIT) {
 274   4              state = 3;
 275   4            } else {
 276   4              state = 6;
 277   4              tx_send(mark);
 278   4              ret = TRUE;
 279   4            }
 280   3          }
 281   2        } else {
 282   2          if (state > 3) state = 6;
 283   2        }
 284   1        
 285   1        if (!staged) {
 286   2          if (state > 1) {
 287   3            if (k0 && k1) {
 288   4              if (ultimatic && cfg.mode == CFG_MODE_ULTIMATIC) staged = last;
 289   4              else if (last == DIT) staged = DAH;
 290   4              else staged = DIT;
 291   4              ultimatic = 1;
 292   4            } else {
 293   4              if (k0) staged = DIT;
 294   4              if (k1) staged = DAH;
 295   4              ultimatic = 0;
 296   4            }
 297   3          }
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 6   

 298   2          else if (!ultimatic || cfg.mode != CFG_MODE_ULTIMATIC) {
 299   3            if (k0 && (last == DAH || spacing > 0)) {
 300   4              if (cfg.memory & CFG_MEMORY_TYPE_DIT) {
 301   5                staged = DIT;
 302   5                ultimatic = 1;
 303   5              }
 304   4            }
 305   3            if (k1 && (last == DIT || spacing > 0)) {
 306   4              if (cfg.memory & CFG_MEMORY_TYPE_DAH) {
 307   5                staged = DAH;
 308   5                ultimatic = 1;
 309   5              }
 310   4            }
 311   3          }
 312   2        }
 313   1        
 314   1        if (state == 3 && staged) {
 315   2          i = mark + (long)staged * cfg_speed_micros;
 316   2          i += DIT * cfg_speed_micros * (cfg.weight * 2 - 1);
 317   2          read_after = start_after = i + (long)cfg.lag * 1000;
 318   2          tx_send(start_after);
 319   2          ret = TRUE;
 320   2          i += DIT * cfg_speed_micros * (2.0 - cfg.weight * 2);
 321   2          if (cfg.spacing >= CFG_SPACING_EL) {
 322   3            read_after = i /*- KEY_DEBOUNCE_IAMBIC*/;
 323   3            start_after = i;
 324   3          }
 325   2          spacing = 0;
 326   2          if (mcode & 0x01) {
 327   3            if (mcode != 0x01 || staged==DAH) mcode = 0xFF;
 328   3          } else {
 329   3            mcode >>= 1;
 330   3            if (staged==DAH) mcode |= 0x80;
 331   3          }
 332   2          last = staged;
 333   2          staged = 0;
 334   2          state = 1;
 335   2        }
 336   1      
 337   1        if (cfg.mode == CFG_MODE_STRAIGHT) return 0;
 338   1        return ret;
 339   1      }
 340          
 341          void iambic(){
 342   1          long mark;
 343   1          uint8_t key_down = FALSE;
 344   1          uint8 tx_loop_status;
 345   1          uint8 cw_timer_status;
 346   1                  
 347   1          mark = Iambic_Counter_ReadCounter();
 348   1          key_down = key_loop(mark);
 349   1          tx_loop_status = tx_loop(mark);
 350   1          if(ee_semi_breakin){
 351   2              if(tx_loop_status){
 352   3                  cw_timer_status = cw_timer(FALSE);
 353   3                  if(cw_timer_status){ 
 354   4                      switch(ee_semi_control){//Signal host application to turn off TX mode via the comm port
 355   5                          case SEMI_USE_ATU:
 356   5                              Control_Write(Control_Read() & ~CONTROL_ATU_0);
 357   5                              break;
 358   5                          case SEMI_USE_AMP:
 359   5                              Control_Write((Control_Read()) & ~CONTROL_AMP);
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 7   

 360   5                              break;
 361   5                      }
 362   4                  }
 363   3              }
 364   2          }
 365   1      }
 366            
 367          
 368          
 369          
 370          
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION get_cw_params (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 59
0000 900000      R     MOV     DPTR,#RegPointer
0003 7480              MOV     A,#080H
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7410              MOV     A,#010H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
000A 900000      R     MOV     DPTR,#RegPointer
000D E0                MOVX    A,@DPTR
000E FE                MOV     R6,A
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 F582              MOV     DPL,A
0013 8E83              MOV     DPH,R6
0015 E0                MOVX    A,@DPTR
0016 900000      R     MOV     DPTR,#ee_firmware_version
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 62
001A E0                MOVX    A,@DPTR
001B 645A              XRL     A,#05AH
001D 6041              JZ      ?C0001
                                           ; SOURCE LINE # 63
001F E4                CLR     A
0020 900000      R     MOV     DPTR,#?_set_params?BYTE+04H
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 04                INC     A
0028 F0                MOVX    @DPTR,A
0029 E4                CLR     A
002A FF                MOV     R7,A
002B FE                MOV     R6,A
002C FD                MOV     R5,A
002D 7C3F              MOV     R4,#03FH
002F A3                INC     DPTR
0030 120000      E     LCALL   ?C?LSTXDATA
0033 E4                CLR     A
0034 900000      R     MOV     DPTR,#?_set_params?BYTE+0BH
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7403              MOV     A,#03H
003B F0                MOVX    @DPTR,A
003C E4                CLR     A
003D A3                INC     DPTR
003E F0                MOVX    @DPTR,A
003F A3                INC     DPTR
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 F0                MOVX    @DPTR,A
0043 FF                MOV     R7,A
0044 FE                MOV     R6,A
0045 FD                MOV     R5,A
0046 FC                MOV     R4,A
0047 A3                INC     DPTR
0048 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 9   

004B E4                CLR     A
004C 900000      R     MOV     DPTR,#?_set_params?BYTE+014H
004F F0                MOVX    @DPTR,A
0050 A3                INC     DPTR
0051 747F              MOV     A,#07FH
0053 F0                MOVX    @DPTR,A
0054 E4                CLR     A
0055 A3                INC     DPTR
0056 F0                MOVX    @DPTR,A
0057 FF                MOV     R7,A
0058 FE                MOV     R6,A
0059 7D90              MOV     R5,#090H
005B 7C41              MOV     R4,#041H
005D 120000      R     LCALL   _set_params
                                           ; SOURCE LINE # 65
0060         ?C0001:
                                           ; SOURCE LINE # 67
0060 900000      R     MOV     DPTR,#RegPointer
0063 E0                MOVX    A,@DPTR
0064 FE                MOV     R6,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 F582              MOV     DPL,A
006A 8E83              MOV     DPH,R6
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E 900000      R     MOV     DPTR,#ee_paddle
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
0072 8F82              MOV     DPL,R7
0074 8E83              MOV     DPH,R6
0076 A3                INC     DPTR
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 900000      R     MOV     DPTR,#ee_mode
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
007D 900000      R     MOV     DPTR,#RegPointer
0080 E0                MOVX    A,@DPTR
0081 FE                MOV     R6,A
0082 A3                INC     DPTR
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 F582              MOV     DPL,A
0087 8E83              MOV     DPH,R6
0089 A3                INC     DPTR
008A A3                INC     DPTR
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D 900000      R     MOV     DPTR,#ee_spacing
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 70
0091 EF                MOV     A,R7
0092 2404              ADD     A,#04H
0094 F582              MOV     DPL,A
0096 E4                CLR     A
0097 3E                ADDC    A,R6
0098 F583              MOV     DPH,A
009A E0                MOVX    A,@DPTR
009B 900000      R     MOV     DPTR,#ee_lag
009E F0                MOVX    @DPTR,A
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 10  

                                           ; SOURCE LINE # 71
009F 900000      R     MOV     DPTR,#RegPointer
00A2 E0                MOVX    A,@DPTR
00A3 FE                MOV     R6,A
00A4 A3                INC     DPTR
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 2405              ADD     A,#05H
00A9 F582              MOV     DPL,A
00AB E4                CLR     A
00AC 3E                ADDC    A,R6
00AD F583              MOV     DPH,A
00AF E0                MOVX    A,@DPTR
00B0 900000      R     MOV     DPTR,#ee_memory
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
00B4 EF                MOV     A,R7
00B5 2407              ADD     A,#07H
00B7 F582              MOV     DPL,A
00B9 E4                CLR     A
00BA 3E                ADDC    A,R6
00BB F583              MOV     DPH,A
00BD E0                MOVX    A,@DPTR
00BE 900000      E     MOV     DPTR,#ee_external_sound
00C1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
00C2 900000      R     MOV     DPTR,#RegPointer
00C5 E0                MOVX    A,@DPTR
00C6 FE                MOV     R6,A
00C7 A3                INC     DPTR
00C8 E0                MOVX    A,@DPTR
00C9 FF                MOV     R7,A
00CA 2408              ADD     A,#08H
00CC F582              MOV     DPL,A
00CE E4                CLR     A
00CF 3E                ADDC    A,R6
00D0 F583              MOV     DPH,A
00D2 E0                MOVX    A,@DPTR
00D3 900000      E     MOV     DPTR,#ee_cw_mode
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
00D7 EF                MOV     A,R7
00D8 2409              ADD     A,#09H
00DA F582              MOV     DPL,A
00DC E4                CLR     A
00DD 3E                ADDC    A,R6
00DE F583              MOV     DPH,A
00E0 E0                MOVX    A,@DPTR
00E1 900000      E     MOV     DPTR,#ee_iambic_mode
00E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
00E5 900000      R     MOV     DPTR,#RegPointer
00E8 E0                MOVX    A,@DPTR
00E9 FE                MOV     R6,A
00EA A3                INC     DPTR
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
00ED 240A              ADD     A,#0AH
00EF F582              MOV     DPL,A
00F1 E4                CLR     A
00F2 3E                ADDC    A,R6
00F3 F583              MOV     DPH,A
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 11  

00F5 E0                MOVX    A,@DPTR
00F6 900000      R     MOV     DPTR,#ee_semi_breakin
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
00FA EF                MOV     A,R7
00FB 240B              ADD     A,#0BH
00FD F582              MOV     DPL,A
00FF E4                CLR     A
0100 3E                ADDC    A,R6
0101 F583              MOV     DPH,A
0103 E0                MOVX    A,@DPTR
0104 900000      R     MOV     DPTR,#ee_tx_hold
0107 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0108 900000      R     MOV     DPTR,#RegPointer
010B E0                MOVX    A,@DPTR
010C FE                MOV     R6,A
010D A3                INC     DPTR
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 240C              ADD     A,#0CH
0112 F582              MOV     DPL,A
0114 E4                CLR     A
0115 3E                ADDC    A,R6
0116 F583              MOV     DPH,A
0118 E0                MOVX    A,@DPTR
0119 900000      R     MOV     DPTR,#ee_wpm
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
011D EF                MOV     A,R7
011E 240D              ADD     A,#0DH
0120 F582              MOV     DPL,A
0122 E4                CLR     A
0123 3E                ADDC    A,R6
0124 F583              MOV     DPH,A
0126 E0                MOVX    A,@DPTR
0127 900000      R     MOV     DPTR,#ee_weight
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
012B 900000      R     MOV     DPTR,#RegPointer
012E E0                MOVX    A,@DPTR
012F FE                MOV     R6,A
0130 A3                INC     DPTR
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 240E              ADD     A,#0EH
0135 F582              MOV     DPL,A
0137 E4                CLR     A
0138 3E                ADDC    A,R6
0139 F583              MOV     DPH,A
013B E0                MOVX    A,@DPTR
013C 900000      R     MOV     DPTR,#ee_iambic_tuning
013F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
0140 EF                MOV     A,R7
0141 240F              ADD     A,#0FH
0143 F582              MOV     DPL,A
0145 E4                CLR     A
0146 3E                ADDC    A,R6
0147 F583              MOV     DPH,A
0149 E0                MOVX    A,@DPTR
014A 900000      R     MOV     DPTR,#ee_semi_control
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 12  

014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
014E 900000      R     MOV     DPTR,#ee_tx_hold
0151 E0                MOVX    A,@DPTR
0152 FC                MOV     R4,A
0153 E4                CLR     A
0154 120000      E     LCALL   ?C?FCASTC
0157 7B00              MOV     R3,#00H
0159 7A20              MOV     R2,#020H
015B 79F6              MOV     R1,#0F6H
015D 7844              MOV     R0,#044H
015F 120000      E     LCALL   ?C?FPMUL
0162 C004              PUSH    AR4
0164 C005              PUSH    AR5
0166 C006              PUSH    AR6
0168 C007              PUSH    AR7
016A 900000      R     MOV     DPTR,#ee_wpm
016D E0                MOVX    A,@DPTR
016E FC                MOV     R4,A
016F E4                CLR     A
0170 120000      E     LCALL   ?C?FCASTC
0173 A804              MOV     R0,AR4
0175 A905              MOV     R1,AR5
0177 AA06              MOV     R2,AR6
0179 AB07              MOV     R3,AR7
017B D007              POP     AR7
017D D006              POP     AR6
017F D005              POP     AR5
0181 D004              POP     AR4
0183 120000      E     LCALL   ?C?FPDIV
;---- Variable 'l_cw_delay_period' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 84
0186 120000      E     LCALL   ?C?CASTF
0189 120000      E     LCALL   _CW_Hold_Timer_WritePeriod
                                           ; SOURCE LINE # 86
018C 900000      R     MOV     DPTR,#ee_wpm
018F E0                MOVX    A,@DPTR
0190 FC                MOV     R4,A
0191 E4                CLR     A
0192 120000      E     LCALL   ?C?FCASTC
0195 120000      R     LCALL   _cfg_set_speed
                                           ; SOURCE LINE # 87
0198 900000      R     MOV     DPTR,#ee_paddle
019B E0                MOVX    A,@DPTR
019C 900000      R     MOV     DPTR,#cfg+07H
019F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
01A0 900000      R     MOV     DPTR,#ee_mode
01A3 E0                MOVX    A,@DPTR
01A4 900000      R     MOV     DPTR,#cfg
01A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 89
01A8 900000      R     MOV     DPTR,#ee_spacing
01AB E0                MOVX    A,@DPTR
01AC 900000      R     MOV     DPTR,#cfg+02H
01AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
01B0 900000      R     MOV     DPTR,#ee_weight
01B3 E0                MOVX    A,@DPTR
01B4 FC                MOV     R4,A
01B5 E4                CLR     A
01B6 120000      E     LCALL   ?C?FCASTC
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 13  

01B9 E4                CLR     A
01BA FB                MOV     R3,A
01BB FA                MOV     R2,A
01BC 79C8              MOV     R1,#0C8H
01BE 7842              MOV     R0,#042H
01C0 120000      E     LCALL   ?C?FPDIV
01C3 900000      R     MOV     DPTR,#cfg+03H
01C6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 91
01C9 900000      R     MOV     DPTR,#ee_lag
01CC E0                MOVX    A,@DPTR
01CD 900000      R     MOV     DPTR,#cfg+08H
01D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
01D1 900000      R     MOV     DPTR,#ee_memory
01D4 E0                MOVX    A,@DPTR
01D5 900000      R     MOV     DPTR,#cfg+01H
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
01D9 22                RET     
             ; FUNCTION get_cw_params (END)

             ; FUNCTION _set_params (BEGIN)
                                           ; SOURCE LINE # 95
0000 900000      R     MOV     DPTR,#wpm
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 99
0006 900000      R     MOV     DPTR,#is_written
0009 7401              MOV     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
000C 120000      E     LCALL   CySetTemp
                                           ; SOURCE LINE # 103
000F 120000      E     LCALL   CyEnterCriticalSection
0012 900000      R     MOV     DPTR,#iambic_section
0015 EF                MOV     A,R7
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0017 E4                CLR     A
0018 FB                MOV     R3,A
0019 7D01              MOV     R5,#01H
001B 7F5A              MOV     R7,#05AH
001D 120000      E     LCALL   _EEPROM_ByteWritePos
0020 900000      R     MOV     DPTR,#error
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 107
0025 900000      R     MOV     DPTR,#paddle
0028 E0                MOVX    A,@DPTR
0029 FF                MOV     R7,A
002A 7B01              MOV     R3,#01H
002C 7D01              MOV     R5,#01H
002E 120000      E     LCALL   _EEPROM_ByteWritePos
0031 900000      R     MOV     DPTR,#error
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
0036 900000      R     MOV     DPTR,#mode
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 7B02              MOV     R3,#02H
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 14  

003D 7D01              MOV     R5,#01H
003F 120000      E     LCALL   _EEPROM_ByteWritePos
0042 900000      R     MOV     DPTR,#error
0045 EF                MOV     A,R7
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
0047 900000      R     MOV     DPTR,#spacing
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C 7B03              MOV     R3,#03H
004E 7D01              MOV     R5,#01H
0050 120000      E     LCALL   _EEPROM_ByteWritePos
0053 900000      R     MOV     DPTR,#error
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
0058 900000      R     MOV     DPTR,#lag
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D 7B04              MOV     R3,#04H
005F 7D01              MOV     R5,#01H
0061 120000      E     LCALL   _EEPROM_ByteWritePos
0064 900000      R     MOV     DPTR,#error
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 111
0069 900000      R     MOV     DPTR,#memory
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 7B05              MOV     R3,#05H
0070 7D01              MOV     R5,#01H
0072 120000      E     LCALL   _EEPROM_ByteWritePos
0075 900000      R     MOV     DPTR,#error
0078 EF                MOV     A,R7
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
007A 900000      R     MOV     DPTR,#l_sound
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 7B07              MOV     R3,#07H
0081 7D01              MOV     R5,#01H
0083 120000      E     LCALL   _EEPROM_ByteWritePos
0086 900000      R     MOV     DPTR,#error
0089 EF                MOV     A,R7
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
008B 900000      R     MOV     DPTR,#l_cw_mode
008E E0                MOVX    A,@DPTR
008F FF                MOV     R7,A
0090 7B08              MOV     R3,#08H
0092 7D01              MOV     R5,#01H
0094 120000      E     LCALL   _EEPROM_ByteWritePos
0097 900000      R     MOV     DPTR,#error
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
009C 900000      R     MOV     DPTR,#l_iambic_mode
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 7B09              MOV     R3,#09H
00A3 7D01              MOV     R5,#01H
00A5 120000      E     LCALL   _EEPROM_ByteWritePos
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 15  

00A8 900000      R     MOV     DPTR,#error
00AB EF                MOV     A,R7
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
00AD 900000      R     MOV     DPTR,#l_semi_breakin
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 7B0A              MOV     R3,#0AH
00B4 7D01              MOV     R5,#01H
00B6 120000      E     LCALL   _EEPROM_ByteWritePos
00B9 900000      R     MOV     DPTR,#error
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
00BE 900000      R     MOV     DPTR,#l_semi_control
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 7B0F              MOV     R3,#0FH
00C5 7D01              MOV     R5,#01H
00C7 120000      E     LCALL   _EEPROM_ByteWritePos
00CA 900000      R     MOV     DPTR,#error
00CD EF                MOV     A,R7
00CE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
00CF 900000      R     MOV     DPTR,#l_tx_hold
00D2 E0                MOVX    A,@DPTR
00D3 FF                MOV     R7,A
00D4 7B0B              MOV     R3,#0BH
00D6 7D01              MOV     R5,#01H
00D8 120000      E     LCALL   _EEPROM_ByteWritePos
00DB 900000      R     MOV     DPTR,#error
00DE EF                MOV     A,R7
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
00E0 E4                CLR     A
00E1 FF                MOV     R7,A
00E2 FE                MOV     R6,A
00E3 7DC8              MOV     R5,#0C8H
00E5 7C42              MOV     R4,#042H
00E7 900000      R     MOV     DPTR,#weight
00EA 120000      E     LCALL   ?C?LLDXDATA0
00ED 120000      E     LCALL   ?C?FPMUL
00F0 120000      E     LCALL   ?C?CASTF
00F3 7B0D              MOV     R3,#0DH
00F5 7D01              MOV     R5,#01H
00F7 120000      E     LCALL   _EEPROM_ByteWritePos
00FA 900000      R     MOV     DPTR,#error
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 119
00FF 900000      R     MOV     DPTR,#wpm
0102 120000      E     LCALL   ?C?LLDXDATA
0105 120000      E     LCALL   ?C?CASTF
0108 7B0C              MOV     R3,#0CH
010A 7D01              MOV     R5,#01H
010C 120000      E     LCALL   _EEPROM_ByteWritePos
010F 900000      R     MOV     DPTR,#error
0112 EF                MOV     A,R7
0113 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
0114 7B00              MOV     R3,#00H
0116 7A40              MOV     R2,#040H
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 16  

0118 791C              MOV     R1,#01CH
011A 7846              MOV     R0,#046H
011C 900000      R     MOV     DPTR,#l_iambic_tuning
011F 120000      E     LCALL   ?C?LLDXDATA
0122 120000      E     LCALL   ?C?FPDIV
0125 120000      E     LCALL   ?C?CASTF
0128 7B0E              MOV     R3,#0EH
012A 7D01              MOV     R5,#01H
012C 120000      E     LCALL   _EEPROM_ByteWritePos
012F 900000      R     MOV     DPTR,#error
0132 EF                MOV     A,R7
0133 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 122
0134 900000      R     MOV     DPTR,#iambic_section
0137 E0                MOVX    A,@DPTR
0138 FF                MOV     R7,A
0139 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 123
013C 22                RET     
             ; FUNCTION _set_params (END)

             ; FUNCTION _cfg_set_speed (BEGIN)
                                           ; SOURCE LINE # 125
0000 900000      R     MOV     DPTR,#wpm
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 126
0006 900000      R     MOV     DPTR,#ee_iambic_tuning
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B E4                CLR     A
000C FC                MOV     R4,A
000D FD                MOV     R5,A
000E FE                MOV     R6,A
000F 7B10              MOV     R3,#010H
0011 7A27              MOV     R2,#027H
0013 F9                MOV     R1,A
0014 F8                MOV     R0,A
0015 120000      E     LCALL   ?C?LMUL
0018 C004              PUSH    AR4
001A C005              PUSH    AR5
001C C006              PUSH    AR6
001E C007              PUSH    AR7
0020 900000      R     MOV     DPTR,#wpm
0023 120000      E     LCALL   ?C?LLDXDATA
0026 120000      E     LCALL   ?C?CASTF
0029 AB07              MOV     R3,AR7
002B AA06              MOV     R2,AR6
002D A905              MOV     R1,AR5
002F A804              MOV     R0,AR4
0031 D007              POP     AR7
0033 D006              POP     AR6
0035 D005              POP     AR5
0037 D004              POP     AR4
0039 120000      E     LCALL   ?C?SLDIV
003C 900000      R     MOV     DPTR,#cfg_speed_micros
003F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 127
0042 22                RET     
             ; FUNCTION _cfg_set_speed (END)

             ; FUNCTION _tx_send (BEGIN)
                                           ; SOURCE LINE # 129
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 17  

0000 900000      R     MOV     DPTR,#mark
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 132
0006 900000      R     MOV     DPTR,#ee_semi_breakin
0009 E0                MOVX    A,@DPTR
000A 602A              JZ      ?C0005
                                           ; SOURCE LINE # 133
000C 900000      R     MOV     DPTR,#ee_semi_control
000F E0                MOVX    A,@DPTR
0010 14                DEC     A
0011 600F              JZ      ?C0008
0013 04                INC     A
0014 7016              JNZ     ?C0006
                                           ; SOURCE LINE # 134
0016         ?C0007:
                                           ; SOURCE LINE # 135
0016 120000      E     LCALL   Control_Read
0019 EF                MOV     A,R7
001A 4460              ORL     A,#060H
001C FF                MOV     R7,A
001D 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 136
0020 800A              SJMP    ?C0006
                                           ; SOURCE LINE # 137
0022         ?C0008:
                                           ; SOURCE LINE # 138
0022 120000      E     LCALL   Control_Read
0025 EF                MOV     A,R7
0026 4408              ORL     A,#08H
0028 FF                MOV     R7,A
0029 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
002C         ?C0006:
                                           ; SOURCE LINE # 141
002C 7F01              MOV     R7,#01H
002E 120000      E     LCALL   _cw_timer
0031 900000      R     MOV     DPTR,#cw_timer_status
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0036         ?C0005:
                                           ; SOURCE LINE # 143
0036 900000      E     MOV     DPTR,#ee_cw_mode
0039 E0                MOVX    A,@DPTR
003A 602C              JZ      ?C0009
003C 900000      E     MOV     DPTR,#TX_Request
003F E0                MOVX    A,@DPTR
0040 6026              JZ      ?C0009
                                           ; SOURCE LINE # 144
0042 900000      R     MOV     DPTR,#pa_on
0045 E0                MOVX    A,@DPTR
0046 7020              JNZ     ?C0009
                                           ; SOURCE LINE # 145
0048 120000      E     LCALL   Control_Read
004B EF                MOV     A,R7
004C 4404              ORL     A,#04H
004E FF                MOV     R7,A
004F 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 146
0052 900000      R     MOV     DPTR,#pa_on
0055 7401              MOV     A,#01H
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 18  

0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
0058 900000      E     MOV     DPTR,#ee_external_sound
005B E0                MOVX    A,@DPTR
005C 600A              JZ      ?C0009
005E 120000      E     LCALL   Control_Read
0061 EF                MOV     A,R7
0062 4480              ORL     A,#080H
0064 FF                MOV     R7,A
0065 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
0068         ?C0009:
                                           ; SOURCE LINE # 150
0068 900000      R     MOV     DPTR,#mark
006B 120000      E     LCALL   ?C?LLDXDATA
006E 900000      R     MOV     DPTR,#tx_timer
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 151
0074 22                RET     
             ; FUNCTION _tx_send (END)

             ; FUNCTION _tx_loop (BEGIN)
                                           ; SOURCE LINE # 153
0000 900000      R     MOV     DPTR,#mark
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 156
0006 900000      E     MOV     DPTR,#ee_cw_mode
0009 E0                MOVX    A,@DPTR
000A 605E              JZ      ?C0013
000C 900000      E     MOV     DPTR,#TX_Request
000F E0                MOVX    A,@DPTR
0010 6058              JZ      ?C0013
                                           ; SOURCE LINE # 157
0012 900000      R     MOV     DPTR,#pa_on
0015 E0                MOVX    A,@DPTR
0016 6039              JZ      ?C0014
                                           ; SOURCE LINE # 158
0018 900000      R     MOV     DPTR,#mark
001B 120000      E     LCALL   ?C?LLDXDATA0
001E 900000      R     MOV     DPTR,#tx_timer
0021 120000      E     LCALL   ?C?LLDXDATA
0024 120000      E     LCALL   ?C?LSUB
0027 E4                CLR     A
0028 FB                MOV     R3,A
0029 FA                MOV     R2,A
002A F9                MOV     R1,A
002B F8                MOV     R0,A
002C D3                SETB    C
002D 120000      E     LCALL   ?C?SLCMP
0030 401F              JC      ?C0014
                                           ; SOURCE LINE # 159
0032 120000      E     LCALL   Control_Read
0035 EF                MOV     A,R7
0036 54FB              ANL     A,#0FBH
0038 FF                MOV     R7,A
0039 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 160
003C E4                CLR     A
003D 900000      R     MOV     DPTR,#pa_on
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 19  

0041 900000      E     MOV     DPTR,#ee_external_sound
0044 E0                MOVX    A,@DPTR
0045 600A              JZ      ?C0014
0047 120000      E     LCALL   Control_Read
004A EF                MOV     A,R7
004B 547F              ANL     A,#07FH
004D FF                MOV     R7,A
004E 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
0051         ?C0014:
                                           ; SOURCE LINE # 164
0051 900000      R     MOV     DPTR,#pa_on
0054 E0                MOVX    A,@DPTR
0055 700E              JNZ     ?C0017
0057 900000      E     MOV     DPTR,#TX_Request
005A E0                MOVX    A,@DPTR
005B 6008              JZ      ?C0017
                                           ; SOURCE LINE # 165
005D 900000      R     MOV     DPTR,#status
0060 7401              MOV     A,#01H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0063 8005              SJMP    ?C0013
0065         ?C0017:
                                           ; SOURCE LINE # 167
0065 E4                CLR     A
0066 900000      R     MOV     DPTR,#status
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
006A         ?C0013:
                                           ; SOURCE LINE # 170
006A 900000      R     MOV     DPTR,#status
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
                                           ; SOURCE LINE # 171
006F         ?C0019:
006F 22                RET     
             ; FUNCTION _tx_loop (END)

             ; FUNCTION key_read (BEGIN)
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 176
0000 900000      E     MOV     DPTR,#E_key_0
0003 E0                MOVX    A,@DPTR
0004 6401              XRL     A,#01H
0006 FF                MOV     R7,A
;---- Variable 'k0' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 177
0007 900000      E     MOV     DPTR,#E_key_1
000A E0                MOVX    A,@DPTR
000B 6401              XRL     A,#01H
000D FE                MOV     R6,A
;---- Variable 'k1' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 179
000E 900000      R     MOV     DPTR,#cfg
0011 E0                MOVX    A,@DPTR
0012 B40308            CJNE    A,#03H,?C0020
                                           ; SOURCE LINE # 180
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 20  

0018 FF                MOV     R7,A
                                           ; SOURCE LINE # 181
0019 E4                CLR     A
001A FE                MOV     R6,A
                                           ; SOURCE LINE # 182
001B 8010              SJMP    ?C0021
001D         ?C0020:
001D 900000      R     MOV     DPTR,#cfg+07H
0020 E0                MOVX    A,@DPTR
0021 7006              JNZ     ?C0022
                                           ; SOURCE LINE # 183
0023 EE                MOV     A,R6
0024 25E0              ADD     A,ACC
0026 FE                MOV     R6,A
                                           ; SOURCE LINE # 184
0027 8004              SJMP    ?C0021
0029         ?C0022:
                                           ; SOURCE LINE # 185
0029 EF                MOV     A,R7
002A 25E0              ADD     A,ACC
002C FF                MOV     R7,A
                                           ; SOURCE LINE # 186
002D         ?C0021:
                                           ; SOURCE LINE # 187
002D EF                MOV     A,R7
002E 4E                ORL     A,R6
002F FF                MOV     R7,A
                                           ; SOURCE LINE # 188
0030         ?C0024:
0030 22                RET     
             ; FUNCTION key_read (END)

             ; FUNCTION _key_loop (BEGIN)
                                           ; SOURCE LINE # 190
0000 900000      R     MOV     DPTR,#mark
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 193
0006 E4                CLR     A
0007 900000      R     MOV     DPTR,#ret
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
000B 120000      R     LCALL   key_read
000E 900000      R     MOV     DPTR,#k0
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 5402              ANL     A,#02H
0017 A3                INC     DPTR
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
0019 EE                MOV     A,R6
001A 5401              ANL     A,#01H
001C 900000      R     MOV     DPTR,#k0
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
0020 900000      R     MOV     DPTR,#state
0023 E0                MOVX    A,@DPTR
0024 24FE              ADD     A,#0FEH
0026 606D              JZ      ?C0032
0028 14                DEC     A
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 21  

0029 7003              JNZ     $ + 5H
002B 020000      R     LJMP    ?C0035
002E 14                DEC     A
002F 7003              JNZ     $ + 5H
0031 020000      R     LJMP    ?C0049
0034 24FE              ADD     A,#0FEH
0036 7003              JNZ     $ + 5H
0038 020000      R     LJMP    ?C0052
003B 2405              ADD     A,#05H
003D 6003              JZ      $ + 5H
003F 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 201
0042         ?C0026:
                                           ; SOURCE LINE # 202
0042 900000      R     MOV     DPTR,#cfg+02H
0045 E0                MOVX    A,@DPTR
0046 7027              JNZ     ?C0027
                                           ; SOURCE LINE # 203
0048 900000      R     MOV     DPTR,#k0
004B E0                MOVX    A,@DPTR
004C 6008              JZ      ?C0030
004E 900000      R     MOV     DPTR,#last
0051 E0                MOVX    A,@DPTR
0052 6401              XRL     A,#01H
0054 600D              JZ      ?C0029
0056         ?C0030:
0056 900000      R     MOV     DPTR,#k1
0059 E0                MOVX    A,@DPTR
005A 6013              JZ      ?C0027
005C 900000      R     MOV     DPTR,#last
005F E0                MOVX    A,@DPTR
0060 B4030C            CJNE    A,#03H,?C0027
0063         ?C0029:
                                           ; SOURCE LINE # 204
0063 900000      R     MOV     DPTR,#mark
0066 120000      E     LCALL   ?C?LLDXDATA
0069 900000      R     MOV     DPTR,#read_after
006C 120000      E     LCALL   ?C?LSTXDATA
006F         ?C0027:
                                           ; SOURCE LINE # 205
006F 900000      R     MOV     DPTR,#mark
0072 120000      E     LCALL   ?C?LLDXDATA0
0075 900000      R     MOV     DPTR,#read_after
0078 120000      E     LCALL   ?C?LLDXDATA
007B 120000      E     LCALL   ?C?LSUB
007E E4                CLR     A
007F FB                MOV     R3,A
0080 FA                MOV     R2,A
0081 F9                MOV     R1,A
0082 F8                MOV     R0,A
0083 D3                SETB    C
0084 120000      E     LCALL   ?C?SLCMP
0087 5003              JNC     $ + 5H
0089 020000      R     LJMP    ?C0025
008C 900000      R     MOV     DPTR,#state
008F 7402              MOV     A,#02H
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
0092 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 207
0095         ?C0032:
                                           ; SOURCE LINE # 208
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 22  

0095 900000      R     MOV     DPTR,#mark
0098 120000      E     LCALL   ?C?LLDXDATA0
009B 900000      R     MOV     DPTR,#start_after
009E 120000      E     LCALL   ?C?LLDXDATA
00A1 120000      E     LCALL   ?C?LSUB
00A4 E4                CLR     A
00A5 FB                MOV     R3,A
00A6 FA                MOV     R2,A
00A7 F9                MOV     R1,A
00A8 F8                MOV     R0,A
00A9 D3                SETB    C
00AA 120000      E     LCALL   ?C?SLCMP
00AD 4006              JC      ?C0033
00AF 900000      R     MOV     DPTR,#state
00B2 7403              MOV     A,#03H
00B4 F0                MOVX    @DPTR,A
00B5         ?C0033:
                                           ; SOURCE LINE # 209
00B5 900000      R     MOV     DPTR,#spacing
00B8 E0                MOVX    A,@DPTR
00B9 C3                CLR     C
00BA 9404              SUBB    A,#04H
00BC 5003              JNC     $ + 5H
00BE 020000      R     LJMP    ?C0025
00C1         ?C0034:
                                           ; SOURCE LINE # 211
00C1         ?C0035:
                                           ; SOURCE LINE # 212
00C1 900000      R     MOV     DPTR,#mark
00C4 120000      E     LCALL   ?C?LLDXDATA0
00C7 900000      R     MOV     DPTR,#start_after
00CA 120000      E     LCALL   ?C?LLDXDATA
00CD 120000      E     LCALL   ?C?LSUB
00D0 E4                CLR     A
00D1 FB                MOV     R3,A
00D2 FA                MOV     R2,A
00D3 F9                MOV     R1,A
00D4 F8                MOV     R0,A
00D5 D3                SETB    C
00D6 120000      E     LCALL   ?C?SLCMP
00D9 5003              JNC     $ + 5H
00DB 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 213
00DE 900000      R     MOV     DPTR,#spacing
00E1 E0                MOVX    A,@DPTR
00E2 FF                MOV     R7,A
00E3 24FC              ADD     A,#0FCH
00E5 6029              JZ      ?C0043
00E7 14                DEC     A
00E8 602E              JZ      ?C0045
00EA 14                DEC     A
00EB 602B              JZ      ?C0045
00ED 2405              ADD     A,#05H
00EF 7036              JNZ     ?C0037
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
00F1         ?C0041:
                                           ; SOURCE LINE # 219
00F1 900000      R     MOV     DPTR,#mcode
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 23  

00F4 E0                MOVX    A,@DPTR
00F5 900000      R     MOV     DPTR,#ret
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
00F9 900000      R     MOV     DPTR,#mcode
00FC 7480              MOV     A,#080H
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
00FF 900000      R     MOV     DPTR,#cfg+02H
0102 E0                MOVX    A,@DPTR
0103 C3                CLR     C
0104 9402              SUBB    A,#02H
0106 401F              JC      ?C0037
0108 900000      R     MOV     DPTR,#state
010B 7402              MOV     A,#02H
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
010E 8017              SJMP    ?C0037
                                           ; SOURCE LINE # 223
0110         ?C0043:
                                           ; SOURCE LINE # 224
0110 900000      R     MOV     DPTR,#mcode
0113 E0                MOVX    A,@DPTR
0114 900000      R     MOV     DPTR,#ret
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
0118         ?C0045:
                                           ; SOURCE LINE # 228
0118 900000      R     MOV     DPTR,#cfg+02H
011B E0                MOVX    A,@DPTR
011C C3                CLR     C
011D 9403              SUBB    A,#03H
011F 4006              JC      ?C0037
0121 900000      R     MOV     DPTR,#state
0124 7402              MOV     A,#02H
0126 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
0127         ?C0037:
                                           ; SOURCE LINE # 231
0127 EF                MOV     A,R7
0128 C3                CLR     C
0129 9407              SUBB    A,#07H
012B 5006              JNC     ?C0047
012D 900000      R     MOV     DPTR,#spacing
0130 E0                MOVX    A,@DPTR
0131 04                INC     A
0132 F0                MOVX    @DPTR,A
0133         ?C0047:
                                           ; SOURCE LINE # 232
0133 900000      R     MOV     DPTR,#cfg
0136 E0                MOVX    A,@DPTR
0137 B40206            CJNE    A,#02H,?C0048
013A 900000      R     MOV     DPTR,#state
013D 7403              MOV     A,#03H
013F F0                MOVX    @DPTR,A
0140         ?C0048:
                                           ; SOURCE LINE # 233
0140 900000      R     MOV     DPTR,#start_after
0143 120000      E     LCALL   ?C?LLDXDATA
0146 900000      R     MOV     DPTR,#cfg_speed_micros
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 24  

0149 120000      E     LCALL   ?C?LLDXDATA0
014C 120000      E     LCALL   ?C?LADD
014F 900000      R     MOV     DPTR,#start_after
0152 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
0155 8076              SJMP    ?C0025
                                           ; SOURCE LINE # 236
0157         ?C0049:
                                           ; SOURCE LINE # 237
0157 900000      R     MOV     DPTR,#mark
015A 120000      E     LCALL   ?C?LLDXDATA0
015D 900000      R     MOV     DPTR,#start_after
0160 120000      E     LCALL   ?C?LLDXDATA
0163 120000      E     LCALL   ?C?LSUB
0166 E4                CLR     A
0167 FB                MOV     R3,A
0168 FA                MOV     R2,A
0169 F9                MOV     R1,A
016A F8                MOV     R0,A
016B D3                SETB    C
016C 120000      E     LCALL   ?C?SLCMP
016F 405C              JC      ?C0025
0171 900000      R     MOV     DPTR,#state
0174 7405              MOV     A,#05H
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
0177 8054              SJMP    ?C0025
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
0179         ?C0052:
                                           ; SOURCE LINE # 242
0179 900000      R     MOV     DPTR,#mark
017C 120000      E     LCALL   ?C?LLDXDATA0
017F 900000      R     MOV     DPTR,#read_after
0182 120000      E     LCALL   ?C?LLDXDATA
0185 120000      E     LCALL   ?C?LSUB
0188 E4                CLR     A
0189 FB                MOV     R3,A
018A FA                MOV     R2,A
018B F9                MOV     R1,A
018C F8                MOV     R0,A
018D D3                SETB    C
018E 120000      E     LCALL   ?C?SLCMP
0191 403A              JC      ?C0025
                                           ; SOURCE LINE # 243
0193 900000      R     MOV     DPTR,#state
0196 7403              MOV     A,#03H
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
0199 E4                CLR     A
019A A3                INC     DPTR
019B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
019C 900000      R     MOV     DPTR,#cfg_speed_micros
019F 120000      E     LCALL   ?C?LLDXDATA
01A2 900000      R     MOV     DPTR,#mark
01A5 120000      E     LCALL   ?C?LLDXDATA0
01A8 120000      E     LCALL   ?C?LADD
01AB 900000      R     MOV     DPTR,#start_after
01AE 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 25  

                                           ; SOURCE LINE # 246
01B1 E4                CLR     A
01B2 900000      R     MOV     DPTR,#spacing
01B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
01B6 900000      R     MOV     DPTR,#mcode
01B9 E0                MOVX    A,@DPTR
01BA FF                MOV     R7,A
01BB 30E005            JNB     ACC.0,?C0054
                                           ; SOURCE LINE # 248
01BE 74FF              MOV     A,#0FFH
01C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
01C1 800A              SJMP    ?C0025
01C3         ?C0054:
                                           ; SOURCE LINE # 250
01C3 EF                MOV     A,R7
01C4 C3                CLR     C
01C5 13                RRC     A
01C6 900000      R     MOV     DPTR,#mcode
01C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
01CA 4480              ORL     A,#080H
01CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
01CD         ?C0025:
                                           ; SOURCE LINE # 257
01CD 900000      R     MOV     DPTR,#cfg
01D0 E0                MOVX    A,@DPTR
01D1 FF                MOV     R7,A
01D2 6403              XRL     A,#03H
01D4 6008              JZ      ?C0057
01D6 EF                MOV     A,R7
01D7 6402              XRL     A,#02H
01D9 6003              JZ      $ + 5H
01DB 020000      R     LJMP    ?C0056
01DE         ?C0057:
                                           ; SOURCE LINE # 258
01DE 900000      R     MOV     DPTR,#k1
01E1 E0                MOVX    A,@DPTR
01E2 6055              JZ      ?C0058
                                           ; SOURCE LINE # 259
01E4 900000      R     MOV     DPTR,#mark
01E7 120000      E     LCALL   ?C?LLDXDATA
01EA 900000      R     MOV     DPTR,#i
01ED 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 260
01F0 900000      R     MOV     DPTR,#state
01F3 E0                MOVX    A,@DPTR
01F4 C3                CLR     C
01F5 9404              SUBB    A,#04H
01F7 500F              JNC     ?C0059
                                           ; SOURCE LINE # 261
01F9 7404              MOV     A,#04H
01FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 262
01FC 900000      R     MOV     DPTR,#i
01FF 120000      E     LCALL   ?C?LLDXDATA
0202 900000      R     MOV     DPTR,#start_after
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 26  

0205 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 263
0208         ?C0059:
                                           ; SOURCE LINE # 264
0208 900000      R     MOV     DPTR,#state
020B E0                MOVX    A,@DPTR
020C C3                CLR     C
020D 9406              SUBB    A,#06H
020F 501B              JNC     ?C0060
                                           ; SOURCE LINE # 265
0211 900000      R     MOV     DPTR,#i
0214 120000      E     LCALL   ?C?LLDXDATA
0217 900000      R     MOV     DPTR,#read_after
021A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 266
021D 900000      R     MOV     DPTR,#i
0220 120000      E     LCALL   ?C?LLDXDATA
0223 120000      R     LCALL   _tx_send
                                           ; SOURCE LINE # 267
0226 900000      R     MOV     DPTR,#ret
0229 7401              MOV     A,#01H
022B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
022C         ?C0060:
                                           ; SOURCE LINE # 269
022C 900000      R     MOV     DPTR,#last
022F 7403              MOV     A,#03H
0231 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
0232 E4                CLR     A
0233 900000      R     MOV     DPTR,#staged
0236 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 271
0237 8038              SJMP    ?C0065
0239         ?C0058:
                                           ; SOURCE LINE # 272
0239 900000      R     MOV     DPTR,#state
023C E0                MOVX    A,@DPTR
023D 6405              XRL     A,#05H
023F 7030              JNZ     ?C0065
                                           ; SOURCE LINE # 273
0241 A3                INC     DPTR
0242 E0                MOVX    A,@DPTR
0243 B40108            CJNE    A,#01H,?C0063
                                           ; SOURCE LINE # 274
0246 900000      R     MOV     DPTR,#state
0249 7403              MOV     A,#03H
024B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 275
024C 8023              SJMP    ?C0065
024E         ?C0063:
                                           ; SOURCE LINE # 276
024E 900000      R     MOV     DPTR,#state
0251 7406              MOV     A,#06H
0253 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
0254 900000      R     MOV     DPTR,#mark
0257 120000      E     LCALL   ?C?LLDXDATA
025A 120000      R     LCALL   _tx_send
                                           ; SOURCE LINE # 278
025D 900000      R     MOV     DPTR,#ret
0260 7401              MOV     A,#01H
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 27  

0262 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0263 800C              SJMP    ?C0065
0265         ?C0056:
                                           ; SOURCE LINE # 282
0265 900000      R     MOV     DPTR,#state
0268 E0                MOVX    A,@DPTR
0269 D3                SETB    C
026A 9403              SUBB    A,#03H
026C 4003              JC      ?C0065
026E 7406              MOV     A,#06H
0270 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 283
0271         ?C0065:
                                           ; SOURCE LINE # 285
0271 900000      R     MOV     DPTR,#staged
0274 E0                MOVX    A,@DPTR
0275 6003              JZ      $ + 5H
0277 020000      R     LJMP    ?C0067
                                           ; SOURCE LINE # 286
027A 900000      R     MOV     DPTR,#state
027D E0                MOVX    A,@DPTR
027E D3                SETB    C
027F 9401              SUBB    A,#01H
0281 405B              JC      ?C0068
                                           ; SOURCE LINE # 287
0283 900000      R     MOV     DPTR,#k0
0286 E0                MOVX    A,@DPTR
0287 FF                MOV     R7,A
0288 6038              JZ      ?C0069
028A A3                INC     DPTR
028B E0                MOVX    A,@DPTR
028C 6034              JZ      ?C0069
                                           ; SOURCE LINE # 288
028E 900000      R     MOV     DPTR,#ultimatic
0291 E0                MOVX    A,@DPTR
0292 6011              JZ      ?C0070
0294 900000      R     MOV     DPTR,#cfg
0297 E0                MOVX    A,@DPTR
0298 B4010A            CJNE    A,#01H,?C0070
029B 900000      R     MOV     DPTR,#last
029E E0                MOVX    A,@DPTR
029F 900000      R     MOV     DPTR,#staged
02A2 F0                MOVX    @DPTR,A
02A3 8015              SJMP    ?C0071
02A5         ?C0070:
                                           ; SOURCE LINE # 289
02A5 900000      R     MOV     DPTR,#last
02A8 E0                MOVX    A,@DPTR
02A9 B40108            CJNE    A,#01H,?C0072
02AC 900000      R     MOV     DPTR,#staged
02AF 7403              MOV     A,#03H
02B1 F0                MOVX    @DPTR,A
02B2 8006              SJMP    ?C0071
02B4         ?C0072:
                                           ; SOURCE LINE # 290
02B4 900000      R     MOV     DPTR,#staged
02B7 7401              MOV     A,#01H
02B9 F0                MOVX    @DPTR,A
02BA         ?C0071:
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 28  

                                           ; SOURCE LINE # 291
02BA 900000      R     MOV     DPTR,#ultimatic
02BD 7401              MOV     A,#01H
02BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
02C0 8078              SJMP    ?C0067
02C2         ?C0069:
                                           ; SOURCE LINE # 293
02C2 EF                MOV     A,R7
02C3 6006              JZ      ?C0075
02C5 900000      R     MOV     DPTR,#staged
02C8 7401              MOV     A,#01H
02CA F0                MOVX    @DPTR,A
02CB         ?C0075:
                                           ; SOURCE LINE # 294
02CB 900000      R     MOV     DPTR,#k1
02CE E0                MOVX    A,@DPTR
02CF 6006              JZ      ?C0076
02D1 900000      R     MOV     DPTR,#staged
02D4 7403              MOV     A,#03H
02D6 F0                MOVX    @DPTR,A
02D7         ?C0076:
                                           ; SOURCE LINE # 295
02D7 E4                CLR     A
02D8 900000      R     MOV     DPTR,#ultimatic
02DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
02DC 805C              SJMP    ?C0067
02DE         ?C0068:
                                           ; SOURCE LINE # 298
02DE 900000      R     MOV     DPTR,#ultimatic
02E1 E0                MOVX    A,@DPTR
02E2 6008              JZ      ?C0079
02E4 900000      R     MOV     DPTR,#cfg
02E7 E0                MOVX    A,@DPTR
02E8 6401              XRL     A,#01H
02EA 604E              JZ      ?C0067
02EC         ?C0079:
                                           ; SOURCE LINE # 299
02EC 900000      R     MOV     DPTR,#k0
02EF E0                MOVX    A,@DPTR
02F0 6020              JZ      ?C0080
02F2 900000      R     MOV     DPTR,#last
02F5 E0                MOVX    A,@DPTR
02F6 6403              XRL     A,#03H
02F8 6007              JZ      ?C0081
02FA A3                INC     DPTR
02FB E0                MOVX    A,@DPTR
02FC D3                SETB    C
02FD 9400              SUBB    A,#00H
02FF 4011              JC      ?C0080
0301         ?C0081:
                                           ; SOURCE LINE # 300
0301 900000      R     MOV     DPTR,#cfg+01H
0304 E0                MOVX    A,@DPTR
0305 30E10A            JNB     ACC.1,?C0080
                                           ; SOURCE LINE # 301
0308 900000      R     MOV     DPTR,#staged
030B 7401              MOV     A,#01H
030D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 29  

030E 900000      R     MOV     DPTR,#ultimatic
0311 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
                                           ; SOURCE LINE # 304
0312         ?C0080:
                                           ; SOURCE LINE # 305
0312 900000      R     MOV     DPTR,#k1
0315 E0                MOVX    A,@DPTR
0316 6022              JZ      ?C0067
0318 900000      R     MOV     DPTR,#last
031B E0                MOVX    A,@DPTR
031C 6401              XRL     A,#01H
031E 6007              JZ      ?C0084
0320 A3                INC     DPTR
0321 E0                MOVX    A,@DPTR
0322 D3                SETB    C
0323 9400              SUBB    A,#00H
0325 4013              JC      ?C0067
0327         ?C0084:
                                           ; SOURCE LINE # 306
0327 900000      R     MOV     DPTR,#cfg+01H
032A E0                MOVX    A,@DPTR
032B 30E00C            JNB     ACC.0,?C0067
                                           ; SOURCE LINE # 307
032E 900000      R     MOV     DPTR,#staged
0331 7403              MOV     A,#03H
0333 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 308
0334 900000      R     MOV     DPTR,#ultimatic
0337 7401              MOV     A,#01H
0339 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 312
033A         ?C0067:
                                           ; SOURCE LINE # 314
033A 900000      R     MOV     DPTR,#state
033D E0                MOVX    A,@DPTR
033E 6403              XRL     A,#03H
0340 6003              JZ      $ + 5H
0342 020000      R     LJMP    ?C0086
0345 A3                INC     DPTR
0346 E0                MOVX    A,@DPTR
0347 FF                MOV     R7,A
0348 7003              JNZ     $ + 5H
034A 020000      R     LJMP    ?C0086
                                           ; SOURCE LINE # 315
034D E4                CLR     A
034E FC                MOV     R4,A
034F FD                MOV     R5,A
0350 FE                MOV     R6,A
0351 900000      R     MOV     DPTR,#cfg_speed_micros
0354 120000      E     LCALL   ?C?LLDXDATA0
0357 120000      E     LCALL   ?C?LMUL
035A 900000      R     MOV     DPTR,#mark
035D 120000      E     LCALL   ?C?LLDXDATA0
0360 120000      E     LCALL   ?C?LADD
0363 900000      R     MOV     DPTR,#i
0366 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 316
0369 E4                CLR     A
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 30  

036A FF                MOV     R7,A
036B FE                MOV     R6,A
036C FD                MOV     R5,A
036D 7C40              MOV     R4,#040H
036F 900000      R     MOV     DPTR,#cfg+03H
0372 120000      E     LCALL   ?C?LLDXDATA0
0375 120000      E     LCALL   ?C?FPMUL
0378 E4                CLR     A
0379 FB                MOV     R3,A
037A FA                MOV     R2,A
037B 7980              MOV     R1,#080H
037D 78BF              MOV     R0,#0BFH
037F 120000      E     LCALL   ?C?FPADD
0382 C004              PUSH    AR4
0384 C005              PUSH    AR5
0386 C006              PUSH    AR6
0388 C007              PUSH    AR7
038A 900000      R     MOV     DPTR,#cfg_speed_micros
038D 120000      E     LCALL   ?C?LLDXDATA
0390 EC                MOV     A,R4
0391 120000      E     LCALL   ?C?FCASTL
0394 D003              POP     AR3
0396 D002              POP     AR2
0398 D001              POP     AR1
039A D000              POP     AR0
039C 120000      E     LCALL   ?C?FPMUL
039F C004              PUSH    AR4
03A1 C005              PUSH    AR5
03A3 C006              PUSH    AR6
03A5 C007              PUSH    AR7
03A7 900000      R     MOV     DPTR,#i
03AA 120000      E     LCALL   ?C?LLDXDATA
03AD EC                MOV     A,R4
03AE 120000      E     LCALL   ?C?FCASTL
03B1 D003              POP     AR3
03B3 D002              POP     AR2
03B5 D001              POP     AR1
03B7 D000              POP     AR0
03B9 120000      E     LCALL   ?C?FPADD
03BC 120000      E     LCALL   ?C?CASTF
03BF 900000      R     MOV     DPTR,#i
03C2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 317
03C5 900000      R     MOV     DPTR,#cfg+08H
03C8 E0                MOVX    A,@DPTR
03C9 FF                MOV     R7,A
03CA E4                CLR     A
03CB FC                MOV     R4,A
03CC FD                MOV     R5,A
03CD FE                MOV     R6,A
03CE 7BE8              MOV     R3,#0E8H
03D0 7A03              MOV     R2,#03H
03D2 F9                MOV     R1,A
03D3 F8                MOV     R0,A
03D4 120000      E     LCALL   ?C?LMUL
03D7 900000      R     MOV     DPTR,#i
03DA 120000      E     LCALL   ?C?LLDXDATA0
03DD 120000      E     LCALL   ?C?LADD
03E0 900000      R     MOV     DPTR,#start_after
03E3 120000      E     LCALL   ?C?LSTXDATA
03E6 900000      R     MOV     DPTR,#read_after
03E9 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 31  

                                           ; SOURCE LINE # 318
03EC 900000      R     MOV     DPTR,#start_after
03EF 120000      E     LCALL   ?C?LLDXDATA
03F2 120000      R     LCALL   _tx_send
                                           ; SOURCE LINE # 319
03F5 900000      R     MOV     DPTR,#ret
03F8 7401              MOV     A,#01H
03FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 320
03FB E4                CLR     A
03FC FF                MOV     R7,A
03FD FE                MOV     R6,A
03FE FD                MOV     R5,A
03FF 7C40              MOV     R4,#040H
0401 900000      R     MOV     DPTR,#cfg+03H
0404 120000      E     LCALL   ?C?LLDXDATA0
0407 120000      E     LCALL   ?C?FPMUL
040A A804              MOV     R0,AR4
040C A905              MOV     R1,AR5
040E AA06              MOV     R2,AR6
0410 AB07              MOV     R3,AR7
0412 E4                CLR     A
0413 FF                MOV     R7,A
0414 FE                MOV     R6,A
0415 FD                MOV     R5,A
0416 7C40              MOV     R4,#040H
0418 120000      E     LCALL   ?C?FPSUB
041B C004              PUSH    AR4
041D C005              PUSH    AR5
041F C006              PUSH    AR6
0421 C007              PUSH    AR7
0423 900000      R     MOV     DPTR,#cfg_speed_micros
0426 120000      E     LCALL   ?C?LLDXDATA
0429 EC                MOV     A,R4
042A 120000      E     LCALL   ?C?FCASTL
042D D003              POP     AR3
042F D002              POP     AR2
0431 D001              POP     AR1
0433 D000              POP     AR0
0435 120000      E     LCALL   ?C?FPMUL
0438 C004              PUSH    AR4
043A C005              PUSH    AR5
043C C006              PUSH    AR6
043E C007              PUSH    AR7
0440 900000      R     MOV     DPTR,#i
0443 120000      E     LCALL   ?C?LLDXDATA
0446 EC                MOV     A,R4
0447 120000      E     LCALL   ?C?FCASTL
044A D003              POP     AR3
044C D002              POP     AR2
044E D001              POP     AR1
0450 D000              POP     AR0
0452 120000      E     LCALL   ?C?FPADD
0455 120000      E     LCALL   ?C?CASTF
0458 900000      R     MOV     DPTR,#i
045B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 321
045E 900000      R     MOV     DPTR,#cfg+02H
0461 E0                MOVX    A,@DPTR
0462 C3                CLR     C
0463 9401              SUBB    A,#01H
0465 4018              JC      ?C0087
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 32  

                                           ; SOURCE LINE # 322
0467 900000      R     MOV     DPTR,#i
046A 120000      E     LCALL   ?C?LLDXDATA
046D 900000      R     MOV     DPTR,#read_after
0470 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 323
0473 900000      R     MOV     DPTR,#i
0476 120000      E     LCALL   ?C?LLDXDATA
0479 900000      R     MOV     DPTR,#start_after
047C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 324
047F         ?C0087:
                                           ; SOURCE LINE # 325
047F E4                CLR     A
0480 900000      R     MOV     DPTR,#spacing
0483 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
0484 900000      R     MOV     DPTR,#mcode
0487 E0                MOVX    A,@DPTR
0488 FF                MOV     R7,A
0489 30E012            JNB     ACC.0,?C0088
                                           ; SOURCE LINE # 327
048C B40107            CJNE    A,#01H,?C0090
048F 900000      R     MOV     DPTR,#staged
0492 E0                MOVX    A,@DPTR
0493 B4031C            CJNE    A,#03H,?C0091
0496         ?C0090:
0496 900000      R     MOV     DPTR,#mcode
0499 74FF              MOV     A,#0FFH
049B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 328
049C 8014              SJMP    ?C0091
049E         ?C0088:
                                           ; SOURCE LINE # 329
049E 900000      R     MOV     DPTR,#mcode
04A1 E0                MOVX    A,@DPTR
04A2 FF                MOV     R7,A
04A3 C3                CLR     C
04A4 13                RRC     A
04A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 330
04A6 900000      R     MOV     DPTR,#staged
04A9 E0                MOVX    A,@DPTR
04AA B40305            CJNE    A,#03H,?C0091
04AD A3                INC     DPTR
04AE E0                MOVX    A,@DPTR
04AF 4480              ORL     A,#080H
04B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 331
04B2         ?C0091:
                                           ; SOURCE LINE # 332
04B2 900000      R     MOV     DPTR,#staged
04B5 E0                MOVX    A,@DPTR
04B6 900000      R     MOV     DPTR,#last
04B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 333
04BA E4                CLR     A
04BB 900000      R     MOV     DPTR,#staged
04BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 334
04BF 900000      R     MOV     DPTR,#state
04C2 04                INC     A
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 33  

04C3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
04C4         ?C0086:
                                           ; SOURCE LINE # 337
04C4 900000      R     MOV     DPTR,#cfg
04C7 E0                MOVX    A,@DPTR
04C8 B40303            CJNE    A,#03H,?C0093
04CB 7F00              MOV     R7,#00H
04CD 22                RET     
04CE         ?C0093:
                                           ; SOURCE LINE # 338
04CE 900000      R     MOV     DPTR,#ret
04D1 E0                MOVX    A,@DPTR
04D2 FF                MOV     R7,A
                                           ; SOURCE LINE # 339
04D3         ?C0094:
04D3 22                RET     
             ; FUNCTION _key_loop (END)

             ; FUNCTION iambic (BEGIN)
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 343
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#key_down
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 347
0005 120000      E     LCALL   Iambic_Counter_ReadCounter
0008 900000      R     MOV     DPTR,#mark
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 348
000E 900000      R     MOV     DPTR,#mark
0011 120000      E     LCALL   ?C?LLDXDATA
0014 120000      R     LCALL   _key_loop
0017 900000      R     MOV     DPTR,#key_down
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 349
001C 900000      R     MOV     DPTR,#mark
001F 120000      E     LCALL   ?C?LLDXDATA
0022 120000      R     LCALL   _tx_loop
;---- Variable 'tx_loop_status' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 350
0025 900000      R     MOV     DPTR,#ee_semi_breakin
0028 E0                MOVX    A,@DPTR
0029 602A              JZ      ?C0101
                                           ; SOURCE LINE # 351
002B EF                MOV     A,R7
002C 6027              JZ      ?C0101
                                           ; SOURCE LINE # 352
002E E4                CLR     A
002F FF                MOV     R7,A
0030 120000      E     LCALL   _cw_timer
;---- Variable 'cw_timer_status' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 353
0033 EF                MOV     A,R7
0034 601F              JZ      ?C0101
                                           ; SOURCE LINE # 354
0036 900000      R     MOV     DPTR,#ee_semi_control
0039 E0                MOVX    A,@DPTR
003A 14                DEC     A
003B 600E              JZ      ?C0100
003D 04                INC     A
C51 COMPILER V9.51   IAMBIC                                                                10/22/2015 22:07:36 PAGE 34  

003E 7015              JNZ     ?C0101
                                           ; SOURCE LINE # 355
0040         ?C0099:
                                           ; SOURCE LINE # 356
0040 120000      E     LCALL   Control_Read
0043 EF                MOV     A,R7
0044 54DF              ANL     A,#0DFH
0046 FF                MOV     R7,A
0047 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 357
004A 22                RET     
                                           ; SOURCE LINE # 358
004B         ?C0100:
                                           ; SOURCE LINE # 359
004B 120000      E     LCALL   Control_Read
004E EF                MOV     A,R7
004F 54F7              ANL     A,#0F7H
0051 FF                MOV     R7,A
0052 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 360
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 362
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 365
0055         ?C0101:
0055 22                RET     
             ; FUNCTION iambic (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2458    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     49      57
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
