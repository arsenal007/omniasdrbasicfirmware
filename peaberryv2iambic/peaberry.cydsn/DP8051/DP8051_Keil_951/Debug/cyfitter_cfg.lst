C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2
                    -) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(5,SIZE) DF(CYAPP_ECC_OFFSET=2112) OJ(.\DP8051\DP8051_Keil_95
                    -1\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  3.3
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2015 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          
  25          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  26          
  27          
  28          #if defined(__C51__) || defined(__CX51__)
  29                  #define CYPACKED
  30                  #define CYPACKED_ATTR
  31                  #define CYALIGNED
  32                  #define DMAINITSEC
  33              #define CY_CFG_UNUSED
  34                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  35          
  36          
  37          
  38                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  39                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  40                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  41          #else
                      #error Unsupported toolchain
              #endif
  44          
  45          
  46          
  47          /* Clock startup error codes                                                   */
  48          #define CYCLOCKSTART_NO_ERROR    0u
  49          #define CYCLOCKSTART_XTAL_ERROR  1u
  50          #define CYCLOCKSTART_32KHZ_ERROR 2u
  51          #define CYCLOCKSTART_PLL_ERROR   3u
  52          
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 2   

  53          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  54          /*******************************************************************************
  55          * Function Name: CyClockStartupError
  56          ********************************************************************************
  57          * Summary:
  58          *  If an error is encountered during clock configuration (crystal startup error,
  59          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  60          *  the customer, this function will stop in an infinite loop.
  61          *
  62          * Parameters:
  63          *   void
  64          *
  65          * Return:
  66          *   void
  67          *
  68          *******************************************************************************/
  69          CY_CFG_UNUSED
  70          static void CyClockStartupError(uint8 errorCode);
  71          CY_CFG_UNUSED
  72          static void CyClockStartupError(uint8 errorCode)
  73          {
  74   1          /* To remove the compiler warning if errorCode not used.                */
  75   1          errorCode = errorCode;
  76   1      
  77   1          /* `#START CyClockStartupError` */
  78   1      
  79   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  80   1          /* we will end up here to allow the customer to implement something to  */
  81   1          /* deal with the clock condition.                                       */
  82   1      
  83   1          /* `#END` */
  84   1      
  85   1          /* If nothing else, stop here since the clocks have not started         */
  86   1          /* correctly.                                                           */
  87   1          while(1) {}
  88   1      }
  89          #endif
  90          
  91          /* IDMUX Address: CYREG_IDMUX_DRQ_CTL0 Size (bytes): 6 */
  92          #define BS_IDMUX_VAL ((const uint8 CYFAR *)(0x00080000u + CYAPP_ECC_OFFSET))
  93          
  94          /* IOPORT_0 Address: CYDEV_PRTDSI_PRT0_BASE Size (bytes): 7 */
  95          #define BS_IOPORT_0_VAL ((const uint8 CYFAR *)(0x00080008u + CYAPP_ECC_OFFSET))
  96          
  97          /* IOPORT_1 Address: CYDEV_PRTDSI_PRT1_BASE Size (bytes): 7 */
  98          #define BS_IOPORT_1_VAL ((const uint8 CYFAR *)(0x00080010u + CYAPP_ECC_OFFSET))
  99          
 100          /* IOPORT_2 Address: CYDEV_PRTDSI_PRT2_BASE Size (bytes): 7 */
 101          #define BS_IOPORT_2_VAL ((const uint8 CYFAR *)(0x00080018u + CYAPP_ECC_OFFSET))
 102          
 103          /* IOPORT_7 Address: CYDEV_PRTDSI_PRT12_BASE Size (bytes): 6 */
 104          #define BS_IOPORT_7_VAL ((const uint8 CYFAR *)(0x00080020u + CYAPP_ECC_OFFSET))
 105          
 106          /* IOPORT_8 Address: CYDEV_PRTDSI_PRT15_BASE Size (bytes): 7 */
 107          #define BS_IOPORT_8_VAL ((const uint8 CYFAR *)(0x00080028u + CYAPP_ECC_OFFSET))
 108          
 109          /* PICU_8 Address: CYDEV_PICU_INTTYPE_PICU15_BASE Size (bytes): 8 */
 110          #define BS_PICU_8_VAL ((const uint8 CYFAR *)(0x00080030u + CYAPP_ECC_OFFSET))
 111          
 112          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 113          #define BS_IDMUX_IRQ_VAL ((const uint8 CYFAR *)(0x00080038u + CYAPP_ECC_OFFSET))
 114          
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 3   

 115          /* TMR0 Address: CYREG_TMR0_CFG0 Size (bytes): 12 */
 116          #define BS_TMR0_VAL ((const uint8 CYFAR *)(0x00080040u + CYAPP_ECC_OFFSET))
 117          
 118          /* UDB_1_5_0_CONFIG Address: CYDEV_UCFG_B0_P0_U0_BASE Size (bytes): 128 */
 119          #define BS_UDB_1_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008004Cu + CYAPP_ECC_OFFSET))
 120          
 121          /* UDB_1_5_1_CONFIG Address: CYDEV_UCFG_B0_P0_U1_BASE Size (bytes): 128 */
 122          #define BS_UDB_1_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000800CCu + CYAPP_ECC_OFFSET))
 123          
 124          /* UDB_1_4_1_CONFIG Address: CYDEV_UCFG_B0_P1_U0_BASE Size (bytes): 128 */
 125          #define BS_UDB_1_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008014Cu + CYAPP_ECC_OFFSET))
 126          
 127          /* UDB_1_4_0_CONFIG Address: CYDEV_UCFG_B0_P1_U1_BASE Size (bytes): 128 */
 128          #define BS_UDB_1_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000801CCu + CYAPP_ECC_OFFSET))
 129          
 130          /* UDB_1_3_0_CONFIG Address: CYDEV_UCFG_B0_P2_U0_BASE Size (bytes): 128 */
 131          #define BS_UDB_1_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008024Cu + CYAPP_ECC_OFFSET))
 132          
 133          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 134          #define BS_UDB_1_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000802CCu + CYAPP_ECC_OFFSET))
 135          
 136          /* UDB_1_2_1_CONFIG Address: CYDEV_UCFG_B0_P3_U0_BASE Size (bytes): 128 */
 137          #define BS_UDB_1_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008034Cu + CYAPP_ECC_OFFSET))
 138          
 139          /* UDB_1_2_0_CONFIG Address: CYDEV_UCFG_B0_P3_U1_BASE Size (bytes): 128 */
 140          #define BS_UDB_1_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000803CCu + CYAPP_ECC_OFFSET))
 141          
 142          /* UDB_0_2_0_CONFIG Address: CYDEV_UCFG_B0_P4_U1_BASE Size (bytes): 128 */
 143          #define BS_UDB_0_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008044Cu + CYAPP_ECC_OFFSET))
 144          
 145          /* UDB_0_3_0_CONFIG Address: CYDEV_UCFG_B0_P5_U0_BASE Size (bytes): 128 */
 146          #define BS_UDB_0_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000804CCu + CYAPP_ECC_OFFSET))
 147          
 148          /* UDB_0_3_1_CONFIG Address: CYDEV_UCFG_B0_P5_U1_BASE Size (bytes): 128 */
 149          #define BS_UDB_0_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008054Cu + CYAPP_ECC_OFFSET))
 150          
 151          /* UDB_0_4_1_CONFIG Address: CYDEV_UCFG_B0_P6_U0_BASE Size (bytes): 128 */
 152          #define BS_UDB_0_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000805CCu + CYAPP_ECC_OFFSET))
 153          
 154          /* UDB_0_4_0_CONFIG Address: CYDEV_UCFG_B0_P6_U1_BASE Size (bytes): 128 */
 155          #define BS_UDB_0_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008064Cu + CYAPP_ECC_OFFSET))
 156          
 157          /* UDB_0_5_0_CONFIG Address: CYDEV_UCFG_B0_P7_U0_BASE Size (bytes): 128 */
 158          #define BS_UDB_0_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000806CCu + CYAPP_ECC_OFFSET))
 159          
 160          /* UDB_0_5_1_CONFIG Address: CYDEV_UCFG_B0_P7_U1_BASE Size (bytes): 128 */
 161          #define BS_UDB_0_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008074Cu + CYAPP_ECC_OFFSET))
 162          
 163          /* UDB_1_0_0_CONFIG Address: CYDEV_UCFG_B1_P2_U0_BASE Size (bytes): 128 */
 164          #define BS_UDB_1_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000807CCu + CYAPP_ECC_OFFSET))
 165          
 166          /* UDB_1_0_1_CONFIG Address: CYDEV_UCFG_B1_P2_U1_BASE Size (bytes): 128 */
 167          #define BS_UDB_1_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008084Cu + CYAPP_ECC_OFFSET))
 168          
 169          /* UDB_1_1_1_CONFIG Address: CYDEV_UCFG_B1_P3_U0_BASE Size (bytes): 128 */
 170          #define BS_UDB_1_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000808CCu + CYAPP_ECC_OFFSET))
 171          
 172          /* UDB_1_1_0_CONFIG Address: CYDEV_UCFG_B1_P3_U1_BASE Size (bytes): 128 */
 173          #define BS_UDB_1_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008094Cu + CYAPP_ECC_OFFSET))
 174          
 175          /* UWRK_B0_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070u Size (bytes): 32 */
 176          #define BS_UWRK_B0_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x000809CCu + CYAPP_ECC_OFFSET))
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 4   

 177          
 178          /* UWRK_B1_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070u Size (bytes): 32 */
 179          #define BS_UWRK_B1_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x000809ECu + CYAPP_ECC_OFFSET))
 180          
 181          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 182          #define BS_UCFG_BCTL1_VAL ((const uint8 CYFAR *)(0x00080A0Cu + CYAPP_ECC_OFFSET))
 183          
 184          /* UCFG_BCTL0 Address: CYREG_BCTL0_MDCLK_EN Size (bytes): 16 */
 185          #define BS_UCFG_BCTL0_VAL ((const uint8 CYFAR *)(0x00080A1Cu + CYAPP_ECC_OFFSET))
 186          
 187          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080u Size (bytes): 128 */
 188          #define BS_DSI0_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080A2Cu + CYAPP_ECC_OFFSET))
 189          
 190          /* DSISWITCH_0_1 Address: CYDEV_UCFG_DSI12_BASE Size (bytes): 128 */
 191          #define BS_DSISWITCH_0_1_VAL ((const uint8 CYFAR *)(0x00080AACu + CYAPP_ECC_OFFSET))
 192          
 193          /* DSI0_1_HV_ROUTING Address: CYDEV_UCFG_DSI12_BASE + 0x00000080u Size (bytes): 128 */
 194          #define BS_DSI0_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080B2Cu + CYAPP_ECC_OFFSET))
 195          
 196          /* DSISWITCH_0_2 Address: CYDEV_UCFG_DSI7_BASE Size (bytes): 128 */
 197          #define BS_DSISWITCH_0_2_VAL ((const uint8 CYFAR *)(0x00080BACu + CYAPP_ECC_OFFSET))
 198          
 199          /* DSI0_2_HV_ROUTING Address: CYDEV_UCFG_DSI7_BASE + 0x00000080u Size (bytes): 128 */
 200          #define BS_DSI0_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080C2Cu + CYAPP_ECC_OFFSET))
 201          
 202          /* DSI0_3_HV_ROUTING Address: CYDEV_UCFG_DSI6_BASE + 0x00000080u Size (bytes): 128 */
 203          #define BS_DSI0_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080CACu + CYAPP_ECC_OFFSET))
 204          
 205          /* DSISWITCH_0_4 Address: CYDEV_UCFG_DSI5_BASE Size (bytes): 128 */
 206          #define BS_DSISWITCH_0_4_VAL ((const uint8 CYFAR *)(0x00080D2Cu + CYAPP_ECC_OFFSET))
 207          
 208          /* DSI0_4_HV_ROUTING Address: CYDEV_UCFG_DSI5_BASE + 0x00000080u Size (bytes): 128 */
 209          #define BS_DSI0_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080DACu + CYAPP_ECC_OFFSET))
 210          
 211          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 212          #define BS_UDB_1_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080E2Cu + CYAPP_ECC_OFFSET))
 213          
 214          /* UDBSWITCH_1_0 Address: CYDEV_UCFG_B1_P2_ROUTE_BASE Size (bytes): 128 */
 215          #define BS_UDBSWITCH_1_0_VAL ((const uint8 CYFAR *)(0x00080EACu + CYAPP_ECC_OFFSET))
 216          
 217          /* UDB_2_0_HV_ROUTING Address: CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 218          #define BS_UDB_2_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080F2Cu + CYAPP_ECC_OFFSET))
 219          
 220          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 221          #define BS_UDB_1_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080FACu + CYAPP_ECC_OFFSET))
 222          
 223          /* UDBSWITCH_1_1 Address: CYDEV_UCFG_B1_P3_ROUTE_BASE Size (bytes): 128 */
 224          #define BS_UDBSWITCH_1_1_VAL ((const uint8 CYFAR *)(0x0008102Cu + CYAPP_ECC_OFFSET))
 225          
 226          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 227          #define BS_UDB_2_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000810ACu + CYAPP_ECC_OFFSET))
 228          
 229          /* UDBSWITCH_0_2 Address: CYDEV_UCFG_B0_P4_ROUTE_BASE Size (bytes): 128 */
 230          #define BS_UDBSWITCH_0_2_VAL ((const uint8 CYFAR *)(0x0008112Cu + CYAPP_ECC_OFFSET))
 231          
 232          /* UDB_1_2_HV_ROUTING Address: CYDEV_UCFG_B0_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 233          #define BS_UDB_1_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000811ACu + CYAPP_ECC_OFFSET))
 234          
 235          /* UDBSWITCH_1_2 Address: CYDEV_UCFG_B0_P3_ROUTE_BASE Size (bytes): 128 */
 236          #define BS_UDBSWITCH_1_2_VAL ((const uint8 CYFAR *)(0x0008122Cu + CYAPP_ECC_OFFSET))
 237          
 238          /* UDB_2_2_HV_ROUTING Address: CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 5   

 239          #define BS_UDB_2_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000812ACu + CYAPP_ECC_OFFSET))
 240          
 241          /* UDBSWITCH_0_3 Address: CYDEV_UCFG_B0_P5_ROUTE_BASE Size (bytes): 128 */
 242          #define BS_UDBSWITCH_0_3_VAL ((const uint8 CYFAR *)(0x0008132Cu + CYAPP_ECC_OFFSET))
 243          
 244          /* UDB_1_3_HV_ROUTING Address: CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 245          #define BS_UDB_1_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000813ACu + CYAPP_ECC_OFFSET))
 246          
 247          /* UDBSWITCH_1_3 Address: CYDEV_UCFG_B0_P2_ROUTE_BASE Size (bytes): 128 */
 248          #define BS_UDBSWITCH_1_3_VAL ((const uint8 CYFAR *)(0x0008142Cu + CYAPP_ECC_OFFSET))
 249          
 250          /* UDB_2_3_HV_ROUTING Address: CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 251          #define BS_UDB_2_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000814ACu + CYAPP_ECC_OFFSET))
 252          
 253          /* UDBSWITCH_0_4 Address: CYDEV_UCFG_B0_P6_ROUTE_BASE Size (bytes): 128 */
 254          #define BS_UDBSWITCH_0_4_VAL ((const uint8 CYFAR *)(0x0008152Cu + CYAPP_ECC_OFFSET))
 255          
 256          /* UDB_1_4_HV_ROUTING Address: CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 257          #define BS_UDB_1_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000815ACu + CYAPP_ECC_OFFSET))
 258          
 259          /* UDBSWITCH_1_4 Address: CYDEV_UCFG_B0_P1_ROUTE_BASE Size (bytes): 128 */
 260          #define BS_UDBSWITCH_1_4_VAL ((const uint8 CYFAR *)(0x0008162Cu + CYAPP_ECC_OFFSET))
 261          
 262          /* UDB_2_4_HV_ROUTING Address: CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 263          #define BS_UDB_2_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000816ACu + CYAPP_ECC_OFFSET))
 264          
 265          /* UDBSWITCH_0_5 Address: CYDEV_UCFG_B0_P7_ROUTE_BASE Size (bytes): 128 */
 266          #define BS_UDBSWITCH_0_5_VAL ((const uint8 CYFAR *)(0x0008172Cu + CYAPP_ECC_OFFSET))
 267          
 268          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 269          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)(0x000817ACu + CYAPP_ECC_OFFSET))
 270          
 271          /* IOPINS0_7 Address: CYREG_PRT12_DR Size (bytes): 10 */
 272          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)(0x000817B4u + CYAPP_ECC_OFFSET))
 273          
 274          
 275          /*******************************************************************************
 276          * Function Name: cfg_dma_init
 277          ********************************************************************************
 278          * Summary:
 279          *  This function is used to copy device configuration data from constant values
 280          *  stored in memory into the proper chip configuration registers using DMA.  It
 281          *  pulls data out of the CFG_TD_LISTs to know exactly how/what to configure.
 282          *
 283          * Parameters:  
 284          *   void
 285          *
 286          * Return:
 287          *   void
 288          *
 289          *******************************************************************************/
 290          static void cfg_dma_init(void);
 291          static void cfg_dma_init(void)
 292          {
 293   1              /* TD structure for big-endian systems. Requires 2-byte endian swap */
 294   1              CYPACKED struct td_t {
 295   1                      uint16 size;
 296   1                      uint8 flags;
 297   1                      uint8 next_td_ptr;
 298   1                      uint16 src;
 299   1                      uint16 dest;
 300   1              } CYPACKED_ATTR;
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 6   

 301   1      
 302   1              /* UDB_1_5_HV_ROUTING Address: CYDEV_UCFG_B0_P7_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 303   1              DMAINITSEC static const uint8 CYCODE BS_UDB_1_5_HV_ROUTING_VAL[] = {
 304   1                      0x02u, 0xC0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x12u, 0x00u, 0x00u, 0x01u, 0x01u, 0x04u, 0x10u,
             - 0x40u, 
 305   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 306   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 307   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 308   1                      0x70u, 0x00u, 0xF4u, 0x00u, 0x68u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xD5u, 0x00u, 0xB4u, 0x00u, 0xE9u,
             - 0x00u, 
 309   1                      0x52u, 0x00u, 0x2Cu, 0x00u, 0x00u, 0x00u, 0x0Eu, 0x00u, 0x06u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u,
             - 0x00u, 
 310   1                      0xB0u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 311   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 312   1      
 313   1              /* UDBSWITCH_1_5 Address: CYDEV_UCFG_B0_P0_ROUTE_BASE Size (bytes): 128 */
 314   1              DMAINITSEC static const uint8 CYCODE BS_UDBSWITCH_1_5_VAL[] = {
 315   1                      0x05u, 0x00u, 0x00u, 0x01u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x20u, 0x00u, 0x80u, 0x10u,
             - 0x00u, 
 316   1                      0x00u, 0x10u, 0xC2u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x44u, 0x10u, 0x00u, 0x00u, 0x10u,
             - 0x00u, 
 317   1                      0x00u, 0x00u, 0xA0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x18u, 0x00u, 0x00u, 0x82u, 0x14u, 0x00u, 0x40u, 0x00u,
             - 0x04u, 
 318   1                      0x00u, 0x06u, 0x10u, 0x41u, 0x20u, 0x00u, 0x00u, 0x18u, 0x01u, 0x10u, 0x48u, 0x00u, 0x80u, 0x08u, 0x00u,
             - 0x08u, 
 319   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 320   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u,
             - 0x40u, 
 321   1                      0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x80u, 0x2Au, 0x60u, 0x00u, 0x18u, 0x00u,
             - 0x02u, 
 322   1                      0x00u, 0x04u, 0x0Au, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 323   1      
 324   1              /* UDB_2_5_HV_ROUTING Address: CYDEV_UCFG_B0_P0_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 325   1              DMAINITSEC static const uint8 CYCODE BS_UDB_2_5_HV_ROUTING_VAL[] = {
 326   1                      0x04u, 0x20u, 0x40u, 0x00u, 0x00u, 0x00u, 0x20u, 0x40u, 0x04u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x88u,
             - 0x20u, 
 327   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 328   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 329   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 330   1                      0x1Du, 0x00u, 0xA6u, 0x00u, 0x0Bu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x3Fu, 0x00u, 0x6Fu, 0x00u, 0x1Fu,
             - 0x00u, 
 331   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x30u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 332   1                      0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 333   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 334   1      
 335   1              /* DSISWITCH_1_0 Address: CYDEV_UCFG_DSI9_BASE Size (bytes): 128 */
 336   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_0_VAL[] = {
 337   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 7   

 338   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 339   1                      0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 340   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 341   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 342   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 343   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 344   1                      0x00u, 0x00u, 0x00u, 0x40u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 345   1      
 346   1              /* DSI3_0_HV_ROUTING Address: CYDEV_UCFG_DSI9_BASE + 0x00000080u Size (bytes): 128 */
 347   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_0_HV_ROUTING_VAL[] = {
 348   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 349   1                      0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 350   1                      0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 351   1                      0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 352   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 353   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x20u,
             - 0x00u, 
 354   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 355   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 356   1      
 357   1              /* DSISWITCH_1_1 Address: CYDEV_UCFG_DSI8_BASE Size (bytes): 128 */
 358   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_1_VAL[] = {
 359   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 360   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 361   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 362   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 363   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 364   1                      0x00u, 0x00u, 0x00u, 0x06u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 365   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 366   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 367   1      
 368   1              /* DSI3_1_HV_ROUTING Address: CYDEV_UCFG_DSI8_BASE + 0x00000080u Size (bytes): 128 */
 369   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_1_HV_ROUTING_VAL[] = {
 370   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 371   1                      0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x04u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 372   1                      0x11u, 0x00u, 0x00u, 0x02u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x40u,
             - 0x00u, 
 373   1                      0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 8   

             - 0x00u, 
 374   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 375   1                      0x00u, 0x00u, 0x00u, 0x00u, 0xA0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 376   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x40u,
             - 0x00u, 
 377   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 378   1      
 379   1              /* DSISWITCH_1_2 Address: CYDEV_UCFG_DSI3_BASE Size (bytes): 128 */
 380   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_2_VAL[] = {
 381   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 382   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 383   1                      0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 384   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 385   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 386   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 387   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 388   1                      0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 389   1      
 390   1              /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080u Size (bytes): 128 */
 391   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_2_HV_ROUTING_VAL[] = {
 392   1                      0x00u, 0x00u, 0x00u, 0x02u, 0x80u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x08u,
             - 0x01u, 
 393   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x21u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 394   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x81u, 0x40u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 395   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 396   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 397   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u,
             - 0x00u, 
 398   1                      0x00u, 0x00u, 0x30u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 399   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 400   1      
 401   1              /* DSISWITCH_1_3 Address: CYDEV_UCFG_DSI2_BASE Size (bytes): 128 */
 402   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_3_VAL[] = {
 403   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 404   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 405   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 406   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u,
             - 0x00u, 
 407   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 408   1                      0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 9   

 409   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 410   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 411   1      
 412   1              /* DSI3_3_HV_ROUTING Address: CYDEV_UCFG_DSI2_BASE + 0x00000080u Size (bytes): 128 */
 413   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_3_HV_ROUTING_VAL[] = {
 414   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 415   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x21u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u,
             - 0x00u, 
 416   1                      0x10u, 0x00u, 0x00u, 0x80u, 0x01u, 0x40u, 0x40u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u,
             - 0x00u, 
 417   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 418   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u,
             - 0x00u, 
 419   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 420   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 421   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 422   1      
 423   1              /* DSISWITCH_1_4 Address: CYDEV_UCFG_DSI1_BASE Size (bytes): 128 */
 424   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_4_VAL[] = {
 425   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x08u, 0x00u, 0x02u,
             - 0x00u, 
 426   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 427   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 428   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u,
             - 0x01u, 
 429   1                      0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 430   1                      0x02u, 0x00u, 0x20u, 0x00u, 0x01u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 431   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 432   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 433   1      
 434   1              /* DSI3_4_HV_ROUTING Address: CYDEV_UCFG_DSI1_BASE + 0x00000080u Size (bytes): 128 */
 435   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_4_HV_ROUTING_VAL[] = {
 436   1                      0x00u, 0x00u, 0x01u, 0x04u, 0x00u, 0x10u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x88u, 0x40u, 0x00u,
             - 0x00u, 
 437   1                      0x08u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x08u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u,
             - 0x00u, 
 438   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x40u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x21u, 
 439   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 440   1                      0x00u, 0x00u, 0xE0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xE0u,
             - 0x00u, 
 441   1                      0x10u, 0x00u, 0x00u, 0x00u, 0xE0u, 0x00u, 0x60u, 0x00u, 0xC0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 442   1                      0x00u, 0x00u, 0x80u, 0x00u, 0xC0u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 443   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 444   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 10  

 445   1              /* DSISWITCH_1_5 Address: CYDEV_UCFG_DSI0_BASE Size (bytes): 128 */
 446   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_5_VAL[] = {
 447   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 448   1                      0x00u, 0x40u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x01u, 0x20u, 0x00u, 0x00u,
             - 0x00u, 
 449   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 450   1                      0x00u, 0x40u, 0x02u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x00u, 
 451   1                      0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 452   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 453   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 454   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 455   1      
 456   1              /* DSI3_5_HV_ROUTING Address: CYDEV_UCFG_DSI0_BASE + 0x00000080u Size (bytes): 128 */
 457   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_5_HV_ROUTING_VAL[] = {
 458   1                      0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 459   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 460   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 461   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 462   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x70u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x70u, 0x00u, 0x20u,
             - 0x00u, 
 463   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 464   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 465   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 466   1      
 467   1              /* PHUB_CH1_CFGMEM_CFG0/1 initialization data */
 468   1              DMAINITSEC static const uint8 CYCODE CH1_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
             -, 0x00u };
 469   1      
 470   1              /* PHUB_CH2_CFGMEM_CFG0/1 initialization data */
 471   1              DMAINITSEC static const uint8 CYCODE CH2_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
             -, 0x00u };
 472   1      
 473   1              /* PHUB_CH4_CFGMEM_CFG0/1 initialization data */
 474   1              DMAINITSEC static const uint8 CYCODE CH4_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u
             -, 0x00u };
 475   1      
 476   1              /* PHUB_CH5_CFGMEM_CFG0/1 initialization data */
 477   1              DMAINITSEC static const uint8 CYCODE CH5_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u
             -, 0x00u };
 478   1      
 479   1              /* PHUB_CH6_CFGMEM_CFG0/1 initialization data */
 480   1              DMAINITSEC static const uint8 CYCODE CH6_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x01u
             -, 0x00u };
 481   1      
 482   1              /* Initialization data for each DMA channel's TD registers */
 483   1              DMAINITSEC static const uint8 CYCODE DMA_TD_START_CMD[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x01u };
 484   1      
 485   1              CYALIGNED static uint32 CYXDATA DMA_ZERO_VAL;
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 11  

 486   1      
 487   1              /* This table holds all of the initialization data necessary for the DMA
 488   1                 process to transfer data from the source location to the destination. */
 489   1              DMAINITSEC static const struct td_t CYCODE CFG_TD_LIST0[] = {
 490   1                      /* Size, Flags, Next, Source, Destination */
 491   1                      { 8u, 0x23u, 0x02u, (uint16)(uint32)(CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },      /* TD 1 */
 492   1                      { 8u, 0x23u, 0x03u, (uint16)(uint32)(CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },      /* TD 2 */
 493   1                      { 8u, 0x23u, 0x04u, (uint16)(uint32)(CH4_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM4_CFG0) },      /* TD 3 */
 494   1                      { 8u, 0x23u, 0x05u, (uint16)(uint32)(CH5_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM5_CFG0) },      /* TD 4 */
 495   1                      { 8u, 0x23u, 0x06u, (uint16)(uint32)(CH6_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM6_CFG0) },      /* TD 5 */
 496   1                      { 5u, 0x23u, 0x07u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },   /* TD 6 */
 497   1                      { 5u, 0x23u, 0x08u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },   /* TD 7 */
 498   1                      { 5u, 0x23u, 0x09u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH4_BASIC_CFG) },   /* TD 8 */
 499   1                      { 5u, 0x23u, 0x0Au, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH5_BASIC_CFG) },   /* TD 9 */
 500   1                      { 5u, 0x23u, 0xFEu, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH6_BASIC_CFG) },   /* TD 10 *
             -/
 501   1                      { 21u, 0x22u, 0x0Cu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYREG_I2C_XCFG) },       /* TD 11 */
 502   1                      { 64u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT3_DR) },        /* TD 12 */
 503   1                      { 128u, 0x22u, 0x0Eu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P4_U0_BASE) },    /* TD 13 */
 504   1                      { 384u, 0x22u, 0x0Fu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },    /* TD 14 */
 505   1                      { 384u, 0x22u, 0x10u, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },    /* TD 15 */
 506   1                      { 256u, 0x22u, 0x11u, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) },        /* TD 16 */
 507   1                      { 128u, 0x22u, 0x12u, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE) },        /* TD 17 */
 508   1                      { 128u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },       /* TD 18 */
 509   1                      { 128u, 0x23u, 0x14u, (uint16)(uint32)(BS_UDB_1_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 19 */
 510   1                      { 128u, 0x23u, 0x15u, (uint16)(uint32)(BS_UDBSWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE) },  /
             -* TD 20 */
 511   1                      { 128u, 0x23u, 0x16u, (uint16)(uint32)(BS_UDB_2_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 21 */
 512   1                      { 128u, 0x23u, 0x17u, (uint16)(uint32)(BS_DSISWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) }, /* TD 22
             - */
 513   1                      { 128u, 0x23u, 0x18u, (uint16)(uint32)(BS_DSI3_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE + 0x0000
             -0080u) },        /* TD 23 */
 514   1                      { 128u, 0x23u, 0x19u, (uint16)(uint32)(BS_DSISWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE) }, /* TD 24
             - */
 515   1                      { 128u, 0x23u, 0x1Au, (uint16)(uint32)(BS_DSI3_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE + 0x0000
             -0080u) },        /* TD 25 */
 516   1                      { 128u, 0x23u, 0x1Bu, (uint16)(uint32)(BS_DSISWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) }, /* TD 26
             - */
 517   1                      { 128u, 0x23u, 0x1Cu, (uint16)(uint32)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x0000
             -0080u) },        /* TD 27 */
 518   1                      { 128u, 0x23u, 0x1Du, (uint16)(uint32)(BS_DSISWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) }, /* TD 28
             - */
 519   1                      { 128u, 0x23u, 0x1Eu, (uint16)(uint32)(BS_DSI3_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE + 0x0000
             -0080u) },        /* TD 29 */
 520   1                      { 128u, 0x23u, 0x1Fu, (uint16)(uint32)(BS_DSISWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE) }, /* TD 30
             - */
 521   1                      { 128u, 0x23u, 0x20u, (uint16)(uint32)(BS_DSI3_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE + 0x0000
             -0080u) },        /* TD 31 */
 522   1                      { 128u, 0x23u, 0x21u, (uint16)(uint32)(BS_DSISWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) }, /* TD 32
             - */
 523   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSI3_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE + 0x0000
             -0080u) },        /* TD 33 */
 524   1                      { 7u, 0x23u, 0x23u, (uint16)(uint32)(BS_IOPORT_0_VAL), (uint16)(CYDEV_PRTDSI_PRT0_BASE) },      /* TD 34 */
 525   1                      { 7u, 0x23u, 0x24u, (uint16)(uint32)(BS_IOPORT_1_VAL), (uint16)(CYDEV_PRTDSI_PRT1_BASE) },      /* TD 35 */
 526   1                      { 7u, 0x23u, 0x25u, (uint16)(uint32)(BS_IOPORT_2_VAL), (uint16)(CYDEV_PRTDSI_PRT2_BASE) },      /* TD 36 */
 527   1                      { 6u, 0x23u, 0x26u, (uint16)(uint32)(BS_IOPORT_7_VAL), (uint16)(CYDEV_PRTDSI_PRT12_BASE) },     /* TD 37 */
 528   1                      { 7u, 0x23u, 0x27u, (uint16)(uint32)(BS_IOPORT_8_VAL), (uint16)(CYDEV_PRTDSI_PRT15_BASE) },     /* TD 38 */
 529   1                      { 8u, 0x23u, 0x28u, (uint16)(uint32)(BS_PICU_8_VAL), (uint16)(CYDEV_PICU_INTTYPE_PICU15_BASE) },        /* TD 3
             -9 */
 530   1                      { 12u, 0x23u, 0x29u, (uint16)(uint32)(BS_TMR0_VAL), (uint16)(CYREG_TMR0_CFG0) },        /* TD 40 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 12  

 531   1                      { 32u, 0x23u, 0x2Au, (uint16)(uint32)(BS_UWRK_B0_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B0_BAS
             -E + 0x00000070u) },   /* TD 41 */
 532   1                      { 32u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UWRK_B1_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B1_BAS
             -E + 0x00000070u) },   /* TD 42 */
 533   1                      { 8u, 0x23u, 0x2Cu, (uint16)(uint32)(BS_IDMUX_IRQ_VAL), (uint16)(CYREG_IDMUX_IRQ_CTL0) },       /* TD 43 */
 534   1                      { 128u, 0x23u, 0x2Du, (uint16)(uint32)(BS_UDB_1_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },  /
             -* TD 44 */
 535   1                      { 128u, 0x23u, 0x2Eu, (uint16)(uint32)(BS_UDB_1_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P0_U1_BASE) },  /
             -* TD 45 */
 536   1                      { 128u, 0x23u, 0x2Fu, (uint16)(uint32)(BS_UDB_1_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U0_BASE) },  /
             -* TD 46 */
 537   1                      { 128u, 0x23u, 0x30u, (uint16)(uint32)(BS_UDB_1_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U1_BASE) },  /
             -* TD 47 */
 538   1                      { 128u, 0x23u, 0x31u, (uint16)(uint32)(BS_UDB_1_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U0_BASE) },  /
             -* TD 48 */
 539   1                      { 128u, 0x23u, 0x32u, (uint16)(uint32)(BS_UDB_1_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U1_BASE) },  /
             -* TD 49 */
 540   1                      { 128u, 0x23u, 0x33u, (uint16)(uint32)(BS_UDB_1_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U0_BASE) },  /
             -* TD 50 */
 541   1                      { 128u, 0x23u, 0x34u, (uint16)(uint32)(BS_UDB_1_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U1_BASE) },  /
             -* TD 51 */
 542   1                      { 128u, 0x23u, 0x35u, (uint16)(uint32)(BS_UDB_0_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U1_BASE) },  /
             -* TD 52 */
 543   1                      { 128u, 0x23u, 0x36u, (uint16)(uint32)(BS_UDB_0_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U0_BASE) },  /
             -* TD 53 */
 544   1                      { 128u, 0x23u, 0x37u, (uint16)(uint32)(BS_UDB_0_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U1_BASE) },  /
             -* TD 54 */
 545   1                      { 128u, 0x23u, 0x38u, (uint16)(uint32)(BS_UDB_0_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U0_BASE) },  /
             -* TD 55 */
 546   1                      { 128u, 0x23u, 0x39u, (uint16)(uint32)(BS_UDB_0_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U1_BASE) },  /
             -* TD 56 */
 547   1                      { 128u, 0x23u, 0x3Au, (uint16)(uint32)(BS_UDB_0_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U0_BASE) },  /
             -* TD 57 */
 548   1                      { 128u, 0x23u, 0x3Bu, (uint16)(uint32)(BS_UDB_0_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U1_BASE) },  /
             -* TD 58 */
 549   1                      { 128u, 0x23u, 0x3Cu, (uint16)(uint32)(BS_UDB_1_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },  /
             -* TD 59 */
 550   1                      { 128u, 0x23u, 0x3Du, (uint16)(uint32)(BS_UDB_1_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U1_BASE) },  /
             -* TD 60 */
 551   1                      { 128u, 0x23u, 0x3Eu, (uint16)(uint32)(BS_UDB_1_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U0_BASE) },  /
             -* TD 61 */
 552   1                      { 128u, 0x23u, 0x3Fu, (uint16)(uint32)(BS_UDB_1_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U1_BASE) },  /
             -* TD 62 */
 553   1                      { 16u, 0x23u, 0x40u, (uint16)(uint32)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },     /* TD 63 */
 554   1                      { 16u, 0x23u, 0x41u, (uint16)(uint32)(BS_UCFG_BCTL0_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },     /* TD 64 */
 555   1                      { 128u, 0x23u, 0x42u, (uint16)(uint32)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x000
             -00080u) },        /* TD 65 */
 556   1                      { 128u, 0x23u, 0x43u, (uint16)(uint32)(BS_DSISWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },        /* TD 6
             -6 */
 557   1                      { 128u, 0x23u, 0x44u, (uint16)(uint32)(BS_DSI0_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE + 0x000
             -00080u) },        /* TD 67 */
 558   1                      { 128u, 0x23u, 0x45u, (uint16)(uint32)(BS_DSISWITCH_0_2_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE) }, /* TD 68
             - */
 559   1                      { 128u, 0x23u, 0x46u, (uint16)(uint32)(BS_DSI0_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE + 0x0000
             -0080u) },        /* TD 69 */
 560   1                      { 128u, 0x23u, 0x47u, (uint16)(uint32)(BS_DSI0_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE + 0x0000
             -0080u) },        /* TD 70 */
 561   1                      { 128u, 0x23u, 0x48u, (uint16)(uint32)(BS_DSISWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE) }, /* TD 71
             - */
 562   1                      { 128u, 0x23u, 0x49u, (uint16)(uint32)(BS_DSI0_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE + 0x0000
             -0080u) },        /* TD 72 */
 563   1                      { 128u, 0x23u, 0x4Au, (uint16)(uint32)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE 
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 13  

             -+ 0x00000080u) },     /* TD 73 */
 564   1                      { 128u, 0x23u, 0x4Bu, (uint16)(uint32)(BS_UDBSWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE) },  /
             -* TD 74 */
 565   1                      { 128u, 0x23u, 0x4Cu, (uint16)(uint32)(BS_UDB_2_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 75 */
 566   1                      { 128u, 0x23u, 0x4Du, (uint16)(uint32)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 76 */
 567   1                      { 128u, 0x23u, 0x4Eu, (uint16)(uint32)(BS_UDBSWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE) },  /
             -* TD 77 */
 568   1                      { 128u, 0x23u, 0x4Fu, (uint16)(uint32)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 78 */
 569   1                      { 128u, 0x23u, 0x50u, (uint16)(uint32)(BS_UDBSWITCH_0_2_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE) },  /
             -* TD 79 */
 570   1                      { 128u, 0x23u, 0x51u, (uint16)(uint32)(BS_UDB_1_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 80 */
 571   1                      { 128u, 0x23u, 0x52u, (uint16)(uint32)(BS_UDBSWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE) },  /
             -* TD 81 */
 572   1                      { 128u, 0x23u, 0x53u, (uint16)(uint32)(BS_UDB_2_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 82 */
 573   1                      { 128u, 0x23u, 0x54u, (uint16)(uint32)(BS_UDBSWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE) },  /
             -* TD 83 */
 574   1                      { 128u, 0x23u, 0x55u, (uint16)(uint32)(BS_UDB_1_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 84 */
 575   1                      { 128u, 0x23u, 0x56u, (uint16)(uint32)(BS_UDBSWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE) },  /
             -* TD 85 */
 576   1                      { 128u, 0x23u, 0x57u, (uint16)(uint32)(BS_UDB_2_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 86 */
 577   1                      { 128u, 0x23u, 0x58u, (uint16)(uint32)(BS_UDBSWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE) },  /
             -* TD 87 */
 578   1                      { 128u, 0x23u, 0x59u, (uint16)(uint32)(BS_UDB_1_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 88 */
 579   1                      { 128u, 0x23u, 0x5Au, (uint16)(uint32)(BS_UDBSWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE) },  /
             -* TD 89 */
 580   1                      { 128u, 0x23u, 0x5Bu, (uint16)(uint32)(BS_UDB_2_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 90 */
 581   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UDBSWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE) },  /
             -* TD 91 */
 582   1              };
 583   1      
 584   1              DMA_ZERO_VAL = 0u;
 585   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG0, 0x10u);    /* set burstcnt */
 586   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_CFG, 0x01u);   /* enable ch0 */
 587   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH0_BASIC_STATUS+1u), 0x00u);   /* set first TD to 0 */
 588   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD0, 91u*8u);       /* transfer size */
 589   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+2u), 0x01u);    /* set next TD to 1 */
 590   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+3u), 0xA3u);    /* set TD flags */
 591   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD1, (uint16)((uint32)CFG_TD_LIST0 & 0x0000FFFFu)); /
             -* set td0's src addr */
 592   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD1+2u), CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst a
             -ddr */
 593   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG1, (uint16)(CYDEV_FLS_BASE >> 16));  /* set ch0's src h
             -igh addr */
 594   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_CFGMEM0_CFG1+2u), (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));     /* se
             -t ch0's dst high addr */
 595   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH1_BASIC_STATUS+1u), 0x0Bu);   /* ch1 first TD: 11 */
 596   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH2_BASIC_STATUS+1u), 0x0Du);   /* ch2 first TD: 13 */
 597   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH4_BASIC_STATUS+1u), 0x13u);   /* ch4 first TD: 19 */
 598   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH5_BASIC_STATUS+1u), 0x22u);   /* ch5 first TD: 34 */
 599   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH6_BASIC_STATUS+1u), 0x2Bu);   /* ch6 first TD: 43 */
 600   1      
 601   1              CY_CFG_MEMORY_BARRIER();
 602   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_ACTION, 0x01u); /* cpu_req */
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 14  

 603   1              CY_CFG_MEMORY_BARRIER();
 604   1      
 605   1              /* Wait for all DMA transfers to complete */
 606   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 607   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 608   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
 609   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH4_BASIC_STATUS) & 0x01u)){}
 610   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH5_BASIC_STATUS) & 0x01u)){}
 611   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH6_BASIC_STATUS) & 0x01u)){}
 612   1      
 613   1      
 614   1              CYCONFIGCPY((void CYFAR *)(CYREG_IDMUX_DRQ_CTL0), (const void CYFAR *)(BS_IDMUX_VAL), 6u);
 615   1      
 616   1      }
 617          /*******************************************************************************
 618          * Function Name: ClockSetup
 619          ********************************************************************************
 620          *
 621          * Summary:
 622          *  Performs the initialization of all of the clocks in the device based on the
 623          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 624          *  clocks and setting the necessary dividers to produce the desired frequency. 
 625          *
 626          * Parameters:
 627          *  void
 628          *
 629          * Return:
 630          *  void
 631          *
 632          *******************************************************************************/
 633          static void ClockSetup(void);
 634          static void ClockSetup(void)
 635          {
 636   1              uint32 timeout;
 637   1              uint8 pllLock;
 638   1      
 639   1      
 640   1              /* Configure Digital Clocks based on settings from Clock DWR */
 641   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x000Cu);
 642   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x1Au);
 643   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0002u);
 644   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 645   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0001u);
 646   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 647   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x000Bu);
 648   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 649   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x095Fu);
 650   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x19u);
 651   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG5_CFG0), 0x5DBFu);
 652   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG5_CFG0 + 0x2u), 0x19u);
 653   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG6_CFG0), 0x03E7u);
 654   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG6_CFG0 + 0x2u), 0x1Bu);
 655   1      
 656   1              /* Configure ILO based on settings from Clock DWR */
 657   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 658   1      
 659   1              /* Configure IMO based on settings from Clock DWR */
 660   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 661   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 662   1      
 663   1              /* Configure XTAL based on settings from Clock DWR */
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 15  

 664   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_XMHZ_CFG0), 0x3317u);
 665   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_XMHZ_CSR), 0x05u);
 666   1              /* Wait up to 130000us for the XTAL to lock */
 667   1              CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_XMHZ_CSR);
 668   1              for (timeout = 130000u / 10u; (timeout > 0u) && ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_XMHZ_CSR) & 0
             -x80u) != 0u); timeout--)
 669   1              { 
 670   2                      
 671   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 672   2              }
 673   1              if (timeout == 0u)
 674   1              {
 675   2                      CyClockStartupError(CYCLOCKSTART_XTAL_ERROR);
 676   2              }
 677   1              /* Enable XTAL Fault Recovery */
 678   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_XMHZ_CSR), (CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_XMHZ_CSR
             -) | 0x40u));
 679   1      
 680   1              /* Configure PLL based on settings from Clock DWR */
 681   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0C14u);
 682   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x01u);
 683   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 684   1              /* Wait up to 250us for the PLL to lock */
 685   1              pllLock = 0u;
 686   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 687   1              { 
 688   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 689   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 690   2              }
 691   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 692   1              if (timeout == 0u)
 693   1              {
 694   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 695   2              }
 696   1      
 697   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 698   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 699   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 700   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 701   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 702   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 703   1      
 704   1              /* Configure USB Clock based on settings from Clock DWR */
 705   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 706   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 707   1      
 708   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x7Fu
             -)));
 709   1      }
 710          
 711          
 712          /* Analog API Functions */
 713          
 714          
 715          /*******************************************************************************
 716          * Function Name: AnalogSetDefault
 717          ********************************************************************************
 718          *
 719          * Summary:
 720          *  Sets up the analog portions of the chip to default values based on chip
 721          *  configuration options from the project.
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 16  

 722          *
 723          * Parameters:
 724          *  void
 725          *
 726          * Return:
 727          *  void
 728          *
 729          *******************************************************************************/
 730          static void AnalogSetDefault(void);
 731          static void AnalogSetDefault(void)
 732          {
 733   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 734   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 735   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 736   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 737   1      }
 738          
 739          
 740          /*******************************************************************************
 741          * Function Name: SetAnalogRoutingPumps
 742          ********************************************************************************
 743          *
 744          * Summary:
 745          * Enables or disables the analog pumps feeding analog routing switches.
 746          * Intended to be called at startup, based on the Vdda system configuration;
 747          * may be called during operation when the user informs us that the Vdda voltage
 748          * crossed the pump threshold.
 749          *
 750          * Parameters:
 751          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 752          *
 753          * Return:
 754          *  void
 755          *
 756          *******************************************************************************/
 757          void SetAnalogRoutingPumps(uint8 enabled)
 758          {
 759   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 760   1              if (enabled != 0u)
 761   1              {
 762   2                      regValue |= 0x00u;
 763   2              }
 764   1              else
 765   1              {
 766   2                      regValue &= (uint8)~0x00u;
 767   2              }
 768   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 769   1      }
 770          
 771          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 772          
 773          
 774          /*******************************************************************************
 775          * Function Name: cyfitter_cfg
 776          ********************************************************************************
 777          * Summary:
 778          *  This function is called by the start-up code for the selected device. It
 779          *  performs all of the necessary device configuration based on the design
 780          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 781          *  as Clocks and Pins as well as any component configuration that is necessary.
 782          *
 783          * Parameters:  
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 17  

 784          *   void
 785          *
 786          * Return:
 787          *   void
 788          *
 789          *******************************************************************************/
 790          
 791          void cyfitter_cfg(void)
 792          {
 793   1              /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 794   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_8_VAL[] = {
 795   1                      0x0Cu, 0x00u, 0x00u, 0x0Cu, 0x00u, 0x08u, 0x0Cu, 0x00u, 0xC0u, 0x00u};
 796   1      
 797   1              /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
 798   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_1_VAL[] = {
 799   1                      0x60u, 0x00u, 0x80u, 0x64u, 0x00u, 0x40u, 0x40u, 0x00u, 0x00u, 0x00u};
 800   1      
 801   1              /* IOPINS0_2 Address: CYREG_PRT2_DR Size (bytes): 10 */
 802   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 803   1                      0x18u, 0x00u, 0x00u, 0x18u, 0xE0u, 0x00u, 0xE0u, 0x00u, 0x00u, 0x00u};
 804   1      
 805   1              /* PHUB_CFGMEM1 Address: CYREG_PHUB_CFGMEM1_CFG0 Size (bytes): 4 */
 806   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM1_VAL[] = {
 807   1                      0x00u, 0x01u, 0x00u, 0x00u};
 808   1      
 809   1              /* PHUB_CFGMEM2 Address: CYREG_PHUB_CFGMEM2_CFG0 Size (bytes): 4 */
 810   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM2_VAL[] = {
 811   1                      0x00u, 0x02u, 0x00u, 0x00u};
 812   1      
 813   1              /* PHUB_CFGMEM4 Address: CYREG_PHUB_CFGMEM4_CFG0 Size (bytes): 4 */
 814   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM4_VAL[] = {
 815   1                      0x00u, 0x04u, 0x00u, 0x00u};
 816   1      
 817   1              /* PHUB_CFGMEM5 Address: CYREG_PHUB_CFGMEM5_CFG0 Size (bytes): 4 */
 818   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM5_VAL[] = {
 819   1                      0x00u, 0x05u, 0x00u, 0x00u};
 820   1      
 821   1              /* PHUB_CFGMEM6 Address: CYREG_PHUB_CFGMEM6_CFG0 Size (bytes): 4 */
 822   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM6_VAL[] = {
 823   1                      0x00u, 0x06u, 0x00u, 0x00u};
 824   1      
 825   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 826   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 827   1      
 828   1              {
 829   2                      cfg_dma_init();
 830   2      
 831   2                      /* Perform normal device configuration. Order is not critical for these items. */
 832   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM0_CFG0), 4u);
 833   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM1_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM1_VAL), 4u)
             -;
 834   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM2_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM2_VAL), 4u)
             -;
 835   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM3_CFG0), 4u);
 836   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM4_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM4_VAL), 4u)
             -;
 837   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM5_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM5_VAL), 4u)
             -;
 838   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM6_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM6_VAL), 4u)
             -;
 839   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM7_CFG0), 4u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 18  

 840   2      
 841   2                      /* Enable digital routing */
 842   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 843   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 844   2      
 845   2                      /* Enable UDB array */
 846   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 847   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 848   2              }
 849   1      
 850   1      
 851   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 852   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 853   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DR), (const void CYFAR *)(BS_IOPINS0_7_VAL), 10u);
 854   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DR), (const void CYCODE *)(BS_IOPINS0_8_VAL), 10u);
 855   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT1_DR), (const void CYCODE *)(BS_IOPINS0_1_VAL), 10u);
 856   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DR), (const void CYCODE *)(BS_IOPINS0_2_VAL), 10u);
 857   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 858   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 859   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 860   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 861   1              {
 862   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 863   2              }
 864   1      
 865   1      
 866   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 867   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 868   1              /* Setup clocks based on selections from Clock DWR */
 869   1              ClockSetup();
 870   1              /* Set Flash Cycles based on newly configured 36.92MHz Bus Clock. */
 871   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 872   1      
 873   1              /* Perform basic analog initialization to defaults */
 874   1              AnalogSetDefault();
 875   1      
 876   1              /* Configure alternate active mode */
 877   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 878   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 879   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 19  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
0000         ?C0001:
                                           ; SOURCE LINE # 87
0000 80FE              SJMP    ?C0001
0002 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 584
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
0003 FD                MOV     R5,A
0004 FC                MOV     R4,A
0005 900000      R     MOV     DPTR,#DMA_ZERO_VAL
0008 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 585
000B 907600            MOV     DPTR,#07600H
000E 7410              MOV     A,#010H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 586
0011 907010            MOV     DPTR,#07010H
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 587
0017 907019            MOV     DPTR,#07019H
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 588
001C 7B02              MOV     R3,#02H
001E 7A78              MOV     R2,#078H
0020 F9                MOV     R1,A
0021 7DD8              MOV     R5,#0D8H
0023 7C02              MOV     R4,#02H
0025 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 589
0028 907802            MOV     DPTR,#07802H
002B 7401              MOV     A,#01H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 590
002E A3                INC     DPTR
002F 74A3              MOV     A,#0A3H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 591
0032 7B02              MOV     R3,#02H
0034 7A78              MOV     R2,#078H
0036 7904              MOV     R1,#04H
0038 C003              PUSH    AR3
003A C002              PUSH    AR2
003C C001              PUSH    AR1
003E 7BFF              MOV     R3,#0FFH
0040 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0042 7900        R     MOV     R1,#LOW CFG_TD_LIST0
0044 E9                MOV     A,R1
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 20  

0045 EA                MOV     A,R2
0046 E4                CLR     A
0047 AD01              MOV     R5,AR1
0049 AC02              MOV     R4,AR2
004B D001              POP     AR1
004D D002              POP     AR2
004F D003              POP     AR3
0051 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 592
0054 7B02              MOV     R3,#02H
0056 7A78              MOV     R2,#078H
0058 7906              MOV     R1,#06H
005A 7D08              MOV     R5,#08H
005C 7C78              MOV     R4,#078H
005E 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 593
0061 7B02              MOV     R3,#02H
0063 7A76              MOV     R2,#076H
0065 7904              MOV     R1,#04H
0067 7D10              MOV     R5,#010H
0069 7C00              MOV     R4,#00H
006B 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 594
006E 7B02              MOV     R3,#02H
0070 7A76              MOV     R2,#076H
0072 7906              MOV     R1,#06H
0074 E4                CLR     A
0075 FD                MOV     R5,A
0076 FC                MOV     R4,A
0077 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 595
007A 907029            MOV     DPTR,#07029H
007D 740B              MOV     A,#0BH
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 596
0080 907039            MOV     DPTR,#07039H
0083 740D              MOV     A,#0DH
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 597
0086 907059            MOV     DPTR,#07059H
0089 7413              MOV     A,#013H
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 598
008C 907069            MOV     DPTR,#07069H
008F 7422              MOV     A,#022H
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 599
0092 907079            MOV     DPTR,#07079H
0095 742B              MOV     A,#02BH
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 601
                                           ; SOURCE LINE # 602
0098 907014            MOV     DPTR,#07014H
009B 7401              MOV     A,#01H
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 603
009E         ?C0010:
                                           ; SOURCE LINE # 606
009E 907018            MOV     DPTR,#07018H
00A1 E0                MOVX    A,@DPTR
00A2 5401              ANL     A,#01H
00A4 70F8              JNZ     ?C0010
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 21  

00A6         ?C0011:
00A6         ?C0012:
                                           ; SOURCE LINE # 607
00A6 907028            MOV     DPTR,#07028H
00A9 E0                MOVX    A,@DPTR
00AA 5401              ANL     A,#01H
00AC 70F8              JNZ     ?C0012
00AE         ?C0013:
00AE         ?C0014:
                                           ; SOURCE LINE # 608
00AE 907038            MOV     DPTR,#07038H
00B1 E0                MOVX    A,@DPTR
00B2 5401              ANL     A,#01H
00B4 70F8              JNZ     ?C0014
00B6         ?C0015:
00B6         ?C0016:
                                           ; SOURCE LINE # 609
00B6 907058            MOV     DPTR,#07058H
00B9 E0                MOVX    A,@DPTR
00BA 5401              ANL     A,#01H
00BC 70F8              JNZ     ?C0016
00BE         ?C0017:
00BE         ?C0018:
                                           ; SOURCE LINE # 610
00BE 907068            MOV     DPTR,#07068H
00C1 E0                MOVX    A,@DPTR
00C2 5401              ANL     A,#01H
00C4 70F8              JNZ     ?C0018
00C6         ?C0019:
00C6         ?C0020:
                                           ; SOURCE LINE # 611
00C6 907078            MOV     DPTR,#07078H
00C9 E0                MOVX    A,@DPTR
00CA 5401              ANL     A,#01H
00CC 70F8              JNZ     ?C0020
00CE         ?C0021:
                                           ; SOURCE LINE # 614
00CE 7B08              MOV     R3,#08H
00D0 7A08              MOV     R2,#08H
00D2 7940              MOV     R1,#040H
00D4 C003              PUSH    AR3
00D6 C002              PUSH    AR2
00D8 C001              PUSH    AR1
00DA 7B01              MOV     R3,#01H
00DC 7A51              MOV     R2,#051H
00DE 7910              MOV     R1,#010H
00E0 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E3 120000      E     LCALL   ?C?PSTXDATA
00E6 D001              POP     AR1
00E8 D002              POP     AR2
00EA D003              POP     AR3
00EC 7F06              MOV     R7,#06H
00EE 7E00              MOV     R6,#00H
00F0 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 616
00F3 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 634
                                           ; SOURCE LINE # 635
                                           ; SOURCE LINE # 641
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 22  

0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D0C              MOV     R5,#0CH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 642
000D 904082            MOV     DPTR,#04082H
0010 741A              MOV     A,#01AH
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 643
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D02              MOV     R5,#02H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 644
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D01              MOV     R5,#01H
002E 7C00              MOV     R4,#00H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 646
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 647
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
003F 7D0B              MOV     R5,#0BH
0041 7C00              MOV     R4,#00H
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 648
0046 90408E            MOV     DPTR,#0408EH
0049 7419              MOV     A,#019H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 649
004C 7B00              MOV     R3,#00H
004E 7A40              MOV     R2,#040H
0050 7990              MOV     R1,#090H
0052 7D5F              MOV     R5,#05FH
0054 7C09              MOV     R4,#09H
0056 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 650
0059 904092            MOV     DPTR,#04092H
005C 7419              MOV     A,#019H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 651
005F 7B00              MOV     R3,#00H
0061 7A40              MOV     R2,#040H
0063 7994              MOV     R1,#094H
0065 7DBF              MOV     R5,#0BFH
0067 7C5D              MOV     R4,#05DH
0069 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 652
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 23  

006C 904096            MOV     DPTR,#04096H
006F 7419              MOV     A,#019H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 653
0072 7B00              MOV     R3,#00H
0074 7A40              MOV     R2,#040H
0076 7998              MOV     R1,#098H
0078 7DE7              MOV     R5,#0E7H
007A 7C03              MOV     R4,#03H
007C 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 654
007F 90409A            MOV     DPTR,#0409AH
0082 741B              MOV     A,#01BH
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 657
0085 904300            MOV     DPTR,#04300H
0088 7406              MOV     A,#06H
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 660
008B 904200            MOV     DPTR,#04200H
008E 7452              MOV     A,#052H
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 661
0091 7B0C              MOV     R3,#0CH
0093 7A01              MOV     R2,#01H
0095 790F              MOV     R1,#0FH
0097 120000      E     LCALL   _cyread8
009A 9046A1            MOV     DPTR,#046A1H
009D EF                MOV     A,R7
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
009F 7B00              MOV     R3,#00H
00A1 7A42              MOV     R2,#042H
00A3 7912              MOV     R1,#012H
00A5 7D17              MOV     R5,#017H
00A7 7C33              MOV     R4,#033H
00A9 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 665
00AC 904210            MOV     DPTR,#04210H
00AF 7405              MOV     A,#05H
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 667
00B2 E0                MOVX    A,@DPTR
00B3 FF                MOV     R7,A
                                           ; SOURCE LINE # 668
00B4 E4                CLR     A
00B5 7FC8              MOV     R7,#0C8H
00B7 7E32              MOV     R6,#032H
00B9 FD                MOV     R5,A
00BA FC                MOV     R4,A
00BB 900000      R     MOV     DPTR,#timeout
00BE 120000      E     LCALL   ?C?LSTXDATA
00C1         ?C0023:
00C1 900000      R     MOV     DPTR,#timeout
00C4 120000      E     LCALL   ?C?LLDXDATA
00C7 D3                SETB    C
00C8 EF                MOV     A,R7
00C9 9400              SUBB    A,#00H
00CB EE                MOV     A,R6
00CC 9400              SUBB    A,#00H
00CE 4029              JC      ?C0024
00D0 904210            MOV     DPTR,#04210H
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 24  

00D3 E0                MOVX    A,@DPTR
00D4 5480              ANL     A,#080H
00D6 6021              JZ      ?C0024
                                           ; SOURCE LINE # 669
                                           ; SOURCE LINE # 671
00D8 E4                CLR     A
00D9 7FE0              MOV     R7,#0E0H
00DB 7E01              MOV     R6,#01H
00DD FD                MOV     R5,A
00DE FC                MOV     R4,A
00DF 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 672
00E2 900000      R     MOV     DPTR,#timeout
00E5 120000      E     LCALL   ?C?LLDXDATA
00E8 74FF              MOV     A,#0FFH
00EA FB                MOV     R3,A
00EB FA                MOV     R2,A
00EC F9                MOV     R1,A
00ED F8                MOV     R0,A
00EE 120000      E     LCALL   ?C?LADD
00F1 900000      R     MOV     DPTR,#timeout
00F4 120000      E     LCALL   ?C?LSTXDATA
00F7 80C8              SJMP    ?C0023
00F9         ?C0024:
                                           ; SOURCE LINE # 673
00F9 900000      R     MOV     DPTR,#timeout
00FC 120000      E     LCALL   ?C?LLDXDATA
00FF EF                MOV     A,R7
0100 4E                ORL     A,R6
0101 7005              JNZ     ?C0026
                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 675
0103 7F01              MOV     R7,#01H
0105 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 676
0108         ?C0026:
                                           ; SOURCE LINE # 678
0108 904210            MOV     DPTR,#04210H
010B E0                MOVX    A,@DPTR
010C 4440              ORL     A,#040H
010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
010F 7B00              MOV     R3,#00H
0111 7A42              MOV     R2,#042H
0113 7922              MOV     R1,#022H
0115 7D14              MOV     R5,#014H
0117 7C0C              MOV     R4,#0CH
0119 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 682
011C 904000            MOV     DPTR,#04000H
011F 7401              MOV     A,#01H
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 683
0122 7B00              MOV     R3,#00H
0124 7A42              MOV     R2,#042H
0126 7920              MOV     R1,#020H
0128 7D51              MOV     R5,#051H
012A 7C12              MOV     R4,#012H
012C 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 685
012F E4                CLR     A
0130 900000      R     MOV     DPTR,#pllLock
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 25  

0133 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 686
0134 7F19              MOV     R7,#019H
0136 FE                MOV     R6,A
0137 FD                MOV     R5,A
0138 FC                MOV     R4,A
0139 900000      R     MOV     DPTR,#timeout
013C 120000      E     LCALL   ?C?LSTXDATA
013F         ?C0027:
013F 900000      R     MOV     DPTR,#timeout
0142 120000      E     LCALL   ?C?LLDXDATA
0145 D3                SETB    C
0146 EF                MOV     A,R7
0147 9400              SUBB    A,#00H
0149 EE                MOV     A,R6
014A 9400              SUBB    A,#00H
014C 403B              JC      ?C0028
014E 900000      R     MOV     DPTR,#pllLock
0151 E0                MOVX    A,@DPTR
0152 FF                MOV     R7,A
0153 6403              XRL     A,#03H
0155 6032              JZ      ?C0028
                                           ; SOURCE LINE # 687
                                           ; SOURCE LINE # 688
0157 904225            MOV     DPTR,#04225H
015A E0                MOVX    A,@DPTR
015B 5401              ANL     A,#01H
015D FE                MOV     R6,A
015E EF                MOV     A,R7
015F 25E0              ADD     A,ACC
0161 4E                ORL     A,R6
0162 5403              ANL     A,#03H
0164 900000      R     MOV     DPTR,#pllLock
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 689
0168 E4                CLR     A
0169 7FE0              MOV     R7,#0E0H
016B 7E01              MOV     R6,#01H
016D FD                MOV     R5,A
016E FC                MOV     R4,A
016F 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 690
0172 900000      R     MOV     DPTR,#timeout
0175 120000      E     LCALL   ?C?LLDXDATA
0178 74FF              MOV     A,#0FFH
017A FB                MOV     R3,A
017B FA                MOV     R2,A
017C F9                MOV     R1,A
017D F8                MOV     R0,A
017E 120000      E     LCALL   ?C?LADD
0181 900000      R     MOV     DPTR,#timeout
0184 120000      E     LCALL   ?C?LSTXDATA
0187 80B6              SJMP    ?C0027
0189         ?C0028:
                                           ; SOURCE LINE # 692
0189 900000      R     MOV     DPTR,#timeout
018C 120000      E     LCALL   ?C?LLDXDATA
018F EF                MOV     A,R7
0190 4E                ORL     A,R6
0191 7005              JNZ     ?C0030
                                           ; SOURCE LINE # 693
                                           ; SOURCE LINE # 694
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 26  

0193 7F03              MOV     R7,#03H
0195 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 695
0198         ?C0030:
                                           ; SOURCE LINE # 698
0198 7B00              MOV     R3,#00H
019A 7A40              MOV     R2,#040H
019C 7904              MOV     R1,#04H
019E 7D00              MOV     R5,#00H
01A0 7C01              MOV     R4,#01H
01A2 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 699
01A5 904004            MOV     DPTR,#04004H
01A8 7407              MOV     A,#07H
01AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 700
01AB 904006            MOV     DPTR,#04006H
01AE E4                CLR     A
01AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 701
01B0 904008            MOV     DPTR,#04008H
01B3 7448              MOV     A,#048H
01B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 702
01B6 904004            MOV     DPTR,#04004H
01B9 E4                CLR     A
01BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 705
01BB 904009            MOV     DPTR,#04009H
01BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 706
01BF 904001            MOV     DPTR,#04001H
01C2 7402              MOV     A,#02H
01C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 708
01C5 9043A2            MOV     DPTR,#043A2H
01C8 E0                MOVX    A,@DPTR
01C9 447F              ORL     A,#07FH
01CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 709
01CC 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 731
                                           ; SOURCE LINE # 732
                                           ; SOURCE LINE # 733
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
;---- Variable 'bg_xover_inl_trim' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 734
0009 EF                MOV     A,R7
000A 5407              ANL     A,#07H
000C 90586E            MOV     DPTR,#0586EH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 735
0010 EF                MOV     A,R7
0011 C4                SWAP    A
0012 540F              ANL     A,#0FH
0014 A3                INC     DPTR
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 27  

0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 736
0016 905876            MOV     DPTR,#05876H
0019 7444              MOV     A,#044H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 737
001C 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 757
;---- Variable 'enabled' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 758
                                           ; SOURCE LINE # 759
0000 905876            MOV     DPTR,#05876H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
;---- Variable 'regValue' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 760
0005 EF                MOV     A,R7
0006 6003              JZ      ?C0033
                                           ; SOURCE LINE # 761
                                           ; SOURCE LINE # 762
0008 EE                MOV     A,R6
                                           ; SOURCE LINE # 763
0009 8001              SJMP    ?C0034
000B         ?C0033:
                                           ; SOURCE LINE # 765
                                           ; SOURCE LINE # 766
000B EE                MOV     A,R6
                                           ; SOURCE LINE # 767
000C         ?C0034:
                                           ; SOURCE LINE # 768
000C AF06              MOV     R7,AR6
000E 905876            MOV     DPTR,#05876H
0011 EE                MOV     A,R6
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 769
0013 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 791
                                           ; SOURCE LINE # 792
                                           ; SOURCE LINE # 826
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 828
                                           ; SOURCE LINE # 829
0016 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 832
0019 7B00              MOV     R3,#00H
001B 7A76              MOV     R2,#076H
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 28  

001D 7900              MOV     R1,#00H
001F 7D04              MOV     R5,#04H
0021 7C00              MOV     R4,#00H
0023 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 833
0026 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM1_VAL
0028 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM1_VAL
002A 7B00              MOV     R3,#00H
002C 7A76              MOV     R2,#076H
002E 7908              MOV     R1,#08H
0030 7F04              MOV     R7,#04H
0032 7E00              MOV     R6,#00H
0034 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 834
0037 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM2_VAL
0039 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM2_VAL
003B 7B00              MOV     R3,#00H
003D 7A76              MOV     R2,#076H
003F 7910              MOV     R1,#010H
0041 7F04              MOV     R7,#04H
0043 7E00              MOV     R6,#00H
0045 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 835
0048 7B00              MOV     R3,#00H
004A 7A76              MOV     R2,#076H
004C 7918              MOV     R1,#018H
004E 7D04              MOV     R5,#04H
0050 7C00              MOV     R4,#00H
0052 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 836
0055 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM4_VAL
0057 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM4_VAL
0059 7B00              MOV     R3,#00H
005B 7A76              MOV     R2,#076H
005D 7920              MOV     R1,#020H
005F 7F04              MOV     R7,#04H
0061 7E00              MOV     R6,#00H
0063 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 837
0066 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM5_VAL
0068 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM5_VAL
006A 7B00              MOV     R3,#00H
006C 7A76              MOV     R2,#076H
006E 7928              MOV     R1,#028H
0070 7F04              MOV     R7,#04H
0072 7E00              MOV     R6,#00H
0074 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 838
0077 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM6_VAL
0079 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM6_VAL
007B 7B00              MOV     R3,#00H
007D 7A76              MOV     R2,#076H
007F 7930              MOV     R1,#030H
0081 7F04              MOV     R7,#04H
0083 7E00              MOV     R6,#00H
0085 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 839
0088 7B00              MOV     R3,#00H
008A 7A76              MOV     R2,#076H
008C 7938              MOV     R1,#038H
008E 7D04              MOV     R5,#04H
0090 7C00              MOV     R4,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 29  

0092 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 842
0095 7B01              MOV     R3,#01H
0097 7A50              MOV     R2,#050H
0099 7903              MOV     R1,#03H
009B 120000      E     LCALL   _cyread8
009E EF                MOV     A,R7
009F 4402              ORL     A,#02H
00A1 FD                MOV     R5,A
00A2 7B01              MOV     R3,#01H
00A4 7A50              MOV     R2,#050H
00A6 7903              MOV     R1,#03H
00A8 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 843
00AB 7B01              MOV     R3,#01H
00AD 7A50              MOV     R2,#050H
00AF 7913              MOV     R1,#013H
00B1 120000      E     LCALL   _cyread8
00B4 EF                MOV     A,R7
00B5 4402              ORL     A,#02H
00B7 FD                MOV     R5,A
00B8 7B01              MOV     R3,#01H
00BA 7A50              MOV     R2,#050H
00BC 7913              MOV     R1,#013H
00BE 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 846
00C1 9043A0            MOV     DPTR,#043A0H
00C4 E0                MOVX    A,@DPTR
00C5 4440              ORL     A,#040H
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 847
00C8 9043C2            MOV     DPTR,#043C2H
00CB E0                MOVX    A,@DPTR
00CC 4410              ORL     A,#010H
00CE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 848
                                           ; SOURCE LINE # 852
00CF 7B08              MOV     R3,#08H
00D1 7A1F              MOV     R2,#01FH
00D3 79EC              MOV     R1,#0ECH
00D5 C003              PUSH    AR3
00D7 C002              PUSH    AR2
00D9 C001              PUSH    AR1
00DB 7B00              MOV     R3,#00H
00DD 7A51              MOV     R2,#051H
00DF 7902              MOV     R1,#02H
00E1 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E4 120000      E     LCALL   ?C?PSTXDATA
00E7 D001              POP     AR1
00E9 D002              POP     AR2
00EB D003              POP     AR3
00ED 7F08              MOV     R7,#08H
00EF 7E00              MOV     R6,#00H
00F1 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 853
00F4 7B08              MOV     R3,#08H
00F6 7A1F              MOV     R2,#01FH
00F8 79F4              MOV     R1,#0F4H
00FA C003              PUSH    AR3
00FC C002              PUSH    AR2
00FE C001              PUSH    AR1
0100 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 30  

0102 7A51              MOV     R2,#051H
0104 79C0              MOV     R1,#0C0H
0106 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0109 120000      E     LCALL   ?C?PSTXDATA
010C D001              POP     AR1
010E D002              POP     AR2
0110 D003              POP     AR3
0112 7F0A              MOV     R7,#0AH
0114 7E00              MOV     R6,#00H
0116 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 854
0119 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
011B 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
011D 7B00              MOV     R3,#00H
011F 7A51              MOV     R2,#051H
0121 79F0              MOV     R1,#0F0H
0123 7F0A              MOV     R7,#0AH
0125 7E00              MOV     R6,#00H
0127 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 855
012A 7C00        R     MOV     R4,#HIGH BS_IOPINS0_1_VAL
012C 7D00        R     MOV     R5,#LOW BS_IOPINS0_1_VAL
012E 7B00              MOV     R3,#00H
0130 7A51              MOV     R2,#051H
0132 7910              MOV     R1,#010H
0134 7F0A              MOV     R7,#0AH
0136 7E00              MOV     R6,#00H
0138 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 856
013B 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
013D 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
013F 7B00              MOV     R3,#00H
0141 7A51              MOV     R2,#051H
0143 7920              MOV     R1,#020H
0145 7F0A              MOV     R7,#0AH
0147 7E00              MOV     R6,#00H
0149 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 857
014C 9044F4            MOV     DPTR,#044F4H
014F 7401              MOV     A,#01H
0151 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 859
0152 904322            MOV     DPTR,#04322H
0155 E0                MOVX    A,@DPTR
0156 4408              ORL     A,#08H
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 860
0159 9046EC            MOV     DPTR,#046ECH
015C E0                MOVX    A,@DPTR
015D C3                CLR     C
015E 9405              SUBB    A,#05H
0160 5006              JNC     ?C0036
                                           ; SOURCE LINE # 861
                                           ; SOURCE LINE # 862
0162 904689            MOV     DPTR,#04689H
0165 743A              MOV     A,#03AH
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 863
0168         ?C0036:
                                           ; SOURCE LINE # 867
0168 904800            MOV     DPTR,#04800H
016B 74F1              MOV     A,#0F1H
C51 COMPILER V9.51   CYFITTER_CFG                                                          10/22/2015 22:07:37 PAGE 31  

016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
016E 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 871
0171 904800            MOV     DPTR,#04800H
0174 74B1              MOV     A,#0B1H
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 874
0177 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 877
017A 7B00              MOV     R3,#00H
017C 7A43              MOV     R2,#043H
017E 79A0              MOV     R1,#0A0H
0180 C001              PUSH    AR1
0182 79B0              MOV     R1,#0B0H
0184 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0187 120000      E     LCALL   ?C?PSTXDATA
018A D001              POP     AR1
018C 7F0E              MOV     R7,#0EH
018E 7E00              MOV     R6,#00H
0190 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 878
0193 9043B0            MOV     DPTR,#043B0H
0196 E0                MOVX    A,@DPTR
0197 54FD              ANL     A,#0FDH
0199 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 879
019A 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1168    ----
   CONSTANT SIZE    =   2743    ----
   XDATA SIZE       =      4       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
